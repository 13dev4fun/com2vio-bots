type,detail,comment,raw_code,label
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,this might need some fixes. consider all error paths. ,"    assert spark.sql(""SELECT begin_lat, begin_lon, driver, end_lat, end_lon, fare, partitionpath, rider, ts, uuid FROM hudi_ro_table"").except(insertQueryDataIn).except(updateQueryDataIn).count() == 0;",0
Unused method parameters should be removed,Remove these unused method parameters.,nit:  this can be on same line,                     PrimitiveType primitive) {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""0.0.0.0"" 4 times.",I think you miss the deletion of this?,"            grpcServer = new GRPCServer(Strings.isBlank(config.getGRPCHost()) ? ""0.0.0.0"" : config.getGRPCHost(), config",0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,Only this one is required. Recommend changing it to applyMathOperator(),"  abstract protected void transformDouble(double[] result, double[] values, int length);",0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".",Same errors as above.,"    double functionMTTDInHour = TimeUnit.HOURS.convert(detectionBucketSize * detectionWindowSize, detectionUnit);",0
Field names should comply with a naming convention,"Rename this field ""_ingestionTimestamp"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Any reason why we are not using primitives here? Consider high ingestion use cases, a single server serving multiple partitions. Will it generate more unnecessary garbage? We could use -1 for an invalid value?",  private Long _ingestionTimestamp;,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",TypeConverter looks better? I see the function is to convert type and would you please add some tests?,  public abstract static class TypeOptimizer implements Serializable {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,It would be nice to have a Jira ticket for all TODOs,    // TODO: support other target types in writeTo() if needed.,1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"nit: I think it would be cleaner if you combined the step and mode conditions in the same if statement instead of nesting them 

OR the other thing you could do is create a static multimap, then you could do something like urlparams.get(datatype).get(mode).get(step) here -- this might be overkill for these two configs since they only support 1 datatype each but just a thought. ","    if (dataType.equals(""PHOTOS"")) {
IfStmt       if (step == OAuth1Step.AUTHORIZATION) {
IfStmt         if (mode == AuthMode.EXPORT) {
BlockStmt           return ImmutableMap.of(PERMS, ""read"");
BlockStmt         } else {
ReturnStmt           return ImmutableMap.of(PERMS, ""write"");
ReturnStmt         }
ReturnStmt       }",1
Raw types should not be used,Provide the parametrized type for this generic.,"You don't need this variable `futureList`, just use `metrics.getIds().stream().map(...).forEach(...)`",            List<CompletableFuture> futureList = new ArrayList<>();,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"This change isn't very satisfying, right? Instead of being able to debug something, we run tests with debugging disabled.",                                         : ActionProvider.COMMAND_TEST //TODO: COMMAND_DEBUG_TEST is missing?,0
"Constructors should not be used to instantiate ""String"", ""BigInteger"", ""BigDecimal"" and primitive-wrapper classes","Remove this ""Integer"" constructor",Do we really need the new Integer() here?,                                    c1 = rset.get(new Integer(1));,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,public class NodeUrlUtils {,public class NodeUrlParseConvertUtils {,0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,"Should we use Duration or TimeGranularity instead of String, since we are converting it anyway?","  private final String DEFAULT_DATA_SLA = ""3_DAYS"";",0
Empty arrays and collections should be returned instead of null,Return an empty collection instead of null.,How about return an empty set instead of null to prevent NullPointerException. ,      return null;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""endTime"" 3 times.",Same concern about array and debug.,"            Arrays.toString(parameter.get(""endTime"")), Arrays.toString(parameter.get(""from"")));",0
Two branches in a conditional structure should not have exactly the same implementation,This branch's code block is the same as the block for the branch on line 243.,Grammar related exceptions seem `unhealth` to me. @hanahmily What do you think?,"        if (e instanceof InfluxDBIOException) {
IfStmt             healthChecker.unHealth(e);
IfStmt         } else if (!(e instanceof InfluxDBException)) {
ExpressionStmt             healthChecker.unHealth(e);",0
"Unused ""private"" fields should be removed","Remove this unused ""ALBUM_MAX_SIZE"" private field.",What's up with this formatting,	private final int       ALBUM_MAX_SIZE						= 5000;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"We have a RuntimeMetaException which supports formatting, should we create a RuntimeTException to supporting formatting ?","      throw new RuntimeException(errMsg, e);",1
"""String#replace"" should be preferred to ""String#replaceAll""","Replace this call to ""replaceAll()"" by a call to the ""replace()"" method.","Use `replace` instead of `replaceAll` to avoid regex match. The first replace can be optimized by passing in `char` instead of `String`. The whole method can be simplified to:
    return escapeMetaCharacters(value).replace('_', '.').replace(""%"", "".*"");","    return result.replaceAll(""%"", "".*"");",1
"""Collections.EMPTY_LIST"", ""EMPTY_MAP"", and ""EMPTY_SET"" should not be used","Replace ""Collections.EMPTY_LIST"" by ""Collections.emptyList()"".",Should use `Collections.emptyList()`,            return Collections.EMPTY_LIST;,1
Unnecessary imports should be removed,Remove this unused import 'io.dropwizard.hibernate.UnitOfWork'.,"unneeded import?
",import io.dropwizard.hibernate.UnitOfWork;,1
"Mutable fields should not be ""public static""","Make this member ""protected"".","Only contain tsfile, resource, mods",  public static final String[] DATA_FILE_SUFFIX =,0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",why deserialize do not implementation？ How to deserialize this execution plan?,  public void deserialize(ByteBuffer buffer) throws IllegalPathException {},0
"""switch"" statements should not have too many ""case"" clauses",Reduce the number of non-empty switch cases from 130 to at most 30.,I think you missed the `readFields()` method of `JournalEntity.java`,                case OperationType.OP_CREATE_SQL_BLOCK_RULE: {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Cost: {} ms, sql is {}"" 4 times.","          SLOW_SQL_LOGGER.info(""Cost: {} ms, sql is {}"", costTime, statement);","          SLOW_SQL_LOGGER.info(""Cost: {} ms, sql is {}"", costTime, t1);",0
Static non-final field names should comply with a naming convention,"Rename this field ""max_stream_load_timeout_second"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","You need to set the default value to a large value, I suggest to be same as `max_load_timeout_second`.
Otherwise, after online, some existing load job may fail to be submitted.",    public static int max_stream_load_timeout_second = 600; // 600s,0
"Unused ""private"" fields should be removed","Remove this unused ""sparkContext"" private field.",Looks like we don't need this var anymore.,  private final JavaSparkContext sparkContext;,1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""series"" is nullable here.","The `||` operation on `series != null` and `series.getValues().size() == 0` is somewhat confusing, is it a mistake?",        if (series != null || series.getValues().size() == 0) {,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""fieldSpec"" is nullable here.",This check is redundant. We already checked in the previous part and both of them are not `null`,      if ((fieldSpec == null && oldSchemaFieldSpec != null) || (fieldSpec != null && oldSchemaFieldSpec == null)) {,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""test1"" 5 times.","""http"" replace to pcTypeEnum.HTTP.getName()","        list.add(URIRegisterDTO.builder().appName(""test1"").rpcType(""http"").host(""localhost"").port(8091).build());",0
Unnecessary imports should be removed,Remove this unused import 'com.sun.rowset.internal.Row'.,what's this for?,import com.sun.rowset.internal.Row;,1
"""public static"" fields should be constant","Make this ""public static bdbje_lock_timeout_second"" field final",Is 1 second enough for most cases?,    public static int bdbje_lock_timeout_second = 1;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Nice!,  public void signatureTestWhiteSpace() throws Exception{,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""SitemapProcessor_"" 3 times.","I know it was already there: maybe simplify the job name in the message to simply ""SitemapProcessor"" and leave the path to the CrawlDb away?","            ""SitemapProcessor_"" + crawldb.toString(), job);",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"It is not a mock register center, it is real. Better to rename it ",public class MockedRegistryCenter {,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.", Are we still need this factory?,"    public volatile Map<UUID, AtomicLong> allRcvdMsgsMetricsByNodeId = new HashMap<>();",1
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"Strange parameters. I'd expect the method to call `WindowManager.getDefault()` itself.

Shouldn't the method return `Mode` or `null`? How can one distinguish between success and failure?","    public final static void createModeFromXml(WindowManager windowManager, String xml) {",0
Try-catch blocks should not be nested,Extract this nested try block into a separate method.,"Can you put one log msg here, to indicate the detection of the "".properties"" file change, like line 376 for "".job"" change?
",          try {,0
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,"If you intend to use the super-user, you may refer the account and password in IoTDBConstant.","          config.rpcPort + ""/"", ""root"", ""root"")) {",0
Unnecessary imports should be removed,Remove this unused import 'java.util.Collections'.,Do we need these imports?,import java.util.Collections;,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Start and end time are not Iso format; you might want to rename the variable.,"  public String runAutoTune(Long functionId, Long startTimeIso, Long endTimeIso, String autoTuneType) throws Exception {",0
Unused local variables should be removed,"Remove this unused ""configKeys"" local variable.","Remove this line, and ""import HashSet""",    Set<String> configKeys = new HashSet<>();,1
Static non-final field names should comply with a naming convention,"Rename this field ""default_db_replica_quota_size"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","The 1000000 is too small.  In meituan.com, the replica number for one database has exceeded 1000000. I think your initial value 1024 * 1024 * 1024 is OK.",    public static long default_db_replica_quota_size = 1000000;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"There is a way to use `Map.of`. Described in my [Run on JDK8, use JDK11 APIs post](http://wiki.apidesign.org/wiki/AlternativeImplementation) - if you believe this case deserves that design pattern (I don't), feel free to do implement it.","            // modules on modern JDKs should prefere immutable collections anyway, e.g Map.of();",0
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"It would be good to have `@since` flag here, and the module's specification version updated, + ideally apichanges.xml updated.
Also, possibly, deprecate the old API method above?",    public Tree BindingPattern(VariableTree vt) {,0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",why deserialize do not implementation？ How to deserialize this execution plan?,  public void deserialize(ByteBuffer buffer) throws IllegalPathException {},0
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,"All tests need to use the `Random` that is passed in so that the values that are generated are deterministic and repeatable. That's what allows us to generated an iterator instead of a list in some cases, and makes it so if we do have a problem, we can repeat the test and debug.",  private static final Random NEGATIVE_VALUES = new Random();,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Why do you comment it?,"    //    try {
MethodDeclaration     //      IoTDB.schemaProcessor.deleteLastCacheByDevice(deviceId);
MethodDeclaration     //    } catch (MetadataException e) {
MethodDeclaration     //      // the path doesn't cache in cluster mode now, ignore
MethodDeclaration     //    }",1
"""for"" loop stop conditions should be invariant",Refactor the code in order to not assign to this loop counter from within the loop body.,Can you restructure the (outer) loop so that it is a while with some condition rather than a `for(i = ..)` in which we change the loop counter? I understand it was already that way.,            i = -1;,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""!unknown!"".",Do we need to worry about the scenario if we have multiple dagManagers or is that not in scope of this PR?,          Collection<DagActionStore.DagAction> dagActions = dagActionStore.get().getDagActions();,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Same here,         * TODO: Fix in https://issues.apache.org/jira/browse/IGNITE-15285,0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,We better keep this method for compatibility.,"  public static Configuration fromMap(Map<String, String> map) {",0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,setThriftClass also change the method param name  to thriftClass,    public void set_thriftClass(String _thriftClass) {,1
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,Let's go with BIG_ENDIAN since we still write in BIG_ENDIAN to rocks,        assert buf.order() == ByteOrder.LITTLE_ENDIAN;,0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,"    String DORIS_FILTER_QUERY_IN_VALUE_MAX = ""doris.filter.query.in.max_count"";","    String DORIS_FILTER_QUERY_IN_VALUE_MAX = ""doris.filter.query.in.value.max"";",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"isn't this as simple as setting endingOffset = Math.min(endingOffset, startingOffset + maxRecordsLimit); 
I see maxRecordsLimit is not used as of now. or am I missing something",    // TODO support capping the amount of records fetched,0
Field names should comply with a naming convention,"Rename this field ""_sslContext"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",private,"  Map<String, String> _headers = new HashMap<>();
FieldDeclaration   String _scheme = CommonConstants.HTTP_PROTOCOL;
FieldDeclaration   SSLContext _sslContext = null;",0
Methods should not return constants,Remove this method and declare a constant for this value.,"Rather than overriding this several places and using a generic string here to avoid making this class abstract, I suggest passing the `MetadataTableType` in through the constructor so this just returns `tableType.name()`.","    return ""static"";",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Use logger.,              e.printStackTrace();,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,Would it be better to use logger instead?,"            System.out.println(elem.getKey() + "" "" + elem.getValue());",1
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","Can't this thing just be a `newDeltaFilePageStoreIoFuture` listener? Is there a necessity for a specific field and a specific functional interface? Looks over-engineered, but maybe I'm wrong",    private volatile @Nullable CompleteCreationDeltaFilePageStoreIoCallback completeCreationDeltaFilePageStoreIoCallback;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal "" has install."" 3 times.","                throw new UserException(""plugin "" + info.getName() + "" has already been installed."");","                throw new UserException(""plugin "" + info.getName() + "" has install."");",0
Boolean expressions should not be gratuitous,"Remove this expression which always evaluates to ""true""",Is there a case when `removedPreviousMetadata` will be null?,    if (deleteAfterCommit && removedPreviousMetadata != null) {,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""MV cast is not supported for type - "" 4 times.","(nit) suggest changing the message to `""Cast is not supported on multi-value column to target type: "" + targetType`","            throw new IllegalArgumentException(""MV cast is not supported for type - "" + targetType);",0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","Hi @rmpifer thanks for your contribution 
 It seems ` rec1.getKey()` equals  `rec2.getKey()` ? each of them is ok.","      return new HoodieRecord<T>(reducedKey, reducedData);",0
"Unused ""private"" fields should be removed","Remove this unused ""namingControl"" private field.","*[UnusedVariable](https://errorprone.info/bugpattern/UnusedVariable):*  The field SimpleName is never read.

(at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)

---

Was this a good recommendation?
[ [? Not relevant](https://www.sonatype.com/lift-comment-rating?comment=269943434&lift_comment_rating=1) ] - [ [? Won't fix](https://www.sonatype.com/lift-comment-rating?comment=269943434&lift_comment_rating=2) ] - [ [? Not critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=269943434&lift_comment_rating=3) ] - [ [? Critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=269943434&lift_comment_rating=4) ] - [ [? Critical, fixing now](https://www.sonatype.com/lift-comment-rating?comment=269943434&lift_comment_rating=5) ]",    private final NamingControl namingControl;,1
Unused local variables should be removed,"Remove this unused ""asslConfigs"" local variable.",Why not rename to `sslConfigs`?,"    Map<String, Object> asslConfigs = configs.entrySet().stream()",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"Let's name them `IntLongPair`, `LongLongPair` etc so that they are more generic, and can be reused in the future","    IntValueTimePair(27),",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,TODO with no ticket.,"            colChg.changeDefaultValue(col.defaultValue().toString()); // TODO: specify ""default type"" type",1
"Unused ""private"" fields should be removed","Remove this unused ""customInitScript"" private field.","Actually, I think it's not a good idea that introduce new field named `customInitScript` because this field is similar to `initScript`. Users may feel confused about those two fields. 
My proposal is using some special prefix. For example, if there is no prefix, means that read file from ""resources""; if the path has some special prefix, like ""file:/opt/xxx"" means that we read from file system. 
If we want, we could support read those files from remote server, for example supporting ""http://xxx/xxx/file"".

But actually, it's not a good idea either.  ",    private String customInitScript;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Unable to read the footer of the avro file: "" 3 times.",Wrong type here,"      throw new RuntimeException(""Unable to read the footer of the avro file: "" +",0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".","The unit is wrong. This is not a ""byte size"", but a ""number of"" replicas.",    public static long default_db_replica_quota_bytes = 1024 * 1024 * 1024;,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","It can't be null after `start`, are you sure that `@Nullable` is really necessary here?",    @Nullable private volatile StorageRoots storageRoots;,0
Nested blocks of code should not be left empty,Either remove or fill this block of code.,remove this,      } else {,1
Field names should comply with a naming convention,"Rename this field ""_segmentName"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",private final for all vars please,  String _segmentName;,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""count"".",Remove this.,    int count = batchIterator.totalLength();,1
Field names should comply with a naming convention,"Rename this field ""_mostRecentErrorRunMessage"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","  private final TreeMap<Long, String> _mostRecentErrorRunMessages;","  private final TreeMap<Long, String> _mostRecentErrorRunMessage;",0
Abstract classes without fields should be converted to interfaces,"Convert the abstract class ""CreateFixBase"" into an interface. (sonar.java.source not set. Assuming 8 or greater.)","This might deserve some versioning, but there is implementation dependency in java.lsp.server anyway:
                    <code-name-base>org.netbeans.modules.java.hints</code-name-base>
                    <build-prerequisite/>
                    <compile-dependency/>
                    <run-dependency>
                        <release-version>1</release-version>
                        <implementation-version/>
                    </run-dependency>",public abstract class CreateFixBase implements Fix {,0
Field names should comply with a naming convention,"Rename this field ""_brokerMetrics"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Why not put this in base class?,  private BrokerMetrics _brokerMetrics;,0
Unnecessary imports should be removed,Remove this unused import 'org.apache.ignite.internal.processors.cache.CacheGroupContext'.,Unused import,import org.apache.ignite.internal.processors.cache.CacheGroupContext;,1
Field names should comply with a naming convention,"Rename this field ""_inSegmentTrimLimit"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Since we need it for testing purpose, let's directly make it configurable as `_minSegmentTrimSize` and default to 5000",  private int _inSegmentTrimLimit = -1;,0
"Unused ""private"" fields should be removed","Remove this unused ""lastSelectedUnseqFiles"" private field.","It seems that these two fields are useless, please check.",  private List<TsFileResource> lastSelectedUnseqFiles;,1
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,"Maybe a silly question, do we need to do this?  Will it be backward compatible if we just have everything go to ContentScanTask version given its a supertype?","  public static Map<Integer, ?> constantsMap(FileScanTask task, BiFunction<Type, Object, Object> convertConstant) {",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,这个license不需要了吧？直接去掉吧？,"// Licensed under the Apache License, Version 2.0 (the ""License"");",1
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),Would it be possible to use the RequestProcessor API ? That way the default Lookup (and connection to the appropriate LSP client) will be transferred to the `supplier` thread.,                CompletableFuture.supplyAsync(supplier).thenAccept(t -> {,1
Field names should comply with a naming convention,"Rename this field ""Onboard_Resource_ENDPOINT"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","1. Make these variables static and final.
2. Capitalize these variable names.","  private String Onboard_Resource_ENDPOINT = ""/onboard/"";",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Good questions!

### 1. getFormattedMessage/getMessage/getParameters

JUL `LogRecord` and the log4j-api `Message` are similar in that they both provide a raw format string, and a parameter array. However, the log4j-api encodes how the format and parameters are combined in the `Message` implementation (`getFormattedMessage` + `formatTo(StringBuilder)` handle formatting) where JUL (default formatters anyhow) use [java.text.MessageFormat.format](https://github.com/openjdk/jdk/blob/dfacda488bfbe2e11e8d607a6d08527710286982/src/java.logging/share/classes/java/util/logging/Formatter.java#L92-L150).

Given that, we don't want to use `getFormat()` and definitely don't want to set the parameters here, otherwise there's JUL may do substitution on the user-provided message...and we don't want to go there again ;-)

### 2. Logger name/fqcn

We definitely want to set the logger name to `getName` which is the name of the logger as requested from the LogManager.
The `fqcn` is the fully qualified name of the logger implementation, e.g. `org.apache.logging.log4j.tojul.JULLogger`. This is useful to find the call-site, where we can traverse just above that fqcn. JUL supports this sort of thing using `getSourceClassName ` and `getSourceMethodName`, so it may be a good idea to support the functionality here, otherwise the `LogRecord` will always report `JULLogger.logMessage` as the caller. I'd subclass LogRecord to lazily evaluate the call-site when it's requested given the compute cost of StackWalker/etc.","        LogRecord record = new LogRecord(julLevel, message.getFormattedMessage()); // TODO getFormat() or getFormattedMessage() ?
ExpressionStmt         record.setLoggerName(getName()); // TODO getName() or fqcn parameter? What's that?
ExpressionStmt         record.setParameters(message.getParameters());",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,I'll create a follow-up PR.,        // TODO: response.setBreakpoints(...);,1
"""@Deprecated"" code should not be used","Remove this use of ""newInstance""; it is deprecated.","Perhaps we should add a runtime check to ensure we're not instantiating arbitrary unexpected classes?
java
if (AsyncWaitStrategyFactory.class.isAssignableFrom(klass)) {
    return klass.newInstance();
}
LOGGER.error(""Factory '{}' is not assignable to AsyncWaitStrategyFactory"", factoryClassName);
return null;","            final Class<? extends AsyncWaitStrategyFactory> klass = (Class<? extends AsyncWaitStrategyFactory>) Loader.loadClass(factoryClassName);
CatchClause             return klass.newInstance();",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""tables"" 15 times.",Use the Constant `TABLES` you created here.,"    return StringUtil.join(""/"", StringUtils.chomp(_baseUrl, ""/""), ""tenants"", tenantName, ""tables"");",1
Collection.isEmpty() should be used to test for emptiness,Use isEmpty() to check whether the collection is empty or not.,Wouldn't an easier check be to check if limitAndOffset.size() == 0 ? I don't think you need an explicit boolean to determine when to get all in that case.,    if (conditions.size() == 0 && (this.getGetAll() == null || !this.getGetAll())) {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,I guess you should make your mind. There is nobody to answer that TODO question otherwise. Or am I wrong @mkleint?,                File file = s.getFile(); // TODO perhaps needs patching,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Will we implement this in a follow-up?,    // TODO: handle namespaces,1
Raw types should not be used,Provide the parametrized type for this generic.,Better define this `60` as a static field in frontend of the class,"        return newDaemonThreadPool(0, maxNumThread, 60L, TimeUnit.SECONDS, new SynchronousQueue(), new LogDiscardPolicy(poolName), poolName);",0
Return values should not be ignored when they contain the operation status code,"Do something with the ""boolean"" value returned by ""delete"".",Don't forget to close FileChannel in finally block~,"      try (FileOutputStream fileOutputStream = new FileOutputStream(tmpFile);
BlockStmt           FileChannel fileChannel = fileOutputStream.getChannel()) {
BlockStmt         fileChannel.write(byteBuffer);
BlockStmt       }
BlockStmt       // rename file
BlockStmt       return tmpFile.renameTo(snapshotFile);
BlockStmt     } finally {
ExpressionStmt       unlockAllRead();
ExpressionStmt       byteBuffer.clear();
ExpressionStmt       // with or without success, delete temporary files anyway
ExpressionStmt       tmpFile.delete();",0
"Unused ""private"" fields should be removed","Remove this unused ""wechatSetting"" private field.",Different naming style. Please fix.,"    private SlackSettings slacks;
FieldDeclaration     private WechatSettings wechatSetting;",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Split into multi classes.,public class InfluxDBUtils {,0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,"Wow.  That can be a thing?  Yeesh. 
",    if (type.getSimpleName().length() == 0) {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,can you elaborate on this TODO?,    // TODO: resumable uploads https://developers.google.com/photos/library/guides/resumable-uploads,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""
1) "" 20 times.","Ha.  Can you actually change all these to assertEquals(1, expected.getErrorMessages().size()) ? ... not sure why I didn't do that in the first place.
","      assertContains(expected.getMessage(), ""\n1) "" + jitFailed(ScopedFooImpl.class));",0
"Unused ""private"" fields should be removed","Remove this unused ""WRONG_TYPE_MESSAGE"" private field.",Remove it :D,  private final String WRONG_TYPE_MESSAGE =,1
Methods should not have too many parameters,"Method has 9 parameters, which is greater than 7 authorized.","rename this to ingraphDashboardConfig
","  public String createMetricConfig(@QueryParam(""name"") String name,",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Can we use a more concrete exception class like IOException? Using Exception kind of defeats the purpose of static exception checking.
",  private void commitDataset(JobState.DatasetState datasetState) throws Exception {,1
Unused local variables should be removed,"Remove this unused ""gf"" local variable.",Unused variable.,        GradleFiles gf = ((NbGradleProjectImpl) project).getGradleFiles();,1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","@yihua @xushiyan let's chat more on this to make sure we're aligned on the approach going f/w:

I was thinking of keeping this component file-format agnostic and instead make it engine-specific, while refactoring MOR table read-path for efficient querying. 

Can you elaborate what's the goal you're striving for w/ `HoodieAvroRecord`?

P.S. Putting this context in here for somebody who might not be aware of previous conversations",public abstract class HoodieRecord<T> implements Serializable {,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Use Utils.rethrow() to preserve the original exception. ,"      throw new RuntimeException(""Caught exception while initializing PinotFSFactory"", e);",1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"This doesn't belong to the core, please move to the plugin.",    public static class GRPCLog {,0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"Good questions!

### 1. getFormattedMessage/getMessage/getParameters

JUL `LogRecord` and the log4j-api `Message` are similar in that they both provide a raw format string, and a parameter array. However, the log4j-api encodes how the format and parameters are combined in the `Message` implementation (`getFormattedMessage` + `formatTo(StringBuilder)` handle formatting) where JUL (default formatters anyhow) use [java.text.MessageFormat.format](https://github.com/openjdk/jdk/blob/dfacda488bfbe2e11e8d607a6d08527710286982/src/java.logging/share/classes/java/util/logging/Formatter.java#L92-L150).

Given that, we don't want to use `getFormat()` and definitely don't want to set the parameters here, otherwise there's JUL may do substitution on the user-provided message...and we don't want to go there again ;-)

### 2. Logger name/fqcn

We definitely want to set the logger name to `getName` which is the name of the logger as requested from the LogManager.
The `fqcn` is the fully qualified name of the logger implementation, e.g. `org.apache.logging.log4j.tojul.JULLogger`. This is useful to find the call-site, where we can traverse just above that fqcn. JUL supports this sort of thing using `getSourceClassName ` and `getSourceMethodName`, so it may be a good idea to support the functionality here, otherwise the `LogRecord` will always report `JULLogger.logMessage` as the caller. I'd subclass LogRecord to lazily evaluate the call-site when it's requested given the compute cost of StackWalker/etc.","        LogRecord record = new LogRecord(julLevel, message.getFormattedMessage()); // TODO getFormat() or getFormattedMessage() ?
ExpressionStmt         record.setLoggerName(getName()); // TODO getName() or fqcn parameter? What's that?
ExpressionStmt         record.setParameters(message.getParameters());",0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","Does this really need a recursive call to reproduce? Weird!
",      private static final ThreadLocal<Boolean> recursiveCall = new ThreadLocal<Boolean>();,0
"""public static"" fields should be constant","Make this ""public static EXCLUDED_CLIENT_TRACING_PEERS"" field final",Do you forget to remove all these?,            public static List<String> EXCLUDED_CLIENT_TRACING_PEERS = new LinkedList<>();,0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,"This API currently returns a String. please keep the return type the same, we can change the types in the new APIs that you have added.","  public List<Map<String, String>> getServerToSegmentsMapDeprecated2(",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"Changes the ordinal of ConfigPhysicalPlanType, may produce serialize problem","  OfferRegionMaintainTasks,",0
Field names should comply with a naming convention,"Rename this field ""_values"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Make it a map to accelerate the lookup?,  private final String[] _values;,0
"Non-primitive fields should not be ""volatile""","Use an ""AtomicReferenceArray"" instead.","Volatile applies only to reading the array pointer, but not to accessing the elements of the array. Is that OK?

It might be. The value of `waitFor` is only changed in `updateWaitFor` method. The elements of that array are obtained from `HoldInstance.getTask()` which reads them from a `cookie` field. The values of the field are however poly(or even mega)-morphic. The most common `Task` in there is going to be `FolderInstance` representing a subfolder.  `FolderInstance.waitFinished()` is accessing:
- `err` - let's make it `final`
- `container` - let's make it `final` too
- `recognizingTask` - indirectly via `checkRecognizingStarted` method - that field is guarded by `synchronize(this)`
- `creationTask` - shouldn't this field be `volatile` or guarded by `synchronize(this)` as well?
- `waitFor` - addressed by this change

it's a mess. I am sorry, obviously (there is some `synchronized` used) I had tried in the past, but not enough...",    private volatile Task[] waitFor;,1
Unused method parameters should be removed,"Remove this unused method parameter ""kafkaMetadata"".","I'd rename this to `getPartitionCount`
",  private static int getNPartitions(KafkaStreamMetadata kafkaMetadata) {,0
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,use `Connection conn = EnvFactory.getEnv().getConnection()`,"            DriverManager.getConnection(""jdbc:iotdb://127.0.0.1:6667/"", ""root"", ""root"");",1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,package private?,public class GoogleContactsConstants {,1
Anonymous inner classes containing only one method should become lambdas,Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.),Just a personal preference - this comparison could be written using lambda function which looks more compact.,"          jiraIssues = StreamSupport.stream(issues.spliterator(), false).sorted(new Comparator<Issue>() {",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""dateToCheckInMS"" 6 times.","Remember to come back to this line and decide whether start and end should be exclusive or inclusive, respectively.","    Predicate timePredicate = Predicate.AND(Predicate.GT(""dateToCheckInMS"", startTime), Predicate.LT(""dateToCheckInMS"", endTime));",0
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @deprecated Javadoc tag.,nextId is a not used variable which can be removed.,    private AtomicLong nextId = new AtomicLong(NEXT_ID_INIT_VALUE);,0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""newLeaderNode"".",TODO replace `findAny()` by select the low load node?,        regionReplicaNodes.stream().filter(e -> !e.equals(tDataNodeLocation)).findAny();,0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",This can be removed once we have the base class init,"  public void init(Configuration configuration, TableConfig tableConfig, ZkHelixPropertyStore<ZNRecord> propertyStore, BrokerMetrics brokerMetrics) {",1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",do these need a `@Override`?,  public void onStart(final PathAlterationObserver observer) {,0
"Fields in a ""Serializable"" class should either be transient or serializable","Make ""pageMemory"" transient or serializable.","Segment class is inner, so you can just use `PersistentPageMemory.this`",        private final PersistentPageMemory pageMemory;,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Can we put this as `LOGGER.error`?,          e.printStackTrace();,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Unable to read the footer of the avro file: "" 3 times.",Wrong file type here,"      throw new RuntimeException(""Unable to read the footer of the avro file: "" +",0
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,  public boolean isEnableHttps() {,  public boolean isEnable_https() {,1
Unused method parameters should be removed,"Remove this unused method parameter ""orderingVal"".",would all existing payloads be forced to implement this new constructor?,"  public HoodieMetadataPayload(GenericRecord record, Comparable<?> orderingVal) {",0
Field names should comply with a naming convention,"Rename this field ""_argument"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Let's put the member variables in front of the methods,  private TransformFunction _argument;,0
"Track uses of ""FIXME"" tags",Take the required action to fix the issue indicated by this comment.,"On this note, can you add some comments on GenericRow as to how MULTIPLE_RECORDS_KEY is used for (in GenericRow class) and also document it in the decoders description in the documentation? It seems to be used only in test files now, and there is no doc on what it means. Thanks.

It looks like the MULTIPLE stuff is a decoder feature. So, when you add a FIXME like this, does this mean that the decoders using multiple recorsd key will break? Or, will they simply not be able to use filters? When is this planned to be fixed? Is this just an interim state from which we should take care not to cut a release? Is this work in progress?",                // FIXME: MULTIPLE_RECORDS_KEY is not handled here,1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","Is a thread local really necessary to trigger this?
",      private static final ThreadLocal<Boolean> recursiveCall = new ThreadLocal<Boolean>();,0
Unnecessary imports should be removed,Remove this unused import 'org.apache.ignite.internal.processors.metric.MetricRegistry'.,Unused import,import org.apache.ignite.internal.processors.metric.MetricRegistry;,1
Raw types should not be used,Provide the parametrized type for this generic.,let's add a comment on what these two maps hold.,"    private static final Map<Pair<Class, Boolean>, Schema> SCHEMA_CACHE = new ConcurrentHashMap<>();",0
"""public static"" fields should be constant","Make this ""public static LOG_BODY_TYPE"" field final",Why use `int` rather than `Enum`?,            public static int LOG_BODY_TYPE = 2;,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Maybe the test should be failed here.,      e.printStackTrace();,0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""spec"".","Why was this changed back? This is breaking the deployment again. This was fixed correctly
","        new TimeSpec(timeFieldSpec.getOutgoingTimeColumnName(), outputGranularity, format);",0
Methods should not have too many parameters,"Method has 18 parameters, which is greater than 7 authorized.","It seems like to run `bootstrap` command, it will be mandatory for the user to himself create the `target Hudi location` and connect to it before being able to perform bootstrap. I remember discussing once about this, but can you help me understand again what is the challenge in supporting this end to end without requiring to connect to a table ?

I see `HDFSParquetImportCommand` being able to do this end to end, creating the target table itself without requiring the user to do it.
",  public String bootstrap(,0
Boolean literals should not be redundant,Remove the unnecessary boolean literal.,lets have one boolean for each. and can we deal with empty maps instead of nulls.,      boolean hasAppendFiles = pm.getRollbackLogFiles() != null ? pm.getRollbackLogFiles().values().stream().mapToLong(Long::longValue).sum() > 0 : false;,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Why comment this check?  better to remove thie code,"            // checkLabelUsed(database.getId(), request.getLabel(), request.getRequest_id());",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,realtime?,"    throw new RuntimeException(""Cannot get offline metadata for table "" + tableNameWithType);",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Make it the same as `getTableConfig()` because the return value is nullable,"        throw new RuntimeException(""Unable to get schema"");",0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,variable name should start with lowercase letter.,"    HashMap<Long, String> IdNameTagMap = new HashMap<>();",1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",public abstract class FlatMeasurementCollector<T> extends CollectorTraverser<T> {,public abstract class MeasurementFlatCollector<T> extends CollectorTraverser<T> {,0
"""@Deprecated"" code should not be used","Remove this use of ""Integer""; it is deprecated.",Do we really need the new Integer() here?,                                    c1 = rset.get(new Integer(1));,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Do you have answers now?,"  // TODO What's the use of the field, the super class has the paths field",1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,user logger for the exception?,      e.printStackTrace();,1
Static non-final field names should comply with a naming convention,"Rename this field ""EXECUTE_ITR_COUNT"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Can we just rename this to REPEAT_COUNT and use it that way (if that's the intention) ?,"    private static String EXECUTE_ITR_COUNT = ""execute_itr_count"";",1
"Boxed ""Boolean"" should be avoided in boolean expressions",Use the primitive boolean expression here.,maybe include a check of to see if none of the other args have been matched.,        if (cfg.help || args.length == 0) {,0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",What is this empty method for?,    private void onDataValueChanged() {,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Why do you need to throw exception before execute method？,        MethodInterceptResult result) throws Throwable;,0
Field names should comply with a naming convention,"Rename this field ""_escapeCharacter"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Should we have a default escape character? Or use `null` as default? Current default will be `'\0'`,  private char _escapeCharacter;,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""taskIds"".","Rename to CreateMonitorTaskId
",      List<Long> taskIds = createAnomalyTasks(anomalyJobSpecs);,0
"""throws"" declarations should not be superfluous",Remove the declaration of thrown exception 'java.io.FileNotFoundException' which is a subclass of 'java.io.IOException'.,"FileNotFound extends IOE - its ok to put it in the throws line, but might be better to do it consistently whereever we can throw FNF. Its unclear why its being called out only here.","  public abstract String[] listFiles(URI segmentUri) throws FileNotFoundException, IOException;",1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"Should we skip the null bitmap update?
Suggest moving the null handling check outside of the for loop",      if (_isNullHandlingEnabled && columnDataTypes[i] != ColumnDataType.OBJECT) {,0
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""oldVal"" parameter (sonar.java.source not set. Assuming 8 or greater.)","Along with this change, can we also make commit timestamp millisec granularity ? High level, don't see any backwards compatibility moving to lower granularity as long as all commit timestamps (for all actions) uses same granularity ? ",    lastInstantTime.updateAndGet((oldVal) -> {,0
"""public static"" fields should be constant","Make this ""public static TOPIC_MANAGEMENT"" field final",How are these topic(s) created?,"            public static String TOPIC_MANAGEMENT = ""skywalking-management"";",0
Local variables should not shadow class fields,"Rename ""bucketNum"" which hides the field declared at line 65.","`.get(partition)` -> `computeIfAbsent(partition, p -> new HashMap<>())`","    final int bucketNum = BucketIdentifier.getBucketId(hoodieKey, indexKeyFields, this.bucketNum);",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,Append them to the end for better compatibility?,"  PreCreatePipe,
EnumConstantDeclaration   SetPipeStatus,
EnumConstantDeclaration   ShowPipe,",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Transferred {} to 'failure' due to {}"" 3 times.","If we have multiple exception catches the do the same thing, maybe we shouldn't have separate catches.  It is just repeated code","            logger.info(""Transferred {} to 'failure' due to {}"", new Object[] { flowFile, e.toString() });",0
Unnecessary imports should be removed,Remove this unused import 'java.net.InetSocketAddress'.,"nit: same here, no longer in use.","import java.net.InetAddress;
ImportDeclaration import java.net.InetSocketAddress;",1
Unused assignments should be removed,"Remove this useless assignment to local variable ""configKeys"".","Remove this line, and ""import HashSet""",    Set<String> configKeys = new HashSet<>();,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"not clear what the `String` key reflects... hence where the todo fits against what's implemented now

my naming convention (clearly not what's used already in the project) is to name maps with a `byX` suffix, so e.g. `startSlaExceededMetersByExecutorId`

UPDATE: now, after reading the entire PR, I understand the TODO as the intent to expand into other per-executor metrics.  the way you phrased it at the implementation level initially distracted me.  so then, two Qs:
a. why is the pre-processing required, rather than the JIT initialization/vivication you do now (e.g. the `computeIfAbsent`)?
b. any other per-executor stats in mind?","        // TODO: create a map of RatioGauges for success/failed per executor, will require preprocessing of available executors
CatchClause         Map<String, ContextAwareMeter> startSlaExceededMeters = Maps.newConcurrentMap();",0
Unused assignments should be removed,"Remove this useless assignment to local variable ""checkRealtimeFreshness"".","This condition checks are confusing. 
The first condition checks if a valid realtimeFreshness is set or not. The second condition checks if both checks are enabled and warns saying it will choose freshness based checker over offset based checker. 

so, if my config has offsetBasedConsumptionStatusChecker = true, freshnessBasedConsumptionStatusCheckerEnabled = true and realtimeMinFreshness = -50, the logs will be very confusing. 

It seems simpler to do this: if both are setup, choose freshness based check and use default freshness value if the minFreshness is not configured correctly. Also, the check for the correct config value can be moved further down Line 298 `if (isFreshnessStatusCheckerEnabled) { `

nit: the boolean `checkRealtimeFreshness` is unused



","    if (isFreshnessStatusCheckerEnabled && realtimeMinFreshnessMs <= 0) {
ExpressionStmt       LOGGER.warn(""Realtime min freshness {} must be > 0. Will not setup freshness based checker."", realtimeMinFreshnessMs);
IfStmt     }
IfStmt     if (isFreshnessStatusCheckerEnabled && isOffsetBasedConsumptionStatusCheckerEnabled) {
ExpressionStmt       LOGGER.warn(""Offset and Freshness checkers both enabled. Will only setup freshness based checker."");
ExpressionStmt     }
ExpressionStmt     boolean checkRealtimeFreshness = realtimeMinFreshnessMs > 0;",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""javaTS"" is nullable here.",check if `javaTS` is not null and that `javaTS.movePrevious` actually didn't return `false` (there would be no token for `javaTS.token()`,        javaTS.movePrevious();,1
Methods should not have too many parameters,"Constructor has 14 parameters, which is greater than 7 authorized.",`private` and accessible via accessor. Great.,"    private Completion(String label, Kind kind, List<Tag> tags, CompletableFuture<String> detail, CompletableFuture<String> documentation,",0
"Mutable fields should not be ""public static""","Make this member ""protected"".","The properties should be instance level, according to your latest update. This should be named as `INSTANCE_PROPERTIES`, and documents is required to update.","        public static Map<String, String> PROPERTIES = new HashMap<String, String>();",0
Class variable fields should not have public accessibility,Make sqlArgumentsList a static final constant or non-public and provide accessors if needed.,"There is no synchronization control over the  add and remove of sqlArgumentsList(ArrayList) , it may have some concurrent errors in the modification of arrayList. ",  public static List<SqlArgument> sqlArgumentsList = new ArrayList<>();,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Wrong type here,"      throw new RuntimeException(""Unable to read the footer of the avro file: "" +",1
Static non-final field names should comply with a naming convention,"Rename this field ""_detectedOS"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",It would be better to make it final and do the detection when the class is initialised.,  protected static OSType _detectedOS;,0
"""java.nio.Files#delete"" should be preferred","Use ""java.nio.file.Files#delete"" here for better messages on error conditions.",          Files.delete(mergeLog.toPath());,          mergeLog.delete();,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""badResponses"" 3 times.","Should we count this as ""exceptions""?","  NO_SERVING_HOST_FOR_SEGMENT(""badResponses"", false);",0
Lambdas containing only one statement should not nest this statement in a block,Remove useless curly braces around statement and then remove useless return keyword (sonar.java.source not set. Assuming 8 or greater.),"if the ip:port is the same,but httpclient config properties are different, how to fix this situation?
i think you should create one object to keep them as the clients cache's key, at least adress and httpclient configuration should be included. ","        ReferenceCountedClient referenceCountedClient = clients.computeIfAbsent(url.getAddress(), _key -> {",0
"Loops should not contain more than a single ""break"" or ""continue"" statement",Reduce the total number of break and continue statements in this loop to use at most one.,"I think the second check is now superfluous since we checked above.

                        if ( childDataUpdater.compareAndSet(this, oldChildData, toUpdate) )
                        {
                            publishEvent(isLive(oldChildData) ? TreeCacheEvent.Type.NODE_UPDATED : TreeCacheEvent.Type.NODE_ADDED, toPublish);
                            break;
                        }",                            break;,1
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,"lets ensure we don't delete all partition paths, but just 1 or 2. ","    assert spark.sql(""SELECT begin_lat, begin_lon, driver, end_lat, end_lon, fare, partitionpath, rider, ts, uuid FROM hudi_ro_table"").except(beforeDeleteByPartition).count() == 0;",0
Unnecessary imports should be removed,Remove this unused import 'java.util.stream.Collectors'.,This unused import could be removed,import java.util.stream.Collectors;,1
Field names should comply with a naming convention,"Rename this field ""_matchingValues"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Storing `Set<ByteArray>` should be faster.,    final Set<String> _matchingValues;,0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,It's better to use antlr to handle the parsing process.,"  public static Point recordToPoint(String record, TimeUnit precision) {",0
Class variable fields should not have public accessibility,Make DEFAULT_EXPECTED_COMPLETENESS a static final constant or non-public and provide accessors if needed.,"This class could be deleted.
Let's delete everything under /completeness.checker",  public static double DEFAULT_EXPECTED_COMPLETENESS = 80;,0
Field names should comply with a naming convention,"Rename this field ""PHOTO_TITLE_FORBIDDEN_CHARACTERS"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",static on both for constants,"    private final String    PHOTO_TITLE_FORBIDDEN_CHARACTERS    = ""~\""#%&*:<>?/\\{|}"";",0
Lambdas containing only one statement should not nest this statement in a block,Remove useless curly braces around statement (sonar.java.source not set. Assuming 8 or greater.),"The block is unnecessary because there is only one expression, can you remove it?",        .run(index -> {,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,remove e.printStackTrace(),            e.printStackTrace();,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Can you log issues in Jira for these 2 TODO's and also link to the original https://issues.apache.org/jira/browse/NUTCH-2296 Thanks
",//TODO trust self signed and non matching certs: http://stackoverflow.com/questions/2893819/telling-java-to-accept-self-signed-ssl-certificate,1
Field names should comply with a naming convention,"Rename this field ""_overflowMap"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","We are using an on-heap map? Is every new entry going to go through this map? If so, then the total garbage will remain the same?","    private final Map<Object, Integer> _overflowMap;",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Seems most of this types of classes in Gobblin are named ""xxxUtils""
",public class SqlQueryHelper {,0
Static non-final field names should comply with a naming convention,"Rename this field ""DISABLED_PLUGINS"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Same performance concern. Prefer `LinkedList`.,        public static List DISABLED_PLUGINS = new ArrayList();,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""$expr0"" 3 times.","What if the tree is not an `IdentifierTree`? E.g.:
if (o.a instanceof String) {} else if (o.a instanceof Number) else {}

Will the hint fail with a ClassCastException? (I am not saying it should rewrite that - that is up to a discussion, but it should not crash with a CCE.)","        Name expr0 = ((IdentifierTree) ctx.getVariables().get(""$expr0"").getLeaf()).getName();",0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"Remove the ""_"" prefix",  private void init(PropertiesConfiguration _segmentMetadataPropertiesConfiguration) {,1
Field names should comply with a naming convention,"Rename this field ""_thresholdMinPercentDictionaryStorageSaved"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Suggest changing it to `_dictionarySizeRatioThreshold` (feel free to rename), and make it default to 1.0. In certain cases we might prefer raw index even if its size is slightly larger because that can avoid the two hops lookup, and provide better locality.",  private double _thresholdMinPercentDictionaryStorageSaved;,0
Field names should comply with a naming convention,"Rename this field ""AbstractChunkReader"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",lowercase it,  protected AbstractChunkReader AbstractChunkReader;,1
"Classes from ""sun.*"" packages should not be used",Use classes from the Java API instead of Sun classes.,what's this for?,import com.sun.rowset.internal.Row;,0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,nit: seems possible to name more precisely - maybe `initializeCoreMetadataTags` or `initBaseEventTags`?,"  public static List<? extends Tag<?>> addAdditionalMetadataTags(Properties jobProps,",0
Field names should comply with a naming convention,"Rename this field ""_numArguments"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",transformExpression -> closure ,  private final int _numArguments;,0
Jump statements should not be redundant,Remove this redundant jump.,"Jackpot:
warning: Unnecessary return statement",            return;,1
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.db.engine.modification.ModificationFile'.,Remove the useless import,"import org.apache.iotdb.db.engine.merge.manage.MergeManager;
ImportDeclaration import org.apache.iotdb.db.engine.merge.manage.MergeResource;
ImportDeclaration import org.apache.iotdb.db.engine.merge.selector.IMergeFileSelector;
ImportDeclaration import org.apache.iotdb.db.engine.merge.task.MergeTask;
ImportDeclaration import org.apache.iotdb.db.engine.modification.ModificationFile;",1
"Unused ""private"" fields should be removed","Remove this unused ""log"" private field.",unused field,    private final IgniteLogger log;,1
"Unused ""private"" fields should be removed","Remove this unused ""configuration"" private field.","*SameNameButDifferent:*  The name `configuration;` refers to [java.lang.SuppressWarnings, lombok.Generated, java.lang.String] within this file. It may be confusing to have the same name refer to multiple types. Consider qualifying them for clarity. [(details)](https://errorprone.info/bugpattern/SameNameButDifferent)

(at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)",    private String configuration;,0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,is THis only used for alertGroupMerger?,  private final long DEFAULT_MAX_ALLOWED_MERGE_GAP = 14400000L;,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",It seems unnecessary to create a new ArrayList.,"        List<Map<String, Object>> dataVersionList = new ArrayList<Map<String, Object>>();",1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"We need to polish this, comments and explanations are missing. ",public class JVMUtil {,0
"""public static"" fields should be constant","Make this ""public static PACKAGE_MATCH_REGEX_EXPRESSION"" field final","1. I think this is the Class Name match? Not a package name?
1. The default value should be empty, which is more high-efficiency.","            public static String PACKAGE_MATCH_REGEX_EXPRESSION = "".*"";",0
Static non-final field names should comply with a naming convention,"Rename this field ""LOG"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",  private static final Logger LOG = LoggerFactory.getLogger(TSMIterator.class);,  private static Logger LOG = LoggerFactory.getLogger(TSMIterator.class);,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",You don't need to make this volatile and set it to null in close(). This issue has been addressed in #4764,  private volatile PinotDataBitSetV2 _dataBitSet;,1
URIs should not be hardcoded,Remove this hard-coded path-delimiter.,"Would be good to use utility methods for those, I'm pretty sure there's a method that builds a property store znode path given a table and segment name.
","    final String oldZnodePath = PinotRealtimeSegmentManager.getSegmentsPath() + ""/"" + realtimeTableName + ""/"" + committingSegmentNameStr;",0
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,Just use ThreadLocalRandom?,    Random rand = new Random(System.currentTimeMillis());,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Should some additional information be logged, e.g. the request?",      throw new RuntimeException(e);,1
Unused method parameters should be removed,"Remove this unused method parameter ""doDeepTest"".",I think `doDeepTest` is now unused?,"    private boolean isJsFunctionAvailable(ScriptEngine eng, String functionName, boolean doDeepTest) {",1
"Unused ""private"" fields should be removed","Remove this unused ""DEBUG_LOGGER"" private field.",Is this used?,"  private static final Logger DEBUG_LOGGER = LoggerFactory.getLogger(""QUERY_DEBUG"");",1
"""equals(Object obj)"" should be overridden along with the ""compareTo(T obj)"" method","Override ""equals(Object obj)"" to comply with the contract of the ""compareTo(T o)"" method.","The comparison logic should be within the aggregation function, so that we can reuse this pair for `FIRST`",  public int compareTo(ValueTimePair<V> o) {,1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""bufferWriteProcessor"" is nullable here.",Why change it from overflowProcessor to bufferWriteProcessor?,    if (overflowProcessor != null && !bufferWriteProcessor.isClosed()) {,0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"Please consider this https://github.com/apache/skywalking/pull/9098/files#r876753312 , having 2 annotations increases the complexity unnecessarily IMO, or please elaborate why we have to provide 2 annotations here","                if (field.isAnnotationPresent(SQLDatabase.AdditionalEntity.OnlyAdditional.class)
MethodCallExpr                     || field.isAnnotationPresent(SQLDatabase.AdditionalEntity.OriginAndAdditional.class)) {
IfStmt                     if (!record) {
ThrowStmt                         throw new IllegalStateException(""Model ["" + modelName + ""] is not a Record, @SQLDatabase.AdditionalEntity only supports Record."");
ExpressionStmt                     }
ExpressionStmt                 }
ExpressionStmt                 Column column = field.getAnnotation(Column.class);
IfStmt                 if (field.isAnnotationPresent(SQLDatabase.AdditionalEntity.OnlyAdditional.class)
MethodCallExpr                     && field.isAnnotationPresent(SQLDatabase.AdditionalEntity.OriginAndAdditional.class)) {
ThrowStmt                     throw new IllegalStateException(""Model ["" + modelName + ""] column ["" + column.columnName() +
StringLiteralExpr                                                         ""]: @OnlyAdditional and @OriginAndAdditional cannot be used on the same column."");
ExpressionStmt                 }",0
Static non-final field names should comply with a naming convention,"Rename this field ""IDX_TREE_FACTORY"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Why not ""final""?",    public static InlineIndexTreeFactory IDX_TREE_FACTORY = new InlineIndexTreeFactory();,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Avro doesn't actually have footers, I believe this method does something else ... I can't remember what. But I think we can have the message just be ""Unable to read Avro file: "" ....
","      throw new RuntimeException(""Unable to read the footer of the avro file: "" +",0
Class variable fields should not have public accessibility,Make default_insert_visible_timeout_ms a static final constant or non-public and provide accessors if needed.,"If we use session variable, there is no need to add this config.
I think session variable is enough.",    public static long default_insert_visible_timeout_ms = 10000;,0
"Synchronized classes Vector, Hashtable, Stack and StringBuffer should not be used","Replace the synchronized class ""Vector"" by an unsynchronized one such as ""ArrayList"" or ""LinkedList"".",why using vector not ArrayList?,    List<TRegionInfo> regionInfoList = new Vector<>();,1
Jump statements should not be redundant,Remove this redundant jump.,this is not needed,      else continue;,1
"Unused ""private"" fields should be removed","Remove this unused ""storageGroup"" private field.",clean,  private String storageGroup;,1
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,"I am a little surprised this compiles, but should be safe at runtime.

Should these new methods eventually have an implementation that would produce the expected type?","    public List<? extends TypeMirror> visitBindingPattern(BindingPatternTree bpt, Object p) {",1
"Array designators ""[]"" should be on the type, not the variable",Move the array designator from the variable to the type.,Redundant collections.,"        LocalStatisticsGatheringContext ctxToSubmit[] = new LocalStatisticsGatheringContext[1];
ExpressionStmt         LocalStatisticsGatheringContext ctxToAwait[] = new LocalStatisticsGatheringContext[1];",0
Raw types should not be used,Provide the parametrized type for this generic.,"use Builder<?>
",  public static Builder forRegistry(MetricRegistry registry) {,1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","Why not use Set<TNetworkAddress>? In that way, hosts is not needed.",                    Set<String> cache = new HashSet<String>();,0
"""InterruptedException"" should not be ignored","Either re-interrupt this method or rethrow the ""InterruptedException"" that can be caught here.","IMO, print some exception message maybe a good choice.",        } catch (InterruptedException ignored) {,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"can you name these all in CAPS ? enums are constants and constants should be capitalized. 
","    CollectionConfig,",1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,Is the `all` level necessary?  It always equals to the lowest level.,"  all(0),",0
Private fields only used as local variables in methods should become local variables,"Remove the ""NAMING_CONTROL"" field and declare it as a local variable in the relevant methods.",Where is it used?,    private static NamingControl NAMING_CONTROL;,1
"Reflection should not be used to increase accessibility of classes, methods, or fields",This accessibility bypass should be removed.,"Looks suspiciously. If we have `BinaryArray` here, then the field value is not deserialized. Initializing java object field with not deserialized field value may lead to some hidden problems. Perhaps, props should be read with deserialization (for example, with `readObject()` method instead of `readObjectDetached()`).",                        BinaryUtils.isObjectArray(field.getType()) ? BinaryUtils.rawArrayFromBinary(val) : val,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""java.lang.String"" 3 times.","@trustin If you have time, could you take a look at here. This is a PR for Armenia SkyWalking plugin. Is this method a suitable injecting point to add SkyWalking codes for tracing Ameria RPC.","                        .and(takesArgument(4, named(""java.lang.String"")));",0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,why not `CompletableFuture<Void>`?,"        @NotNull CompletableFuture<?> notify(SuperRoot oldRoot, SuperRoot newRoot, long storageRevision);",1
Unnecessary imports should be removed,Remove this unused import 'java.util.HashSet'.,Remove unused imports,import java.util.HashSet;,1
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""dataTypeMap"".","In our version we have these additional mappings:

.put(""double precision"", ""float"")
.put(""numeric"", ""double"")
.put(""real"", ""float"")
.put(""character"", ""string"")
.put(""char varying"", ""string"")
.put(""character varying"", ""string"")
.put(""long varchar"", ""string"")
.put(""interval"", ""string"")
",            .build();,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Thanks for adding a test to exercise a provided schema.,  public void testProvidedSchema() throws Exception {,0
Nested blocks of code should not be left empty,Either remove or fill this block of code.,"when would this happen, should we propagate it ",      } catch (Throwable ignore) {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,remove,    // TODO: new TsFileManagement,1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",remove this,    public CryptorResponseRuleHandle() {,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""brokerLogDir"" 3 times.","If it is set to """" here, will it be in the original directory by default?","            System.setProperty(""brokerLogDir"", """");",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,why handle in this way ? why not propagated to caller and let them determine since this is just a util method ? ,      e.printStackTrace();,1
"Unused ""private"" fields should be removed","Remove this unused ""idToTabletStats"" private field.",How about put this to TabletInvertedIndex?,"    private Map<Long, TabletStats> idToTabletStats = Maps.newHashMap();",0
Boolean literals should not be redundant,Remove the unnecessary boolean literal.,"I'd consider doing this in the constructor to avoid calling the ternary operation in each `canContain`.

this.containsNaN = summary.containsNaN() == null || summary.containsNaN();

Then this will also be a one line change. I'll leave this up to you, @RussellSpitzer @yyanyy. ",        return containsNaN == null ? true : containsNaN;,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"As discussed offline, we don't need this class","  public static abstract class ConverterRequestBuilder<RQ> implements AsyncRequestBuilder<HttpOperation, RQ> {",0
Private fields only used as local variables in methods should become local variables,"Remove the ""isQuit"" field and declare it as a local variable in the relevant methods.","this field is not used, remove it ba",  private static boolean isQuit = false;,1
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single method invocation.,Change the log print `is HDD: `,            if (entry.getValue() == DataProperty.DEFAULT_DATA_PROPERTY) {,0
Field names should comply with a naming convention,"Rename this field ""_tag"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",this file lgtm,  private final String _tag;,0
Boolean expressions should not be gratuitous,"Remove this expression which always evaluates to ""true""","As google style suggests, we should use `{}` even for single-line code blocks.",          if (client != null) client.close();,0
"Unused ""private"" methods should be removed","Remove this unused private ""convertToParameters"" method.",better to call it `convertToPartitionFieldParameters`?,"  private static Map<String, String> convertToParameters(Type type, PartitionField partitionField) {",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""fileObject"" is nullable here.",`fileObject` can be `null`.,        FileObject fileObject = getJavaFileWithoutProjectFromLookup(context);,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,todo what?,    // TODO,1
Field names should comply with a naming convention,"Rename this field ""_queryType"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",use Request.SQL,"  private String _queryType = ""pql"";",0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"        if (fnName.getFunction().equalsIgnoreCase(""from_unixtime"")) {","        if (fnName.getFunction().equals(""from_unixtime"")) {",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""dates"" 4 times.","nit: ""dates"" has shown up multiple times, move to static variable","      checkForRedundantPartitions(field, ""dates"");",1
Raw types should not be used,Provide the parametrized type for this generic.,Should be List<Language[]> instead.,    LinkedList<Language[]> predictions = new LinkedList();,1
Classes should not be empty,"Remove this empty class, write its code or make it an ""interface"".",What is this empty abstract class for?,public abstract class SPage {},1
Methods and field names should not be the same or differ only by capitalization,"Rename method ""createHardLink"" to prevent any misunderstanding/clash with method ""createHardlink"" defined on line 802.",remove,  public boolean createHardLink(String path) {,0
"Unused ""private"" fields should be removed","Remove this unused ""LOGGER"" private field.",Remove this line as logger is never used,  private static final Logger LOGGER = LoggerFactory.getLogger(FileUtils.class);,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,this shouldn't be possible unless some user wants to explicitly name their flow config the url of their spec executor.,      //todo: de-risk: flow spec and topology spec share same uri?,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"What for we are opening `pw` if result printed to `System.out`.
BTW, you can minimize count of changed lines of code and count of errors like this if you make `IdleVerifyResultV2#print(Consumer<String> printer, boolean printExceptionMessages)` public for check snapshot command and left `IdleVerifyResultV2#print(Consumer<String> printer)` method as is for idle verify command.","                res.print(System.out::print, true);",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","public abstract class LRULinkedHashMap<K, V> extends LinkedHashMap<K, V> {","public abstract class LruLinkedHashMap<K, V> extends LinkedHashMap<K, V> {",0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,same above,    int DORIS_REQUEST_READ_TIMEOUT_DEFAULT = 30 * 1000;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Unexpected result"" 9 times.","Given the feature is gone, we can probably remove this test as it’s covered elsewhere","        assertEquals(""${foo}"", sb.toString(), ""Unexpected result"");",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""dag"" is nullable here.",Will this cause us to double the quota for this job since we check quota again when submit the job?,"          quotaManager.get().checkQuota(dag.getNodes().get(0), false);",0
Raw types should not be used,Provide the parametrized type for this generic.,"Using our reflection helpers, this could be simpler:
java
  try {
    DynConstructors.Ctor<Actions> ctor = DynConstructors.builder()
            .impl(SparkActions.class, SparkSession.class, Table.class)
            .build();
    return ctor;
  } catch (NoSuchMethodException e) {
    throw new UnsupportedOperationException(""Cannot find Actions implementation on the classpath"");
  }",  private static Constructor actionConstructor() {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,???,    //TODO Integrate write batch? Idk,0
URIs should not be hardcoded,Remove this hard-coded path-delimiter.,"Using:
            File f = new File(path + ""\\"" + className + "".java"");// NOI18N
will clearly not work on Linux, and probably not on Mac - the file separator for these is '/'. I would suggest to simply using FileObject all the way, unless there is a really compelling reason to not to.","            File f = new File(path + ""\\"" + className + "".java"");// NOI18N",0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,ditto,"                        System.out.printf(""生产者组(%s)实例: %s\n"", group, producer.toString());",0
Field names should comply with a naming convention,"Rename this field ""_status"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",`private`,      ControllerResponseStatus _status;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"per offline discussion, since this was created for the project & only needs to be done once, we should add it to the setup script","    // TODO: this assumes the bucket already exists, is that a fair assumption?",0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"Just a reminder, as we are using JDK8+, Optional could replace all these `!=null`. But both of these styles exist today. So, don't require change, anyway.",        if (excludeNamesRegex != null) {,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"            throw new RuntimeException(""this.serverBootstrap.bind().sync() failed"", e);
IMO, If the exception is not BindException, it is not necessarily InterruptedException
","            throw new RuntimeException(""this.serverBootstrap.bind().sync() InterruptedException"", e);",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Instead of a new class, maybe move it to TimeUtils?",public class ThresholdPeriodUtils {,0
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,"Are we going to persist metrics?
Maybe it makes sense make Id extends Serializable",public interface MonitoringRow<Id> {,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,public is optional in interfaces?,  public void clear() throws Exception;,0
Field names should comply with a naming convention,"Rename this field ""AbstractChunkReader"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",lowercase it,  private AbstractChunkReader AbstractChunkReader;,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Fix indention.,"       NSLog (@""nativeEngineVerify: Signature with padding failed,  %d "", (int) status);",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove comment line,    //    traverse();,1
Boolean literals should not be redundant,Remove the unnecessary boolean literals.,`boolean exclusive = type == Predicate.Type.IS_NOT_NULL;` for readability?,        boolean exclusive = (type == Predicate.Type.IS_NULL) ? false : true;,0
Raw types should not be used,Provide the parametrized type for this generic.,Same performance concern. Prefer `LinkedList`.,        public static List DISABLED_PLUGINS = new ArrayList();,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,not used e.printStackTrace();,            e.printStackTrace();,1
Field names should comply with a naming convention,"Rename this field ""_partitionSelector"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Make it private since you've already had a getter method?,  public final PartitionSelector _partitionSelector;,0
Class variable fields should not have public accessibility,Make REGEX_EXPRESSION a static final constant or non-public and provide accessors if needed.,"            public static String REGEX_EXPRESSION = "".*Service$,.*Dao$,.*DAO$,.*Repository$"";","            public static String REGEX_EXPRESSION = "".*Service.*,.*Dao.*,.*Repository.*"";",0
Class variable fields should not have public accessibility,Make MAX_WAIT_CHANNEL_AUTO_CONNECT_COUNT a static final constant or non-public and provide accessors if needed.,Default should be 10.,        public static long MAX_WAIT_CHANNEL_AUTO_CONNECT_COUNT = 1;,0
Unused method parameters should be removed,Remove these unused method parameters.,These methods all have 'default' implementations but are then overridden in the existing concrete implementation. Probably makes more sense to just make them abstract?,"    protected int getBufferSize(final ProcessContext context, final ProcessSession session, final FlowFile flowFile) {
ReturnStmt         return getConfiguration().getInt(BUFFER_SIZE_KEY, BUFFER_SIZE_DEFAULT);
MethodDeclaration     }
MethodDeclaration     /**
MethodDeclaration      * Returns with the expected replication factor. Note: this might be overwritten by implementations.
MethodDeclaration      */
MethodDeclaration     protected short getReplication(final ProcessContext context, final ProcessSession session, final FlowFile flowFile) {
ExpressionStmt         final String dirValue = context.getProperty(DIRECTORY).evaluateAttributeExpressions(flowFile).getValue();
ExpressionStmt         final Path configuredRootDirPath = new Path(dirValue);
ReturnStmt         return getFileSystem().getDefaultReplication(configuredRootDirPath);
MethodDeclaration     }
MethodDeclaration     /**
MethodDeclaration      * Returns if file system should ignore location. Note: this might be overwritten by implementations.
MethodDeclaration      */
MethodDeclaration     protected boolean shouldIgnoreLocality(final ProcessContext context, final ProcessSession session) {
ReturnStmt         return false;
MethodDeclaration     }
MethodDeclaration     /**
MethodDeclaration      * I returns a non-null value, changes the owner of the uploaded file to this value after it is written. This only
MethodDeclaration      * works if NiFi is running as a user that has privilege to change owner. Note: this might be overwritten by implementations.
MethodDeclaration      */
MethodDeclaration     protected String getOwner(final ProcessContext context, final FlowFile flowFile) {
ReturnStmt         return null;
MethodDeclaration     }
MethodDeclaration     /**
MethodDeclaration      * I returns a non-null value, changes the group of the uploaded file to this value after it is written. This only
MethodDeclaration      * works if NiFi is running as a user that has privilege to change group. Note: this might be overwritten by implementations.
MethodDeclaration      */
MethodDeclaration     protected String getGroup(final ProcessContext context, final FlowFile flowFile) {",0
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,Don't fix the seed,  private static final Random RANDOM = new Random(42);,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Most likely we don't want.,//TODO: Do we want to use this instead of java.sql.SQLException ?,0
Field names should comply with a naming convention,"Rename this field ""_tableNameWithType"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Make them final,  private String _tableNameWithType;,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"This doesn't need to be synchronized, get(String, MetricContext, List<Tag<?>>) already is. Although it might not be important? I don't know what the overhead of synchronizing calls is.
",  public synchronized static GobblinMetrics get(String id) {,0
Local variables should not shadow class fields,"Rename ""encrGrpIds"" which hides the field declared at line 64.",What is a purpose of this local var?,        Set<Integer> encrGrpIds = this.encrGrpIds;,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove comment,//        Set<String> columns = immutableSegmentImpl.getSegmentMetadata().getAllColumns();,1
"Nested ""enum""s should not be declared static","Remove this redundant ""static"" qualifier; nested enum types are implicitly static.","Can you add javadocs around the intent of these.  For ParallelRunner I think it is really important to be crystal clear what the expectations are.
",  public static enum FailPolicy {,0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,  public void setEnableHttps(boolean enable_https) {,  public void setEnable_https(boolean enable_https) {,0
Nested blocks of code should not be left empty,Either remove or fill this block of code.,This can not be ignored. Throwing a RuntimeException here is OK.,        } catch (MetadataException ignored) {,1
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,"According to what we discussed before, in terms of expressions, try not to use the combination + inheritance method but directly use the inheritance method.
So I suggest that there should be `and`, `or` two separate expr classes and unified inheritance from `compoundpredicate`.","public class CompoundPredicate<LEFT_CHILD_TYPE extends Expression, RIGHT_CHILD_TYPE extends Expression>",0
"""InterruptedException"" should not be ignored","Either re-interrupt this method or rethrow the ""InterruptedException"" that can be caught here.",This changes behaviors for normalizer. Can we give some timeout for blocking so it wont block forever if something goes wrong with one of plans? ,            submittedPlan.get();,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"same as above, should be capitalized.","    start,
EnumConstantDeclaration     stop",1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,I would hardcode this to `\n`. That way it is not platform dependent and most editor deal perfectly fine with unix line endings.,"    private static final String nl = System.getProperty(""line.separator"");",0
Field names should comply with a naming convention,"Rename this field ""IGNORE_SUFFIX_ARRAY"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Compiling local, this name format would not pass the CI, because of the format.",    private String[] IGNORE_SUFFIX_ARRAY = new String[0];,1
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"What about structType instead? In the context of a record reader, record sounds like it would not be a type.",    private final StructType record;,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Add comments for all public class.,public class CacheUtils {,0
"""ThreadLocal"" variables should be cleaned up when no longer used","Call ""remove()"" on ""DECODER_CACHES"".","Q: Will it have problem when the  GenericAvroReader , DataReader, SparkAvroReader  share the same  cache ?  ","  private static final ThreadLocal<Map<Schema, Map<Schema, ResolvingDecoder>>> DECODER_CACHES =",0
Conditionally executed code should be reachable,"Change this condition so that it does not always evaluate to ""false""",mreg can't be null here.,        sentBytesCntMetric = mreg == null ?,1
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""factory"".","Factories should have only default constructors, so you can just do `.newInstance()`.",      CompactionSuiteFactory factory = GobblinConstructorUtils.invokeFirstConstructor(,0
"Unused ""private"" fields should be removed","Remove this unused ""EMPTY_URL"" private field.",this is not needed anymore,"  private static final String EMPTY_URL = """";",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,+1,"      // TODO: once the column metadata correctly reflects whether inverted index exists for the column, use that",0
Class variable fields should not have public accessibility,Make rpcThriftCompressionEnable a static final constant or non-public and provide accessors if needed.,why set it as true?,  public static boolean rpcThriftCompressionEnable = true;,0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".",Nit: no need to align variable names.,  private static final long   HIVE_ACQUIRE_LOCK_STATE_TIMEOUT_MS_DEFAULT = 3 * 60 * 1000; // 3 minutes,0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""future"".","Once you do this, I think you need to check `CompletableFuture#isCompletedExceptionally` and process in this case?",                        throw new RuntimeException(e);,0
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),`The number of currently rebalanced bytes of this cache group`,"            () -> rebalanceFut.rebalancingReceivedBytes.get(), ""Number of already rebalanced bytes."");",0
Class variable fields should not have public accessibility,Make SNAPSHOT_SEND_CHANNEL_SIZE a static final constant or non-public and provide accessors if needed.,`SEND` -> `TRANSPORT`,        public static int SNAPSHOT_SEND_CHANNEL_SIZE = 2;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""PHOTOS"" 3 times.",Same as the Flickr comment above,"    if (dataType.equals(""PHOTOS"")) {
IfStmt       if (step == OAuth1Step.AUTHORIZATION) {
IfStmt         if (mode == AuthMode.EXPORT) {
BlockStmt           return ImmutableMap.of(ACCESS, ""Full"", PERMISSIONS, ""Read"");
BlockStmt         } else {
ReturnStmt           return ImmutableMap.of(ACCESS, ""Full"", PERMISSIONS, ""Add"");
ReturnStmt         }
ReturnStmt       }
ReturnStmt     }",0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,"Why deprecate this if it wasn't public in the first place?

Also, can this extend `DynamoDbLockManager` so that we don't have two implementations? Then we can also get rid of the tests here.",class DynamoLockManager extends LockManagers.BaseLockManager {,1
Loops should not be infinite,Add an end condition to this loop.,"May want to add a verbose switch later so we can also see the queries if required.
",              driver.postQuery(query);,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"[question] if we are going to throw an exception here, should we cancel the remaining futures just in-case they haven't completed, Thoughts ? ","          throw new RuntimeException(""Interrupted when waiting for deletions to complete"", e);",0
Field names should comply with a naming convention,"Rename this field ""_configName"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",`_tableName`?,  private final String _configName;,1
Unnecessary imports should be removed,Remove this unused import 'java.nio.ByteOrder'.,Please remove useless import.,import java.nio.ByteOrder;,1
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"I don't think I understand the point of this method. Which component is supposed to use it? This does not look like something many components should care about. The components which need to manipulate the checkpoint also should know what the implementation is. In that case, putting it in the interface is meaningless. 

Can you please make sure you add javadocs to public interfaces and methods?
",  public void increment(Object record);,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,tagging #337  explicitly so it ties the PR to the issue,    // TODO(#337): Import is not supported for Instagram since their API does not support upload,1
Raw types should not be used,Provide the parametrized type for this generic.,"This looks strange - why was line 122 changed, but 123 not? This seems to be the case at multiple places.","        Class modelClazz = cl.loadClass(""org.jboss.dmr.ModelNode""); // NOI18N",0
Field names should comply with a naming convention,"Rename this field ""_planner"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","nit: move these sections to the top of the class (in Pinot our class structure are member variables then functions)
also make it final so that it cannot be modify outside of constructor of the class / compiler knows how to optimize getter methods.","  private PlannerImpl _planner;
FieldDeclaration   private SqlValidator _validator;
FieldDeclaration   private RelOptPlanner _relOptPlanner;",0
"""Collections.EMPTY_LIST"", ""EMPTY_MAP"", and ""EMPTY_SET"" should not be used","Replace ""Collections.EMPTY_LIST"" by ""Collections.emptyList()"".",`Collections.emptyList()`,        return Collections.EMPTY_LIST;,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,could you please file a ticket for this TODO?,    //TODO: Copy-pasted from BinaryTupleRowSerializer test class. Re-use it in serializer or make serializer to sources.,1
Raw types should not be used,Provide the parametrized type for this generic.,"  public RecordLocation(IndexSegment indexSegment, int docId, Comparable comparisonValue) {","  public RecordLocation(IndexSegment indexSegment, int docId, Comparable timestamp) {",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Use LOGGER.debug instead,"        // System.out.println(time[j - 1] + "","" + ps + "","" + original[j - 1]);",0
"Unused ""private"" methods should be removed","Remove this unused private ""isFitForMetadataBasedPlan"" method.",This can be removed,"  private static boolean isFitForMetadataBasedPlan(AggregationFunction[] aggregationFunctions,",1
Lambdas containing only one statement should not nest this statement in a block,Remove useless curly braces around statement (sonar.java.source not set. Assuming 8 or greater.),Could you please use a static import here and everywhere we do `assertThrows`? So it is in-line with other asserts.,"    Assertions.assertThrows(IOException.class, () -> {",0
"""public static"" fields should be constant","Make this ""public static max_cbo_statistics_task_timeout_sec"" field final",60 or 300?,    public static int max_cbo_statistics_task_timeout_sec = 300;,0
"""StandardCharsets"" constants should be preferred",Replace charset name argument with StandardCharsets.UTF_8,Better define this number somewhere.,"            return value.getBytes(""UTF-8"").length <= 1048576;",0
"Unused ""private"" fields should be removed","Remove this unused ""isEngineConfigSet"" private field.",remove if unused? ,    private boolean isEngineConfigSet = false;,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Can we change the name of this class like I had suggested before?,  public static class Grigio {,0
Anonymous inner classes containing only one method should become lambdas,Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.),Replace to use `NamedThreadFactory`,"                        CURATOR_WATCHER_EXECUTOR_SERVICE = Executors.newSingleThreadExecutor(new ThreadFactory() {
MethodDeclaration                             @Override
BlockStmt                             public Thread newThread(Runnable r) {
ExpressionStmt                                 Thread thread = new Thread(r);
ExpressionStmt                                 thread.setName(""Dubbo-CuratorWatcher-Thread"");
ReturnStmt                                 return thread;
ConstructorDeclaration                             }",0
Class variable fields should not have public accessibility,Make DNS_PERIOD_RESOLVE_ACTIVE a static final constant or non-public and provide accessors if needed.,"        public static boolean IS_RESOLVE_DNS_PERIODICALLY = false;
I think the current naming style is like this.",        public static boolean DNS_PERIOD_RESOLVE_ACTIVE = false;,0
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,Do we need it to be public? Looks like there is no scope change needed in this PR.,"public abstract class BaseSparkAction<ThisT, R> implements Action<ThisT, R> {",0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"This is called in a tight loop and `currentAppender.length()` is expensive in some cases. Parquet will find the size of the current row group and add that to its position in the file. Can we update this to check every 1,000 records or so?",    public void write(InternalRow record) throws IOException {,0
Raw types should not be used,Provide the parametrized type for this generic.,We don't need this,  public static Comparable extractTimeValueIfPossible(Comparable time) {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""tempMailData"" 3 times.",(same here) use createCacheKey() instead? ,"      jobStore.update(id, ""tempMailData"", tempMailData);",1
"""public static"" fields should be constant","Make this ""public static max_backup_job_num_per_db"" field final","    public static int max_backup_restore_job_num_per_db = 100;
And I think 100 by default is too large. How about 10?",    public static int max_backup_job_num_per_db = 100;,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""size"".","*UnusedVariable:*  The local variable SimpleName is never read. [(details)](https://errorprone.info/bugpattern/UnusedVariable)
(at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)",            final int size = series.getValues().size();,1
"""toString()"" should never be called on a String object","""formattedName"" is already a string, there's no need to call ""toString()"" on it.","            formattedName = formatByCustom(serviceName, formattedName);
        }","            formattedName = formatByCustom(serviceName, formattedName.toString());
ReturnStmt         }",1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,"Instead of print, you can just call the method above without a try/catch block. It if fails with NPE, then the test will fail and show the exception.",      npe.printStackTrace();,1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""db"" is nullable here.",        long quota = stmt.getQuota();,        long quota = (quotaType == QuotaType.DATA ? db.getDataQuota() : db.getReplicaQuota());,0
Field names should comply with a naming convention,"Rename this field ""_nextDocId"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(minor) Move these 2 non-final values into a separate block for readability,"  private int _nextDocId = 0;
FieldDeclaration   private int _nextDictId = 0;",0
Ternary operators should not be nested,Extract this nested ternary operation into an independent statement.,"`cause.getCause() == null ? cause : cause.getCause()`
I was surprised that the logic is in the branch main.",            closure.remove(cause == null ? new ListenerRemovedException() : cause.getCause() == null ? cause : cause.getCause());,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Why not do it now?,"    //TODO Use it instead of the ""stopped"" flag.",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Why don't you use `throw U.jmException(e);` as other beans?,"            throw new RuntimeException(""Unable to change cluster state to '"" + state + ""': "" + e.getMessage());",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"We can't accept this as part of our test suite since all tests need to run without making any external http connections (even to Google!) for security reasons. 

However, it is a useful example, so please move this method into the main method of a new class in jre_emul/misc-tests (such as jre_emul/misc-tests/InspectSSLAfterConnect.java).
",    public void testInspectSslAfterConnect() throws Exception {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,we dont need this TODO anymore right?,    // TODO: this for loop breaks for multi value columns. https://github.com/apache/incubator-pinot/issues/3867,1
Unnecessary imports should be removed,Remove this unused import 'com.sun.org.apache.xpath.internal.operations.Bool'.,What is this?,import com.sun.org.apache.xpath.internal.operations.Bool;,0
Empty statements should be removed,Remove this empty statement.,"extra `;`
",      _jobState.switchToPending();;,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Has the TODO been fixed?,      settleLogWriter.write(content); // Todo:bug，settleLogWriter null,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,You should throw a ParseException here,                // TODO: multi-colName,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""keyword"" 48 times.","These new constants do not seem to be really used, right? I.e. the lexer will never produce a token with this kind?","    PERMITS(""permits"", ""keyword""),",0
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,Use `Connection connection = EnvFactory.getEnv().getConnection();`,"                Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");",1
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""e"" parameter (sonar.java.source not set. Assuming 8 or greater.)",              .filter((e) -> req.dataNodeId == e.getKey()),              .filter((e) -> 1 == e.getKey()),0
"Jump statements should not occur in ""finally"" blocks",Remove this return statement from this finally block.,"*Finally:*  If you return or throw from a finally, then values returned or thrown from the try-catch block will be ignored. Consider using try-with-resources instead.",            return message;,1
Unused assignments should be removed,"Remove this useless assignment to local variable ""type"".","the type is not used, we should  use the type to init authorType?",    int type = buffer.getInt();,0
Unused local variables should be removed,"Remove this unused ""table"" local variable.",table not used,                OlapTable table = (OlapTable) db.getTableNullable(tableId);,1
Empty statements should be removed,Remove this empty statement.,remove,        ;,1
Static non-final field names should comply with a naming convention,"Rename this field ""ASSERT"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","final
",  private static TestVerb ASSERT = new TestVerb(THROW_ASSERTION_ERROR);,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,drop `Internal` from the name?,public abstract class BulkInsertInternalPartitionerWithRowsFactory {,0
"Unused ""private"" methods should be removed","Remove this unused private ""dim"" method.","This is never used, if not useful, please remove this.",    private String dim(List<String> labelKeys) {,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove,"    //LOG.info(""trying to fetch data from cache..."");",1
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",This belongs in this patch?,  private volatile LoadBalancer internalBalancer;,0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,Can we remove the method directly ?,  public static HoodieTableMetaClient createMetaClient(String basePath) {,1
Class variable fields should not have public accessibility,Make rnd a static final constant or non-public and provide accessors if needed.,"This will have to be removed in the future, no more special fields for test. Please add TODO. I'd rather have a
`private final IntUnaryOperator rng;` field with corresponding constructor parameter.",    public static Random rnd;,1
"""switch"" statements should have ""default"" clauses",Add a default case to this switch.,      switch (types.get(i)) {,      switch (types.get(i)){,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal "", ses="" 15 times.","I think we should use the debug level here and in all other changed places.
","                U.error(log, ""Failed to initialize job [jobId="" + ses.getJobId() + "", ses="" + ses + ']', e);",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""md5"" is nullable here.","There may be a NPE, please add judgment condition.",        byte[] md5Bytes = md5.digest(byteArray);,1
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,return _stringStore.equalsStringAt(....),"    if (_stringStore.equalsStringAt(value.toString(), dictId)) {",1
Methods should not have too many parameters,"Method has 15 parameters, which is greater than 7 authorized.","Just want to confirm that we still need this method. Should the HTTP framework automatically convert `Map<String, Object>` to JSON?",  public String buildSummary(,0
Boolean expressions should not be gratuitous,"Remove this expression which always evaluates to ""false""",`tsFilesReader` is always not null,      if (tsFilesReader == null || !tsFilesReader.hasNext()) {,1
"Strings and Boxed types should be compared using ""equals()""","Use the ""equals"" method if value comparison was intended.",use `equals()` instead of `==` for comparison,"        if (fileName == null || fileName == """") {",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,TODO what?,  // TODO,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Just wondering, why shouldn't we use Signpost Oauth? Is it just a question of whether we should bring the library in or not? or are there reasons not to? ",  // TODO(olsona): do we want to use the Signpost OAuth library?,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""witnessMethods"".",This existing logic should move into the `WitnessClassFinder` from my understanding. And you should add UTs for WitnessClassFinder.,        List<WitnessMethod> witnessMethods = witnessMethods();,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""service"".","`service` not used here, why rewrite `#handle`?",        MotanService service = clazz.getAnnotation(MotanService.class);,1
Unused local variables should be removed,"Remove this unused ""configService"" local variable.","*[UnusedVariable](https://errorprone.info/bugpattern/UnusedVariable):*  The local variable SimpleName is never read.

---

<details><summary><b>ℹ️ Learn about @sonatype-lift commands</b></summary>

You can reply with the following commands. For example, reply with ***@sonatype-lift ignoreall*** to leave out all findings.
| **Command** | **Usage** |
| ------------- | ------------- |
| `@sonatype-lift ignore` | Leave out the above finding from this PR |
| `@sonatype-lift ignoreall` | Leave out all the existing findings from this PR |
| `@sonatype-lift exclude <file\|issue\|path\|tool>` | Exclude specified `file\|issue\|path\|tool` from Lift findings by updating your config.toml file |

**Note:** When talking to LiftBot, you need to **refresh** the page to see its response.
<sub>[Click here](https://github.com/apps/sonatype-lift/installations/new) to add LiftBot to another repo.</sub></details>



---

Was this a good recommendation?
[ [? Not relevant](https://www.sonatype.com/lift-comment-rating?comment=337688261&lift_comment_rating=1) ] - [ [? Won't fix](https://www.sonatype.com/lift-comment-rating?comment=337688261&lift_comment_rating=2) ] - [ [? Not critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=337688261&lift_comment_rating=3) ] - [ [? Critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=337688261&lift_comment_rating=4) ] - [ [? Critical, fixing now](https://www.sonatype.com/lift-comment-rating?comment=337688261&lift_comment_rating=5) ]",        final ConfigService configService = getManager().find(CoreModule.NAME),1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"It seems like we do not have consistency of this across implementations. We did `throwFailureWhenFinished` for all the aborts in Spark, but for most of the actions doing similar deletions we did `suppressFailureWhenFinished`. Overall my thoughts are the following:
1. I would prefer we keep the old behavior if possible because it's debatable which one is more desirable, so it's probably better to just keep the existing behavior
2. if we think suppression is better for some important reasons, we should also log a warning `onFailure` so that at least user has a way to know what is going on
2. ideally we can have a flag `throwOnAbortFailure` to control this from the user side.",  // TODO: why the old implementation throws throwFailureWhenFinished()?,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove this,    // return maxTimestamp >= currentTimestamp && super.pageSatisfied(pageHeader);,1
Unnecessary imports should be removed,Remove this unused import 'java.util.Comparator'.,Remove unused import,"import java.util.Comparator;
ImportDeclaration import java.util.LinkedList;
ImportDeclaration import java.util.stream.Collectors;",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"If it's useless, u can remove it.","  /** time index type, V012FileTimeIndex = 0, deviceTimeIndex = 1, fileTimeIndex = 2 */
FieldDeclaration   //  private byte timeIndexType;",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove these?,"//    for (InsertRowPlan plan : insertRowsOfOneDevicePlan.getRowPlans()) {
IfStmt //      insert(plan);
IfStmt //    }",1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","Javadoc missing.
","public abstract class KafkaExtractor<S, D> extends EventBasedExtractor<S, D> {",0
Methods should not have too many parameters,"Constructor has 8 parameters, which is greater than 7 authorized.","Do we want to deprecate the old constructor? Not a big deal but I am bit worried about maintaining a new constructor each time we modify this class. At the same time, converting this into a builder is probably an overkill. This is a pretty internal API too so I'd be fine with breaking it.

Thoughts, @openinx @rdblue @yyanyy?","  public EqualityDeleteWriter(FileAppender<T> appender, FileFormat format, String location,",0
Unused method parameters should be removed,Remove these unused method parameters.,Could `evaluateBoolean` accept two boolean parameters instead of double?,"  protected boolean evaluateBoolean(double leftOperand, double rightOperand) {",0
"""private"" methods called only by inner classes should be moved to those classes","Move this method into ""RegionStatesCountBuilder"".","nit:  let's try to align the get & set placement ?   all getXX first, then setXX ? or  getXX & setXX one by one ? ",  private void setClosedRegions(int closedRegions) {,0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.","There registrations should probably belong elsewhere, not into the debugger, in the future.",    public void Python() {},0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,for `Binary` type.,    //throw new SQLException(METHOD_NOT_SUPPORTED_STRING);,0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,Why not 149?,    public static final int EVT_QUERY_EXECUTION = 150;,0
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),"Thanks, overall looks good, can we create a new clazz named `HadoopConfigurations` under package `org.apache.hudi.configuration` and move the methods `getParquetConf` `getHadoopConf` there ?

Let's keep the `FlinkOptions` clean for only flink confugurations.","    options.forEach((k, v) -> hadoopConf.set(k, v));",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Because we do not store the table informations in RSGroupInfo anymore, if you use the new API to get RSGroupInfo, the tables will always be empty.",  // TODO: Don't understand why all these should be deprecated. we have table -> rsgroup mapping.,0
Unused method parameters should be removed,Remove these unused method parameters.,"If `fields` is always a row, it seems to me that `row` might be a better name because it is more clear that it is a record/struct/tuple type. It wasn't clear to me that `fields` was the record type, since most other formats make a distinction between a record and its field list.","  public T fields(FieldsDataType dataType, Map<String, Tuple2<String, T>> fieldResults) {",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove,    //    TSyncTransportType type = metaInfo.type;,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove this comment?,    // createTemplateStatement.setType();,1
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,`toModifyTuple`,    <RowT> ModifyTuple toBinaryRow(,0
"Array designators ""[]"" should be on the type, not the variable",Move the array designator from the variable to the type.,"When processing 
        String s = """"""   
                   
                   
        """""";
The hint will produce code like
String s = ""\n"" + ""\n"" + """";
","        String oneLine[] = textBlock.split(""\\\\n"", -1);    // NOI18N",0
"Unused ""private"" methods should be removed","Remove this unused private ""buildIndexTupleSchema"" method.",seems like this method is not used anywhere,"    private BinaryTupleSchema buildIndexTupleSchema(IndexDescriptor indexDesc, TableDescriptor tableDescriptor) {",1
Field names should comply with a naming convention,"Rename this field ""_subservices"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Why is this not part of `DefaultGobblinInstanceDriverImpl` instead?
",  private ServiceManager _subservices;,0
Static non-final field names should comply with a naming convention,"Rename this field ""sys_log_roll_interval"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Besides ""DAY"", what can we choose? can you write them in comment?","    @ConfField public static String sys_log_roll_interval = ""DAY"";",0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,Are you creating so many threads for profiling tasks? I prefer to do this by using only one thread only. And don't create and dispose the thread every time. This is dangerous for JVM from my understanding. @kezhenxu94 @arugal what do you think?,    private final static ProfilingThread[] PROFILING_THREADS = new ProfilingThread[Config.Profile.PARALLELS_THREAD_COUNT];,0
Raw types should not be used,Provide the parametrized type for this generic.,I think we should use `List<org.apache.spark.sql.catalyst.expressions.Expression>`  instead of `List` to avoid IDE warnings.,"  private static List getPartitionFilterExpressions(SparkSession spark, String tableName,",1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,As part of moving the anomaly report button to the dashboard. We will need a new resolution type of `User Reported + True anomaly`. Not sure it will need change here.,    if (anomaly.getAnomalyResultSource() != null) {,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",toFlinkConfig,"    Map<String, String> propsMap = new HashMap<String, String>((Map) StreamerUtil.getProps(config));",0
"Parsing should be used to convert ""Strings"" to primitives","Use ""Boolean.parseBoolean"" for this string-to-boolean conversion.","Document the `systemproperty` in arch.xml, please.","        private static final boolean RESOURCES_FROM_FILESYSTEMS = Boolean.valueOf(System.getProperty(GroovyParser.class.getName() + "".useFilesystems"", ""true""));",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"都是大写。。
Resilence4J","    Resilence4J(45, 0, ""resilience4j""),",1
Names of regular expressions named groups should be used,Directly use 'domain' instead of its group number.,"Could you put a benchmark test case about this REGEX? And put a result in comment? In our experiences, REGEX is powerful, but cause performance issues in many scenarios.","    private static final Pattern URL_REGEX = Pattern.compile(""(?<pref>http(s)?://)*(?<domain>[\\w_.\\-\\d]+(:\\d+)?)?/(?<path>solr/(?<collection>[\\w_]+))?(/.*)?"");",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Why there is a TSFHiveRecordWriter but do not support write?,"        throw new RuntimeException(""Should not be called"");",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove this?,//import org.netbeans.modules.java.source.JavadocEnv;,1
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @Deprecated annotation.,"Can we avoid custom test code that ADDS FIELDS only required for testing? This is a bad design, we should fight it, please add TODO for removing it",    public CompletableFuture<?> enableCheckpoints(boolean enable) {,0
Class variable fields should not have public accessibility,Make ACTIVE_PROFILE a static final constant or non-public and provide accessors if needed.,"As a key feature of 7.0.0, this flag should be `true` as default. @arugal Could you share your concern?",        public static boolean ACTIVE_PROFILE = false;,0
Field names should comply with a naming convention,"Rename this field ""_resultSetStats"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",This should be a List as well since ResultSet is a list,  private final ResultSetStats _resultSetStats;,0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,"`private final LoadBalanceEnum loadBalance = LoadBalanceEnum.RANDOM;`
这些如果一样可以放外面的吧",        private final LoadBalanceEnum loadBalance = LoadBalanceEnum.RANDOM;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,same here,            // InputStream inconfig = configURL.openStream();,0
Raw types should not be used,Provide the parametrized type for this generic.,"I think the `row` built here can be implemented in `Function`. eg:

function.getInfo(row, isVerbose);
",            List<Comparable> row = Lists.newArrayList();,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","The properties should be instance level, according to your latest update. This should be named as `INSTANCE_PROPERTIES`, and documents is required to update.","        public static Map<String, String> PROPERTIES = new HashMap<String, String>();",0
Boxing and unboxing should not be immediately reversed,"Remove the boxing to ""Long"".","This isn't necessarily a year. It may be months, days, or hours. Can we return `intValue()` directly instead?","    Integer year = Long.valueOf(granularity.between(EPOCH, timestamp)).intValue();",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","@yihua @xushiyan let's chat more on this to make sure we're aligned on the approach going f/w:

I was thinking of keeping this component file-format agnostic and instead make it engine-specific, while refactoring MOR table read-path for efficient querying. 

Can you elaborate what's the goal you're striving for w/ `HoodieAvroRecord`?

P.S. Putting this context in here for somebody who might not be aware of previous conversations",public abstract class HoodieRecord<T> implements Serializable {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Fail to find config file {}"" 3 times.",the same as above,"        logger.error(""Fail to find config file {}"", clusterPropertiesUrl, e);",0
Using hardcoded IP addresses is security-sensitive,Make sure using this hardcoded IP address is safe here.,"What does this url: http://169.254.169.254/latest/meta-data/local-ipv4 do?
","    cloudInitCmds.append(""pi=`curl http://169.254.169.254/latest/meta-data/local-ipv4`"").append(""\n"");",0
Class variable fields should not have public accessibility,Make SOURCE_NAME a static final constant or non-public and provide accessors if needed.,`public final static String `?,"  public String SOURCE_NAME = ""jvm"";",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove unused code,"                //.redirectOutput(new File(Config.sys_log_dir + ""/spark-submitter.log""));",1
"Unused ""private"" methods should be removed","Remove this unused private ""updateDeviceChunkPointSizeCache"" method.",seems this function is never used,  private void updateDeviceChunkPointSizeCache() {,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Do we still need this TODO comment?,        // TODO: IGNITE-15414 Schema validation refactoring with configuration validators.,1
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,        public void debug() {,        public void Debug() {,0
"Unused ""private"" fields should be removed","Remove this unused ""OPERATOR_NAME"" private field.",This is unused. You should override the `getOperatorName()`,"  private static final String OPERATOR_NAME = ""PassThroughTransformOperator"";",1
Throwable and Error should not be caught,Catch Exception instead of Throwable.,"This means if any `CommitStep` fails, the `execute` fails. Should the try-catch block surround `step.execute` instead?
",    } catch (Throwable t) {,1
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,Please use `Connection connection = EnvFactory.getEnv().getConnection();` instead.,"                Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");",1
"Null checks should not be used with ""instanceof""","Remove this unnecessary null check; ""instanceof"" returns false for nulls.","I tried rewriting this big nasty if-expression using an `Optional`. Tell me what you think
java
      if (Optional.of(e.getCause())
        .filter(c -> c instanceof KeeperException.SystemErrorException)
        .map(c -> (KeeperException.SystemErrorException) c)
        .map(Exception::getCause)
        .filter(c -> c instanceof InterruptedException)
        .isPresent()) {",      if (e.getCause() != null && e.getCause() instanceof KeeperException.SystemErrorException,0
Anonymous inner classes containing only one method should become lambdas,Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.),"This would be better as a utility ala RetryLoop.callWithRetry(). I can see this pattern getting used in other places.
",        executor.submit(new Runnable(),0
Field names should comply with a naming convention,"Rename this field ""_primaryKeyColumns"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",I would make these final constructor parameters and remove `populate`,"  private Map<PrimaryKey, GenericRow> _lookupTable = new HashMap<>();
FieldDeclaration   private Schema _tableSchema;
FieldDeclaration   private List<String> _primaryKeyColumns;",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"                    // newValue = new MyConfigurationImpl(super.keys, fieldName, rootKey, changer, listenOnly);","                    // newValue = new MyConfigurationImpl(super.keys, fieldName, rootKey, changer, boolean);",0
Static non-final field names should comply with a naming convention,"Rename this field ""LOGGER"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Why change this?,    private static ILog LOGGER = LogManager.getLogger(SnifferConfigInitializer.class);,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,public class ConsensusFactory {,public class IConsensusFactory {,0
Empty arrays and collections should be returned instead of null,Return an empty collection instead of null.,"Directly throw exception instead of returning `null` here to avoid NPE on the caller side:
`Preconditions.checkState(externalView != null, ...)`",      return null;,1
"Mutable fields should not be ""public static""","Make this member ""protected"".","Can you, please, use `TimeUnit#convert` here to clarify the numbers for the reader.","    public static final long[] HISTOGRAM_BUCKETS = new long[] {1_000_000, 10_000_000, 100_000_000, 250_000_000,",0
Overriding methods should do more than simply call the same method in the super class,Remove this method to simply inherit it.,"Do you need to override these two methods since they just call the super methods?
",    public void write(DataOutput out) throws IOException {,1
Static non-final field names should comply with a naming convention,"Rename this field ""GLOBAL_INSTANCE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","This can be static final.
",  private static GobblinMetricsRegistry GLOBAL_INSTANCE = new GobblinMetricsRegistry();,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,I suggest moving the exception classes to be on their own instead of inside a super-class,public class StreamConsumerExceptions {,0
URIs should not be hardcoded,Refactor your code to get this URI from a customizable parameter.,Revert this?,"    String filename = ""D:\\Pro\\IoTDB\\data\\load\\load\\1661433500850-1-0-0.tsfile"";",0
"Classes from ""sun.*"" packages should not be used",Use classes from the Java API instead of Sun classes.,"Jackpot:
warning: Unused Import",import com.sun.source.util.TreePath;,0
Field names should comply with a naming convention,"Rename this field ""_threadAccumulator"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",multiple threads are accessing the same Map. Don't you need a ConcurrentHashMap?,"  private Map<Long, Map<String, Map<String, AbstractAccumulator>>> _threadAccumulator = null;",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Remove the stack print.,      e.printStackTrace();,1
"Unused ""private"" fields should be removed","Remove this unused ""primaryKeyInfo"" private field.","I suggest that you use make the object stronger typed. If primaryKeyInfo and deltaInfo are lists of field names, then declare them as a List<String>, if location is a Path, then declare it as such. The fact that the current implementation of MRCompactor takes a comma-separated list is an implementation detail. In the future, if we move it to using typesafe config, then we can pass directly lists.
",  private final String primaryKeyInfo;,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,Constant naming should be like this :   LIMIT_STR,  private static final int firstColumnTypeIndex = 2;,1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",What is the consideration of setting 50000?,        this.asyncSenderThreadPoolQueue = new LinkedBlockingQueue<Runnable>(50000);,0
"""switch"" statements should have ""default"" clauses",Add a default case to this switch.,its better to have a list of predicates that we support instead of exclusion list. this will future proof us when we add another predicate later and they are not aware of this code,          switch (predicate.getType()) {,0
Field names should comply with a naming convention,"Rename this field ""_offsetKey"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",do we need all these things in Schema? What if we create a UpsertConfig in TableConfig to provide all the necessary information.,  private String _offsetKey;,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,remove it.,      e.printStackTrace();,1
Unused method parameters should be removed,Remove these unused method parameters.,"    public String getExplainString(ExplainOptions explainOptions) {
        // use fragments directly
    }","    public String getExplainString(List<PlanFragment> fragments, ExplainOptions explainOptions) {",0
Field names should comply with a naming convention,"Rename this field ""_bigDecimalValuesSV"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",This should be reverted,  protected BigDecimal[] _bigDecimalValuesSV;,0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"duplicate code, `transferShowTimeSeriesResultToRecordList` and `getQueryDataSet `",      RowRecord record = new RowRecord(0);,0
"""public static"" fields should be constant","Make this ""public static defaultRowsetType"" field final",Add document for this variable.,"    public static String defaultRowsetType = ""alpha"";",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove comments,"    //    createTemplateStatement.addMeasurements(measurements);
MethodDeclaration     //    createTemplateStatement.addDataTypes(dataTypes);
MethodDeclaration     //    createTemplateStatement.addEncodings(encodings);
MethodDeclaration     //    createTemplateStatement.addCompressor(compressors);",1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",In the current implementation this should probably remove offsets from the offset log that are older than SimpleName but I'm not sure we want to keep that Spark internal class in the implementation here,  public void commit(Offset end) {,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Move it to DateTimeUtils,public class TimeUtil {,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""pauseTime"".",Is this a retry pause time or init pause time? If it is retry in the config also add that 'retry' in the name of the config. ,    long pauseTime = this.retryPauseTime;,0
Unnecessary imports should be removed,Remove this unused import 'java.util.jar.Pack200'.,I don't think you really use the Pack200 import :),import java.util.jar.Pack200;,1
"Unused ""private"" fields should be removed","Remove this unused ""ancestorsOwnerAndPermission"" private field.","Do we need such freedom? Can't we just have one OwnerAndPermission for any ancestor directory that needs to be created?
",  private List<OwnerAndPermission> ancestorsOwnerAndPermission;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""%s file  is not data"" 5 times.","the middle of file and is has two blanks, right?","            throw new AclException(String.format(""%s file  is not data"", fileHome + File.separator + fileName));",0
String literals should not be duplicated,Use already-defined constant 'LOCAL_HOST' instead of duplicating its value here.,align by device,"        new IoTDBSourceOptions(""127.0.0.1"", 6667, ""root"", ""root"", ""select s1 from "" + ROOT_SG1_D1);",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""dummy"" 3 times.","+1, curious about why the append write function has `rebalance` exchange  with this sink, and why they are not chained together.","        .name(""dummy"");",0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".",Is this param should be parameterized？,    private long channelNotActiveInterval = 1000 * 60;,0
Static non-final field names should comply with a naming convention,"Rename this field ""HEARTBEAT_PERIOD"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Please fix comment.,        public static long HEARTBEAT_PERIOD = 3;,0
Empty arrays and collections should be returned instead of null,Return an empty collection instead of null.,should we return specified path?,    return null;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Wrap into HoodieIOException?,      throw new RuntimeException(ioe);,1
Redundant casts should not be used,"Remove this unnecessary cast to ""int"".",is the cast to `(int)` necessary still before assigning to `idx`,"    final int idx = (int) Math.floorMod((int) hashOfKey, candidatePartitions.size());",1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"It would be good to have a test for this. Overall, this class seems somewhat suspicious, so any more information on what it strives to do would be welcome!",public class JavaDocSnippet {,0
Arrays should not be created for varargs parameters,"Disambiguate this call by either casting as ""Class"" or ""Class[]"".",Why use reflect? You should be able to typecast in the interceptor.,"            this.method = CallbackAdapterInterceptor.class.getMethod(""onCompletion"", new Class[]{RecordMetadata.class, Exception.class});",1
Field names should comply with a naming convention,"Rename this field ""_enableBrokerQueryLimitOverride"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(nit) `_enableQueryLimitOverride`?,  private final boolean _enableBrokerQueryLimitOverride;,1
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,"nit: raw use of parameterized class, `ContentScanTask` -> `ContentScanTask<?>`","  public static Map<Integer, ?> constantsMap(ContentScanTask task, BiFunction<Type, Object, Object> convertConstant) {",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,should this be an `IllegalStateException` to be more specific? (with `Preconditions.checkState`),"        throw new RuntimeException(""Cannot decrypt cipher text of length "" + ciphertext.length +",1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,I do not like the `xxxxs`,public class SparkLauncherMonitors {,0
All branches in a conditional structure should not have exactly the same implementation,Remove this conditional structure or edit its code blocks so that they're not all the same.,code format,            if(!this.exportColumns.isEmpty() && this.exportColumns.contains(col.getName().toLowerCase())) {,0
Redundant casts should not be used,"Remove this unnecessary cast to ""PropertyChangeListener"".","                    listeners.get(i);

and fold the two lines into one.",                    (PropertyChangeListener)listeners.get(i);,1
"""ThreadLocal"" variables should be cleaned up when no longer used","Call ""remove()"" on ""qctxThreaded"".",Javadoc?,    private static final ThreadLocal<QueryContext> qctxThreaded = new ThreadLocal<>();,1
"Instance methods should not write to ""static"" fields","Make the enclosing method ""static"" or remove this set.","If I query multiple times, when do you clear this?",          seqFile = new HashSet<>(seqResources);,0
"""public static"" fields should be constant","Make this ""public static spark_dpp_version"" field final","    @ConfField
    public static String spark_dpp_version = ""1_0_0"";

All config must has `@ConfField` annotation.","    public static String spark_dpp_version = ""1_0_0"";",0
Multiple variables should not be declared on the same line,"Declare ""right"" on a separate line.",it is better to declare variables at separate lines.,"    IExpression left, right;",1
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.tsfile.common.conf.TSFileConfig'.,Remove this useless import,import org.apache.iotdb.tsfile.common.conf.TSFileConfig;,1
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,"Does ""QuickSort"" here stand for quick sort algorithm? It seems that this node is irrelevant to sort algorithm chosen by BE.",public class PhysicalQuickSort<CHILD_TYPE extends Plan> extends AbstractPhysicalSort<CHILD_TYPE> {,0
Using slow regular expressions is security-sensitive,"Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.","you should add some comment for this pattern, because it's a bit hard to learn about a regex pattern and what's the purpose","    private static final Pattern HAS_TIME_PART = Pattern.compile(""^.*[HhIiklrSsT]+.*$"");",1
Static non-final field names should comply with a naming convention,"Rename this field ""async_pending_load_task_pool_size"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Better to keep the config name. Or made some compatibility.
Some other users may modify this config to enhance their load ability.
If the name changed, their config will be disable and fall back to default value, this will cause problem",    public static int async_pending_load_task_pool_size = 5;,0
Throwable and Error should not be caught,Catch Exception instead of Throwable.,"Is there any reason to `catch Throwable`, instead of specific exceptions?
",          } catch (Throwable e) {,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"PathClassLoader shouldn't be ported since it extends BasicDexClassLoader, and ""dex"" files are unique to Android.",    /* TODO(amisail): try to port PathClassLoader,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","Suggestion:
I think passing in the pattern is pointless, as it will always be of the form yyyy/MM/... until a certain granularity (e.g. no one reasonable would put month first). Instead, users can just set the granularity of their partitioner (i.e. day, hour, minute).
The schema should be created dynamically, so if  a user sets granularity=hour, then the schema would be `{'year':int, 'month':int, 'day':int, 'hour':int}` (possibly plus prefix and suffix). Then the `PartitionedWriter` will construct the path and be able to for example add field names correctly.
",public abstract class TimeBasedWriterPartitioner<D> implements WriterPartitioner<D> {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""protocol"" 3 times.","I think you should modify the protocol tag value to `zipkin-http` and `zipkin-kafka` instead of modifying the metrics name, this name is not configured in self o11y .

Also, all other existing tag values are lowercases.","            ""zipkin_trace_in_latency"", ""The process latency of trace data"",
ObjectCreationExpr             new MetricsTag.Keys(""protocol""), new MetricsTag.Values(""HTTP"")",0
Class variable fields should not have public accessibility,Make LOG_BODY_TYPE a static final constant or non-public and provide accessors if needed.,Why use `int` rather than `Enum`?,            public static int LOG_BODY_TYPE = 2;,0
"Unused ""private"" fields should be removed","Remove this unused ""logger"" private field.",  private static final Logger logger = LoggerFactory.getLogger(LikeOperator.class);,  private Logger logger = LoggerFactory.getLogger(LikeOperator.class);,0
Two branches in a conditional structure should not have exactly the same implementation,This branch's code block is the same as the block for the branch on line 432.,this `else if` and following `else if` can be merged to one,            } else if (entry.getKey().contains(BrokerUtil.HADOOP_FS_NAME),1
Raw types should not be used,Provide the parametrized type for this generic.,"Is it necessary to create a new list now that you have processed the last statement?
And maybe this branch can be extracted from the loop.",            executeList = new ArrayList();,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,I think a config is better ,    private final static int MAX_QUEUE_SIZE = 100;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""For Store {} in region {}, "" 3 times.",No need of 'Store' or 'region'... its obvious that we're talking store and region. Having these works in there bulk up logging and make it harder to read/parse.,"          LOG.info(""For Store {} in region {}, "" +",0
Using publicly writable directories is security-sensitive,Make sure publicly writable directories are used safely here.,/tmp --> System.gettemp dir or something like that,"    File tempDir = new File(""/tmp"", String.valueOf(System.currentTimeMillis()));",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""/input/"" 3 times.",Lets log the full path being created.,"    fs.mkdirs(new Path(_stagingDir + ""/input/""));",0
Raw types should not be used,Provide the parametrized type for this generic.,"performance: consider putting the `isJDKVersion..()` check outside of the `Class.forName` call. This would result in a faster path on JDKs < 18.

same for the method below","            Class gpt = Class.forName(""com.sun.source.doctree.SnippetTree""); //NOI18N
CatchClause             return isJDKVersionRelease18_Or_Above()
CatchClause                     ? (List<DocTree>) gpt.getDeclaredMethod(""getAttributes"").invoke(node) //NOI18N
CatchClause                     : null;",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""invokedFrom"" is nullable here.",?,"                    String k = invokedFrom.getMethodName() + "":"" + invokedFrom.getLineNumber();",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",Why does it end in Inf,public abstract class StreamResponseInf {,0
Double Brace Initialization should not be used,Use another way to initialize this instance.,"Creating a map per method could be too much overhead. Suggest keeping the old way but just add `BIG_DECIMAL` into the picture
    if (left == BIG_DECIMAL || right == BIG_DECIMAL) {
      return BIG_DECIMAL;
    }
    ...",    Set<FieldSpec.DataType> dataTypes = new HashSet<FieldSpec.DataType>() {{,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"This is sort of gross naming, because the value type ""owned"" by the factory is this outer class that is named for the test... which includes the word factory.  It would probably make the test case vastly easier to have a static inner factory-managed type. 
",final class FactoryExtendingAbstractClass {,0
Unnecessary imports should be removed,Remove this unused import 'org.omg.CORBA.TIMEOUT'.,A lot of imports are not used. You should check that and delete them,"import org.apache.iotdb.db.exception.StorageEngineException;
ImportDeclaration import org.apache.iotdb.db.exception.path.PathException;
ImportDeclaration import org.apache.iotdb.db.exception.query.QueryProcessException;
ImportDeclaration import org.apache.iotdb.db.metadata.MManager;
ImportDeclaration import org.apache.iotdb.db.metadata.MNode;
ImportDeclaration import org.apache.iotdb.db.qp.constant.SQLConstant;
ImportDeclaration import org.apache.iotdb.db.qp.physical.crud.AggregationPlan;
ImportDeclaration import org.apache.iotdb.db.qp.physical.crud.LastQueryPlan;
ImportDeclaration import org.apache.iotdb.db.query.aggregation.AggregateResult;
ImportDeclaration import org.apache.iotdb.db.query.context.QueryContext;
ImportDeclaration import org.apache.iotdb.db.query.control.QueryResourceManager;
ImportDeclaration import org.apache.iotdb.db.query.dataset.SingleDataSet;
ImportDeclaration import org.apache.iotdb.db.query.factory.AggreResultFactory;
ImportDeclaration import org.apache.iotdb.db.query.reader.series.IAggregateReader;
ImportDeclaration import org.apache.iotdb.db.query.reader.series.SeriesAggregateReader;
ImportDeclaration import org.apache.iotdb.tsfile.exception.cache.CacheException;
ImportDeclaration import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;
ImportDeclaration import org.apache.iotdb.tsfile.file.metadata.statistics.Statistics;
ImportDeclaration import org.apache.iotdb.tsfile.read.TimeValuePair;
ImportDeclaration import org.apache.iotdb.tsfile.read.common.BatchData;
ImportDeclaration import org.apache.iotdb.tsfile.read.common.Path;
ImportDeclaration import org.apache.iotdb.tsfile.read.common.RowRecord;
ImportDeclaration import org.apache.iotdb.tsfile.read.filter.basic.Filter;
ImportDeclaration import org.apache.iotdb.tsfile.read.query.dataset.QueryDataSet;
ImportDeclaration import org.apache.iotdb.tsfile.utils.TsPrimitiveType;
ImportDeclaration import org.omg.CORBA.TIMEOUT;",1
Local variables should not shadow class fields,"Rename ""context"" which hides the field declared at line 85.",`engineContext` sounds good?,    HoodieFlinkEngineContext context = new HoodieFlinkEngineContext(,1
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.db.monitor.StatMonitor'.,remove,import org.apache.iotdb.db.monitor.StatMonitor;,1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,This type already exists—no need to add it.,"  ClearCache,",0
"Unused ""private"" methods should be removed","Remove this unused private ""processRename"" method.","    private void processRenameAlterOperation(Database db, Table table, List<AlterClause> alterClauses) throws DdlException {","    private void processRename(Database db, Table table, List<AlterClause> alterClauses) throws DdlException {",1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,how about use log to replace system.out,"        System.out.println(""selector removed : name = "" + selectorData.getName());",1
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"There registrations should probably belong elsewhere, not into the debugger, in the future.",    public void Python() {},0
String literals should not be duplicated,Use already-defined constant 'LEVEL_PERMANENT' instead of duplicating its value here.,"Not required here, just click on the use default. on the form editor to remove this line.","        cbTrustLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ""None"", ""Temporary"", ""Permanent"" }));",1
"""InterruptedException"" should not be ignored","Either re-interrupt this method or rethrow the ""InterruptedException"" that can be caught here.","            var tables = new ArrayList<Table>(tableNames.size());

            try {
                for (var fut : tableFuts) {
                    var table = fut.get();
           Arrays.stream(tableFuts).map(CompletableFuture::getNow(null)).filter(f -> f != null).collect(Collectors.toList())","            var tables = new ArrayList<Table>(tableNames.size());
TryStmt             try {
CatchClause                 for (var fut : tableFuts) {
CatchClause                     var table = fut.get();",0
Return values should not be ignored when they contain the operation status code,"Do something with the ""boolean"" value returned by ""createNewFile"".",Add todo: handle existing file,    file.createNewFile();,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,why comment this?,//                finagleSpan.log(cause);,1
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","Not clear to me.

Why do we need volatile guarantees here?","    private volatile T2<String, KeystoreEncryptionKey> masterKey = new T2<>(DEFAULT_MASTER_KEY_NAME, null);",1
Unused local variables should be removed,"Remove this unused ""jdkPath"" local variable.",Strange. Why do we need classpath of the IDE? Things like `org-openide-util.jar` & co.?,"                ClassPath jdkPath = ClassPathSupport.createClassPath(System.getProperty(""java.class.path""));",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""localhost"" 5 times.","""http"" replace to pcTypeEnum.HTTP.getName()","        list.add(URIRegisterDTO.builder().appName(""test1"").rpcType(""http"").host(""localhost"").port(8091).build());",0
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),We will both touch flushedSequenceIdByRegion and storeFlushedSequenceIdsByRegion in persistRegionLastFlushedSequenceIds and removeDeletedRegionFromLoadedFlushedSequenceIds? Possible data race if we run removeDeletedRegionFromLoadedFlushedSequenceIds in background?,      new Thread(() -> {,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"Isn't this value a part of API - if so, it should move to `GraalSDK` so API users can depend on a symbol. If this library impl reads some property defined by Scripting API, shouldn't be the string in Scripting API/SPI ?

... maybe an overkill.","    private final static String ALLOW_ALL_ACCESS = ""allowAllAccess""; // NOI18N",0
Class variable fields should not have public accessibility,Make database2Measurement2TagOrders a static final constant or non-public and provide accessors if needed.,getter / setter,"  public static Map<String, Map<String, Map<String, Integer>>> database2Measurement2TagOrders =",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""unexpected state:"" 6 times.","nit: `String.format(""unexpected stage transition: %s to %s"", this.runningState, PENDING)`, also for the other similar methods. 
","    Preconditions.checkState(null == this.runningState, ""unexpected state:"" + this.runningState);",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal "", part="" 5 times.","""]"" can be replaced with ']'","            sb.append("", part="").append(p).append(""]"");",0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,"Why not create a separate factory interface? it is also not necessary to take the form, you can just config.","    Map<String, Function<? super LogStorageBudgetView, LogStorageBudget>> budgetFactories();",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,"Please use logger to optimize this print, this can avoid the .out file expansion.",                                        e.printStackTrace();,1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",Maybe we can move these groupby relevent classes to a new package.,public abstract class GroupByEngine extends QueryDataSet {,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""format"".",You should format the code.,"        SimpleDateFormat format =   new SimpleDateFormat( ""yyyy-MM-dd"" );",0
"Blocks should be synchronized on ""private final"" fields","""instance"" is a method parameter, and should not be used for synchronization.","hmm. in this case, shall we just make set each pinot component(controller/broker/server) has a field `_isShuttingDown` and set them to true when `ServiceStartable.stop()` is called?

Then all existing component healthcheck will take that field to return status.","      LOGGER.info(""Trying to stop Pinot [{}] Instance [{}] ..."", role, instanceId);
ExpressionStmt       ServiceStatus.setServiceStatusCallback(instanceId, new ServiceStatus.ShuttingDownServiceStatusCallback());
ExpressionStmt       instance.stop();",0
"Unused ""private"" classes should be removed","Remove this unused private ""CopyReaderWriter"" class.","This is unused, correct? Could be removed.",    private static final class CopyReaderWriter implements Runnable {,1
Collection.isEmpty() should be used to test for emptiness,Use isEmpty() to check whether the collection is empty or not.,merge with `paths.get(0).endsWith(HoodieFileFormat.PARQUET.getFileExtension()`?,    if (uniquePaths.size() == 0) {,0
Static non-final field names should comply with a naming convention,"Rename this field ""WRITER"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","This variable is not going to be changed in concurrency case, right? Why need `volatile`?",    private static volatile IWriter WRITER;,0
Nested code blocks should not be used,Extract this nested code block into a method.,Dangling parenthesis,        {,1
Static non-final field names should comply with a naming convention,"Rename this field ""INJECTION_TAGS"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","        /**
         * Tag the span by the key/value in the correlation context, when the keys listed here exist.
         */
        public static String AUTO_TAG_KEYS = """";","        /**
FieldDeclaration          * Extract tags from the correlation.
FieldDeclaration          */
FieldDeclaration         public static String INJECTION_TAGS = """";",0
Nested blocks of code should not be left empty,Either remove or fill this block of code.,"You should not be ignoring InterruptedExceptions. Typically, this means the application is being shut down.",        } catch (InterruptedException ignored) {,0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,use a default method here to call unassign(b[]) so that our various implementations can skip including the same.,"  CompletableFuture<Void> unassign(byte[] regionName, boolean forcible);",0
Field names should comply with a naming convention,"Rename this field ""R2_RESPONSE_EVENT_NAMESPACE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Change it to `r2.response`, as we can't assume the parent namespace?","  private final String R2_RESPONSE_EVENT_NAMESPACE = ""gobblin.http.r2.response"";",0
Unused local variables should be removed,"Remove this unused ""isRequestRoll"" local variable.",Seems this boolean is not needed now. Can u pls delete,          boolean isRequestRoll;,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,It should be more appropriate to use System.out.printf instead of System.err.printf,"            System.err.printf(""request to <%s> cost: %d replyMessage: %s %n"", topic, cost, retMsg);",0
"Unused ""private"" fields should be removed","Remove this unused ""hardRef"" private field.",What's going on here? Trying to wrap my head around this while debugging NETBEANS-4754...,                    instDelegate = new WeakReference<Object>(d) { private Object hardRef = fd; };,0
Field names should comply with a naming convention,"Rename this field ""_disableGroovy"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","According to #7966, it looks that we would eventually want to disable Groovy by default. What's our plan on changing the default behavior?",  private final Boolean _disableGroovy;,0
Short-circuit logic should be used in boolean contexts,"Correct this ""|"" to ""||"".",isMetal || isNimbus | isFlatLaf  ->   isMetal || isNimbus || isFlatLaf at all places maybe this trio could be replaced an additional isNative() method.,        if( isMetal || isNimbus | isFlatLaf ) {,1
Raw types should not be used,Provide the parametrized type for this generic.,"*[JdkObsolete](https://errorprone.info/bugpattern/JdkObsolete):*  It is very rare for LinkedList to out-perform ArrayList or ArrayDeque. Avoid it unless you're willing to invest a lot of time into benchmarking. Caveat: LinkedList supports null elements, but ArrayDeque does not.


            List<CompletableFuture> futureList = new ArrayList<>();



(at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)

---

Was this a good recommendation?
[ [? Not relevant](https://www.sonatype.com/lift-comment-rating?comment=205559277&lift_comment_rating=1) ] - [ [? Won't fix](https://www.sonatype.com/lift-comment-rating?comment=205559277&lift_comment_rating=2) ] - [ [? Not critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=205559277&lift_comment_rating=3) ] - [ [? Critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=205559277&lift_comment_rating=4) ] - [ [? Critical, fixing now](https://www.sonatype.com/lift-comment-rating?comment=205559277&lift_comment_rating=5) ]",            List<CompletableFuture> futureList = new LinkedList<>();,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""startTime"" 11 times.",Normally the convention is left inclusive and right exclusive.,"        Predicate.AND(Predicate.LT(""startTime"", endTime), Predicate.GT(""endTime"", startTime),",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal "", please set as: "" 3 times.","      logger.error(""Wrong {}, please set as: {} !"", TSFILE_FILE_SYSTEM_STRING, properties
          .getProperty(TSFILE_FILE_SYSTEM_STRING));","      logger.error(""Wrong "" + TSFILE_FILE_SYSTEM_STRING + "", please set as: "" + properties
NameExpr           .getProperty(TSFILE_FILE_SYSTEM_STRING) + "" !"");",0
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""serviceExtension"" parameter (sonar.java.source not set. Assuming 8 or greater.)",can you rename this local var authServiceExtension? I confused it with serviceExtension above,            (serviceExtension) -> {,0
"""String#replace"" should be preferred to ""String#replaceAll""","Replace this call to ""replaceAll()"" by a call to the ""replace()"" method.","            recallQuery.and(contains(AlarmRecord.ALARM_MESSAGE, keyword.replaceAll(""/"", ""\\\\/"")));","            recallQuery.and(contains(AlarmRecord.ALARM_MESSAGE, keyword.replaceAll(""/"", ""\\/"")));",1
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,We use 4 space to indent,  private final static TBinaryProtocol.Factory protocolFactory_ =,0
Raw types should not be used,Provide the parametrized type for this generic.,"avoid using raw type of `Map`, indicating directly its key type and value type",  public Map getAllTriggerStates() {,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Same here.,      throw new RuntimeException(e);,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Got runtime exception when hive syncing"" 3 times.","minor. can we also add something like ""but still proceeding as configured to ignoring hive connect exceptions"" ","        LOG.error(""Got runtime exception when hive syncing"", e);",0
Local variables should not shadow class fields,"Rename ""tables"" which hides the field declared at line 109.","            var tables = new ArrayList<Table>(tableNames.size());

            try {
                for (var fut : tableFuts) {
                    var table = fut.get();
           Arrays.stream(tableFuts).map(CompletableFuture::getNow(null)).filter(f -> f != null).collect(Collectors.toList())","            var tables = new ArrayList<Table>(tableNames.size());
TryStmt             try {
CatchClause                 for (var fut : tableFuts) {
CatchClause                     var table = fut.get();",0
"""@Deprecated"" code should not be used","Remove this use of ""cacheProcessor""; it is deprecated.",Can we cache the value of `PerformanceStatisticProcessor` in the instance variable?,            if (cacheProcessor.context().kernalContext().performanceStatistics().enabled()),0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"        System.out.println(""Starting a server node... Logging to file: example-node.log"");","        System.out.println(""Starting a server node... Logging to file: ignite.log"");",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",Why implements WALEditValue?,public abstract class InsertPlan extends PhysicalPlan implements WALEditValue {,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Is this needed?,        //return System.console() != null;,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,use LOGGER in all these lines?,"    System.out.println(""\n============================================================\n"" + toString());",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Can this Exception be specific?

",        final MessageExt messageExt) throws Exception {,1
"""ThreadLocal"" variables should be cleaned up when no longer used","Call ""remove()"" on ""principalAuthContextThreadLocal"".",why volatile? this seems like a bug,  private volatile ThreadLocal<PrincipalAuthContext> principalAuthContextThreadLocal;,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","Hi, I suggest will `ProfileTaskExecutionService` disabled by default, enabled by the user through the displayed configuration.","    private static volatile ScheduledExecutorService PROFILE_TASK_READY_SCHEDULE = Executors.newScheduledThreadPool(15, new DefaultNamedThreadFactory(""PROFILE-TASK-READY-SCHEDULE""));",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,nit: docs can be put in now :), * TODO java-doc,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""type"" is nullable here.","interesting, I wonder if this is something that we're expecting to happen. From the code around `typeFromJson(..)` it looks like there shouldn't be a `null` returned. It's probably worth adding a test for this","    Preconditions.checkArgument(type != null && type.isNestedType() && type.asNestedType().isStructType(),",1
"""Map.get"" and value test should be replaced with single method call","Replace this ""Map.containsKey()"" with a call to ""Map.computeIfAbsent()"".",update javadoc,      if (!globalLatestFlushedTimeForEachDevice.containsKey(device),0
"Subclasses that add fields should override ""equals""","Override the ""equals"" method in this class.",Rename to Cache.,"public abstract class NewCache extends LinkedHashMap<Integer, Integer> {",0
Field names should comply with a naming convention,"Rename this field ""_watermarkMillis"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Should we change this to final and make the metadata immutable?,  private long _watermarkMillis;,0
Null pointers should not be dereferenced,"""NullPointerException"" will be thrown when invoking method ""expressionOutsideGroupByList()"".","(minor) I feel it would be more readable if we separate the logic with and without group-by because there is no overlap between these 2 handling
    if (hasGroupByClause) {
      ...
    } else {
      ...
    }",    Set<Expression> groupByExprs = hasGroupByClause ? new HashSet<>(pinotQuery.getGroupByList()) : null;,0
"""equals(Object obj)"" and ""hashCode()"" should be overridden in pairs","This class overrides ""equals()"" and should therefore also override ""hashCode()"".","better to override `equals` and `hashCode` methods at the same time, and BTW, why we need to override `equals` methods, we use it in `Map`?",  public boolean equals(Object o) {,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,how about use log,                t.printStackTrace();,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,todo without ticket number,                                // TODO,1
Static non-final field names should comply with a naming convention,"Rename this field ""ZK_TEST_PORT"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Isn't it duplicate with Line 37? If not, what's the purpose of having two ZK test ports?",  private static int ZK_TEST_PORT = 2191;,0
Field names should comply with a naming convention,"Rename this field ""_maxRows"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Pinot should be able to handle `LIMIT Integer.MAX_VALUE`. Can you please check if you explicitly put a threshold on broker via config `pinot.broker.query.response.limit`?,  private int _maxRows = Short.MAX_VALUE;,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""db"" is nullable here.",Lock db before getting table,            Table table = db.getTable(tblName);,0
"Declarations should use Java collection interfaces such as ""List"" rather than specific implementation classes such as ""LinkedList""","The return type of this method should be an interface such as ""Map"" rather than the implementation ""HashMap"".",can we just have this in `hudi-spark` for now. thats the only module that needs to call this. ,"  public static HashMap<String, HashMap<String, FileStatus>> listStatusForAffectedPartitions(",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Here if `_minSegmentTrimSize` is configured (> 0), we should use the server config. If not, use the default","      // TODO: if query option is true and a server minTrimSize is given, shall we use default value or server config?",0
Class variable fields should not have public accessibility,Make SQL_PARAMETERS_MAX_LENGTH a static final constant or non-public and provide accessors if needed.,"Add these configs to documentations, otherwise, nobody can find this feature until they read the source codes","            public static boolean TRACE_SQL_PARAMETERS = true;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, limit the max number of parameter
FieldDeclaration              */
FieldDeclaration             public static int SQL_PARAMETERS_MAX_COUNT = 20;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, SkyWalking won't save the entire parameters string into the tag, but only
FieldDeclaration              * the first {@code SQL_PARAMETERS_MAX_LENGTH} characters.
FieldDeclaration              *
FieldDeclaration              * Set a negative number to save the complete parameter string to the tag.
FieldDeclaration              */
FieldDeclaration             public static int SQL_PARAMETERS_MAX_LENGTH = 512;",0
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @Deprecated annotation.,[minor] we might need to add `@Deprecated` here as well.,  public static final boolean CLIENT_ENABLE_ETAG_CHECK_DEFAULT = false;,1
Private fields only used as local variables in methods should become local variables,"Remove the ""lastSelectedUnseqFiles"" field and declare it as a local variable in the relevant methods.","It seems that these two fields are useless, please check.",  private List<TsFileResource> lastSelectedUnseqFiles;,1
Methods should not have too many parameters,"Constructor has 8 parameters, which is greater than 7 authorized.","Since this is used in both write and flush, shall we call it GMCEException or something more generic?","  MetadataFlushException(String datasetName, String dbName, String tableName, String GMCETopicName,",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove this line,"    // SerializeUtils.serialize(template.getName(), outputStream);",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,do you need to make some clean tasks when job is being cancelled?,                        // TODO(ml): edit log,1
"""public static"" fields should be constant","Make this ""public static load_parallelism"" field final",    public static int default_load_parallelism = 1;,    public static int load_parallelism = 1;,0
"""public static"" fields should be constant","Make this ""public static CYPHER_BODY_MAX_LENGTH"" field final",All these are missing in the agent setup doc. No one would know how to use these unless reading source codes.,"            /**
FieldDeclaration              * If set to true, the parameters of the cypher would be collected.
FieldDeclaration              */
FieldDeclaration             public static boolean TRACE_CYPHER_PARAMETERS = false;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, SkyWalking won't save the entire parameters string into the tag, but only
FieldDeclaration              * the first {@code CYPHER_PARAMETERS_MAX_LENGTH} characters.
FieldDeclaration              * <p>
FieldDeclaration              * Set a negative number to save the complete parameter string to the tag.
FieldDeclaration              */
FieldDeclaration             public static int CYPHER_PARAMETERS_MAX_LENGTH = 512;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, SkyWalking won't save the entire sql body into the tag, but only the first
FieldDeclaration              * {@code CYPHER_BODY_MAX_LENGTH} characters.
FieldDeclaration              * <p>
FieldDeclaration              * Set a negative number to save the complete sql body to the tag.
FieldDeclaration              */
FieldDeclaration             public static int CYPHER_BODY_MAX_LENGTH = 2048;",0
Printf-style format strings should be used correctly,%n should be used in place of \n to produce the platform-specific line separator.,same as above,"      ret.append(String.format(""Region Replica set has not set.\n""));",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""table"" is nullable here.","I think we can just lock the table outside the `switch`, avoid call lock/unlock everywhere inside the `processAlterOlapTable` and `processAlterExternalTable`.",        switch (table.getType()) {,0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,"              return cache == null || cache.getCache() == null || cache.getInvokers() == null || 
                cache.getCache().get(routerName) == null;",        if (cache == null || cache.getCache() == null || cache.getInvokers() == null || cache.getCache().get(routerName),1
"Declarations should use Java collection interfaces such as ""List"" rather than specific implementation classes such as ""LinkedList""","The type of the ""params"" object should be an interface such as ""Map"" rather than the implementation ""HashMap"".","  public QueryDataSet execute(QueryExpression queryExpression, Map<String, Long> params) throws IOException {","  public QueryDataSet execute(QueryExpression queryExpression, HashMap<String, Long> params) throws IOException {",1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,why var names in all caps?,"  SegmentSizeRecommendations estimate(long GSS, int DSS, int NRGS, long NRPP) {",1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""dimensionKeyMetricTimeSeriesMap"" is nullable here.",Replace with MapUtils.isEmpty.,      if (dimensionKeyMetricTimeSeriesMap == null || dimensionKeyMetricTimeSeriesMap.isEmpty()) {,1
Static non-final field names should comply with a naming convention,"Rename this field ""OPERATION_NAME"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",make it final is better,"    private static String OPERATION_NAME = ""SpringAsync"";",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""user.read"" 8 times.","The Files.Read.All isn't obvious to me, can you document why that scope is used for derived data?","          .put(""derived-data"", ImmutableList.of(""user.read"", ""Files.Read.All""))",0
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,"I think you can assume that the props file is passed, no need for these validations, since we are not doing these validations for the other args anyways, it's making this part look unclean",        assert (args.length >= 12);,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,             * TODO(ml): support substitute outer column in correlated subquery,             * TODO(ml): support substitute outer column in subquery,1
Field names should comply with a naming convention,"Rename this field ""_aggregationFunctions"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",All these member variables can be final,  AggregationFunction[] _aggregationFunctions;,0
Static non-final field names should comply with a naming convention,"Rename this field ""default_db_data_quota_bytes"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Both config should be `masterOnly = true`,    public static long default_db_data_quota_bytes = 1024 * 1024 * 1024 * 1024L; // 1TB,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove,    // chunkWriter = null;,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,nice work to add examples on how to run VerifyReplication between non secure and secure environment. It is very helpful.,"    System.err.println("" To verify the data in TestTable between the cluster runs VerifyReplication and cluster-b"");",0
Local variables should not shadow class fields,"Rename ""casdoorAuthService"" which hides the field declared at line 47.",why not init in plugin data handler？,        CasdoorAuthService casdoorAuthService = new CasdoorAuthService(casdoorConfig);,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"remove sysouts
","          System.out.println(""Before "" + System.currentTimeMillis());",1
Field names should comply with a naming convention,"Rename this field ""_maxRows"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Should we validate the query with `LIMIT` and reject queries with limit larger than this?,  private int _maxRows = 1000000;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Rename to monitoringTimeIso? Because we always name the window for analysis as monitoringWindowSomething; using the same naming convention could prevent some misunderstanding.,"      @QueryParam(""time"") String analysisTimeIso) throws Exception {",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"I think we can avoid the need for this by doing the caching in the same method that creates writers. Instead of checking the writer map before calling this method, this method should handle it:
java
synchronized void addEntry(ManifestEntry entry, int partitionSpecId) {
  getWriter(partitionSpecId).existing(entry);
}

synchronized ManifestWriter getWriter(int partitionSpecId) {
  ManifestWriter writer = manifestWritersBySpecId.get(partitionSpecId);
  if (writer != null) {
    if (writer.length() < targetSizeBytes) {
      return writer;
    } else {
      close(writer);
    }
  }

  ...
  writer = new ManifestWriter(partitionSpec, outputFile, snapshotId());
  manifestWritersbySpecId.put(partitionSpecId, manifestWriter);
  return manifestWriter;
}

That removes the dependency between the methods, which is cleaner than an assertion.","        throw new RuntimeException(""ManifestWriter already exists for this partition-specId "" + partitionSpecId);",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"private final static InternalLogger log = ClientLogger.getLog();

建议用log.info(),性能更高",                 * System.out.println(sendResult.toString());,0
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @deprecated Javadoc tag.,"This API currently returns a String. please keep the return type the same, we can change the types in the new APIs that you have added.","  public List<Map<String, String>> getServerToSegmentsMapDeprecated2(",0
Type parameters should not shadow other type parameters,"Rename ""T"" which hides a type parameter from the outer scope.","1. Please format the code.
2. Should BaseFactory considering package name when creating an instance? What about making base factory creates instances from any full class names. The factory that extends the base factory could override the method to inject package name if necessary.",public class BaseFactory<T> {,0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,Combine two ifs.,    if (recipients != null) {,1
Field names should comply with a naming convention,"Rename this field ""_workingDir"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",`_workingDir` and `_collectorRecordFile` can be final? We don't need to create a separate path each time we initialize the buffer.,  private File _workingDir;,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",No need to construct `Set` bcs the`TreeUtilities` method accepts `Collection`. See also review comments for `TreeUtilities` file.,    private static final Set<String> ERROR_CODES = new HashSet<String>(Arrays.asList(,0
"""public static"" fields should be constant","Make this ""public static PEER_MAX_LENGTH"" field final","Move this to Plugin, this is not a part of core API, right? And don't put plugin name in comments, you wouldn't know when someone add it to somewhere else, considering `PeerUtil` is a core API",        public static int PEER_MAX_LENGTH = 200;,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,Better to print in one line,"      System.out.println(""Columns participating in filter"");",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,      fail();,      e.printStackTrace();,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Most of the FileSystem utilities are in `HadoopUtils`. Can you move it there?
",public class FileSystemUtils {,0
"Unused ""private"" methods should be removed","Remove this unused private ""onWorkUnitUpdate"" method.",Where is this method called? should it really be Source's responsibility to detect it ? ,"  private void onWorkUnitUpdate (List<String> oldTaskIds, List<WorkUnit> newWorkUnits) {",1
Static non-final field names should comply with a naming convention,"Rename this field ""default_db_replica_quota_size"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Add this new config in
docs/zh-CN/administrator-guide/config/fe_config.md
docs/en/administrator-guide/config/fe_config.md",    public static long default_db_replica_quota_size = 1024 * 1024 * 1024;,0
"""public static"" fields should be constant","Make this ""public static async_pending_load_task_pool_size"" field final","Better to keep the config name. Or made some compatibility.
Some other users may modify this config to enhance their load ability.
If the name changed, their config will be disable and fall back to default value, this will cause problem",    public static int async_pending_load_task_pool_size = 5;,0
"Unused ""private"" fields should be removed","Remove this unused ""primaryKey"" private field.","Can you be more descriptive what these strings are? Are these column names? If yes, isn't it possible to have more than one primary key and/or delta column?
",  private final String primaryKey;,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"`limitStr`and `methodNotSupportedMessage ` don't match the regular expression `LIMIT_STR`?
","  private static final String limitStr = ""LIMIT"";",0
Field names should comply with a naming convention,"Rename this field ""_watermarkAwareWriters"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Does this need to be a concurrent structure to avoid concurrent modification exception if the watermarkCommitter happens to traverse the list at the same time a new data writer is added?,  private final List<WatermarkAwareWriter> _watermarkAwareWriters;,0
Unnecessary imports should be removed,Remove this unused import 'org.apache.pinot.common.segment.SegmentMetadata'.,unused import?,import org.apache.pinot.common.segment.SegmentMetadata;,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"TODO should be with the link to the ticket
Method name is strange (taking into account return value) and it strange to have it in parent class.",     * // TODO started and start methods can be merged.,1
Resources should be closed,"Use try-with-resources or close this ""Statement"" in a ""finally"" clause.",Put the connection and statement into `try` to establish a better example.,      Statement statement = connection.createStatement();,1
Unused local variables should be removed,"Remove this unused ""sanitizedName"" local variable.","You can define `""[\\s/]""` as a constant. Please also put an empty space before `""_""`.
","      String sanitizedName = field.name().replaceAll(""[\\s/]"",""_"");",0
Raw types should not be used,Provide the parametrized type for this generic.,Is this queue used by gRPC in default?,        ArrayBlockingQueue blockingQueue = new ArrayBlockingQueue(threadPoolQueueSize);,0
Field names should comply with a naming convention,"Rename this field ""_zkAddress"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","call it `_externalZkAddress`? And add comment that if this is set, Quickstart won't start an embedded zk.
",  private final String _zkAddress;,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"I feel this FunctionRegistry should be in pinot-common module, so we  can leverage it during query compilation phase.",public class FunctionRegistry {,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,how about use log to replace system.err,                System.err.println(t.getMessage());,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Use logger or throw the exception.,"      } catch (Exception e) {
ExpressionStmt         e.printStackTrace();",1
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""totalSizeInBytes"".","If it does not have the size, I would assume that size is 0. Any reason to use 1 here?","    long totalSizeInBytes = workUnits.stream().mapToLong(wu -> wu.getPropAsLong(ServiceConfigKeys.WORK_UNIT_SIZE, 1)).sum();",0
"Loops should not contain more than a single ""break"" or ""continue"" statement",Reduce the total number of break and continue statements in this loop to use at most one.,"Can we break up these cases for clarity?

                        final ChildData oldChildData = childData;
                        // Ignore this event if we've already processed a newer update for this node.
                        if ( (isLive(oldChildData) && newStat.getMzxid() <= oldChildData.getStat().getMzxid()) )
                        {
                            break;
                        }
                        // Non-root nodes are not allowed to transition from dead -> live;
                        // make sure this isn't a delayed response that came in after death.
                        if ( parent != null && oldChildData == DEAD )
                        {
                            break;
                        }
",                            break;,0
Field names should comply with a naming convention,"Rename this field ""RAMSize"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",  private long ramSize;,  private long RAMSize;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""0.7.0"" 10 times.",Why change the default config.,"      .sinceVersion(""0.7.0"")",0
Loops should not be infinite,Add an end condition to this loop.,"I don't think we still need this single thread pool when we introduce the thread pool. @zifeihan 
Could we use the same one?

https://github.com/apache/skywalking/blob/b79436e798546102781b9e57f1116eb74113a7d8/oap-server/server-fetcher-plugin/kafka-fetcher-plugin/src/main/java/org/apache/skywalking/oap/server/analyzer/agent/kafka/KafkaFetcherHandlerRegister.java#L154","    public void run() {
WhileStmt         while (true) {
TryStmt             try {",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",let's add a javadoc for public classes and methods.,"public abstract class BaseSparkUpdateStrategy<T extends HoodieRecordPayload<T>> extends UpdateStrategy<T, JavaRDD<HoodieRecord<T>>> {",0
Field names should comply with a naming convention,"Rename this field ""_httpClient"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","`_httpClient`, `_headers` and `_scheme` can be private final, `_sslContext` can be local variable ","  AsyncHttpClient _httpClient;
FieldDeclaration   Map<String, String> _headers = new HashMap<>();
FieldDeclaration   String _scheme = CommonConstants.HTTP_PROTOCOL;
FieldDeclaration   SSLContext _sslContext = null;",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,It this a valid TODO syntax? Can IDEA recognize it? I would suggest creating additional single-line comment instead,     *      TODO: Fix in https://issues.apache.org/jira/browse/IGNITE-15285,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove commented code and explain (in the code) why you read an int.,//    fileMetaData.setCurrentVersion(ReadWriteIOUtils.readInt(buffer));,1
Lambdas should be replaced with method references,Replace this lambda with method reference 'IgniteFutureCancelledCheckedException.class::isInstance'. (sonar.java.source not set. Assuming 8 or greater.),Can be in one line,                .anyMatch(e -> e instanceof IgniteFutureCancelledCheckedException);,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,System.err,"            System.out.println(""env DORIS_HOME is not set"");",0
Field names should comply with a naming convention,"Rename this field ""BRANCH_DEFAULT_TYPE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",That looks like an ideal candidate to be an enum.,"  private final String BRANCH_DEFAULT_TYPE = ""Type.BRANCH_DEFAULT"";",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"`double`? This is a `getBytes` method only. And bytes could not be as tag, right?",            // TODO: double may be a field?,0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,let's introduce an enum instead of boolean flag,"    List<SqlCursor<List<?>>> executeQuery(Boolean isQuery, String schema, String query, Object[] params);",0
"""public static"" fields should be constant","Make this ""public static HEARTBEAT_PERIOD"" field final",Please fix comment.,        public static long HEARTBEAT_PERIOD = 3;,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Utility class should have private constructor to prohibit instantiation.,public class OrderByUtils {,1
Raw types should not be used,Provide the parametrized type for this generic.,        List<List<Comparable>> jobInfos = Lists.newArrayList();,        List<List<Comparable>> jobInfos = new ArrayList<List<Comparable>>();,1
"Unused ""private"" fields should be removed","Remove this unused ""requiresCustomFiltering"" private field.","Jackpot:
warning: Variable requiresCustomFiltering is never read",        private boolean requiresCustomFiltering;,1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,`static final` variables should have names in all caps `OVERHEAD_SIZE_IN_BYTES`,  public static final int overheadSizeInByte = 15;,1
"""java.nio.Files#delete"" should be preferred","Use ""java.nio.file.Files#delete"" here for better messages on error conditions.",check the return value of `delete`,    oldResourceFile.delete();,0
"Unused ""private"" fields should be removed","Remove this unused ""SPEC"" private field.",Did you intend to add `AddPartitionSpec` to this PR?,"  private static final String SPEC = ""spec"";",0
Abstract classes without fields should be converted to interfaces,"Convert the abstract class ""BulkInsertInternalPartitionerWithRowsFactory"" into an interface. (sonar.java.source not set. Assuming 8 or greater.)",drop `Internal` from the name?,public abstract class BulkInsertInternalPartitionerWithRowsFactory {,0
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.tsfile.read.common.RowRecord'.,"this import is not used, please remove it.",import org.apache.iotdb.tsfile.read.common.RowRecord;,1
Return values should not be ignored when they contain the operation status code,"Do something with the ""boolean"" value returned by ""delete"".",check the return value of `delete`,    oldResourceFile.delete();,1
Unused type parameters should be removed,T is not used in the method.,"I'd rather not add this to the build method. Nothing distinguishes it from other options, so I think we should add transformations as configuration methods, like we do for `equalityFieldIds`.

I'm also thinking that it would be good to have a more light-weight way to add these transforms. Rather than an additional accessor that has two abstract methods, why not just register functions? It could look like this:
java
  Avro.writeDeletes(outFile)
      ...
      .transformPaths(StringData::fromString)
      .buildPositionWriter();

That way it's easier to use a method reference rather than creating a class. And nothing actually needs to transform pos yet, so we can just leave that out.","    public <T> PositionDeleteWriter<T> buildPositionWriter(ParquetValueWriters.PathPosAccessor<?, ?> accessor)",0
"Unused ""private"" fields should be removed","Remove this unused ""transferStore"" private field.",Don't need the TODO anymore?,  private TransferStore transferStore; // TODO(olsona): use transferStore,0
Static non-final field names should comply with a naming convention,"Rename this field ""IGNORE_SUFFIX_ARRAY"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","ContextManagerExtendService's instance is controlled by the agent core. This field should not be a `static` one, like `status`.",    private static String[] IGNORE_SUFFIX_ARRAY = new String[0];,0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"You don't need to override this method.
",  public Result executePolicy(Object record) {,0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,same as above,"    AbstractChunkReader AbstractChunkReader = new ChunkReader(chunk, null);",0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"if the ip:port is the same,but httpclient config properties are different, how to fix this situation?
i think you should create one object to keep them as the clients cache's key, at least adress and httpclient configuration should be included. ","        ReferenceCountedClient referenceCountedClient = clients.computeIfAbsent(url.getAddress(), _key -> {",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Cannot translate according to "" 4 times.","The value of the property could influence severity - e.g. the message would always be logged, but (for example) with `MSG_DEBUG` when doing `ant clean`.","                    log(""Cannot translate according to "" + moduleAutoDeps + "" because could not find "" + jar, Project.MSG_WARN);",0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,                int doris_exchange_instances = -1;,                int doris_exchange_instances= -1;,0
Collection.isEmpty() should be used to test for emptiness,Use isEmpty() to check whether the collection is empty or not.,`while (!queue.isEmpty())`,    while (queue.size() != 0) {,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,remove thisee lines,    // TODO: Get the kafka topic emit mle for realtime segments,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"I think it's better to print a usage message followed by a `System.exit(1)`.
","      throw new RuntimeException(""Missing argument. Expected path to configuration file."");",0
Local variables should not shadow class fields,"Rename ""drainingDataNodes"" which hides the field declared at line 95.",What's the meaning of `drainingDataNodes`.   Is `req.getDataNodeLocations()` all draining DataNodes?,              drainingDataNodes -> {,0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,"just want to point out, in AWS module we decided to not exposing these properties related to credentials, because this forces users to hard-code their secrets in plain text and is not a good security practice. Also this forces users to use a long-term credential instead of a session credential that will expire and has lower security burden. That is why we had the client factory class so that by default we load credentials using the default credentials chain, and users customize the client initialization process directly if they want. I don't know enough about ECS service use pattern, maybe this is a common use pattern on your side, but just keep in mind about these potential security risks.","  String ACCESS_KEY_ID = ""ecs.s3.access.key.id"";",0
Class variable fields should not have public accessibility,Make KEY_COUNT a static final constant or non-public and provide accessors if needed.,Should be renamed to `ELEMENT_MAX_NUMBER`.,        public static int KEY_COUNT = 3;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"catching RTE and wrapping it in RTE and throwing not needed.
",      throw new RuntimeException(e);,1
Math operands should be cast before assignment,"Cast one of the operands of this addition operation to a ""long"".",Should consider having a record type to support non-string encoding and also avoid the cost of composing the string to get the length.,    return (record).toString().length() + this.OVERHEAD_SIZE_IN_BYTES;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"What is the problem?
",        // TODO How are we going to handle the constructor?,0
Unused method parameters should be removed,"Remove this unused method parameter ""authData"".","How about using something like

private CalendarInterface getOrCreateCalendaryInterface(AuthData authData) {
if (calendarInterface == null) {
// create
}
return calendarInterface;

This is an example here with a synchronized method for creation for thread safety https://dzone.com/articles/be-lazy-with-java-8",  private void setUpCalendarInterface(AuthData authData) {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Failed to connect to config node."" 3 times.",status.setException,"      LOGGER.error(""Failed to connect to config node."");",0
"""switch"" statements should have at least 3 ""case"" clauses","Replace this ""switch"" statement by ""if"" statements to increase readability.","*[MissingCasesInEnumSwitch](https://errorprone.info/bugpattern/MissingCasesInEnumSwitch):*  Non-exhaustive switch; either add a default or handle the remaining cases: SERVICE, ENDPOINT, SERVICE_RELATION

Reply with *""**@sonatype-lift help**""* for info about LiftBot commands.
Reply with *""**@sonatype-lift ignore**""* to tell LiftBot to leave out the above finding from this PR.
Reply with *""**@sonatype-lift ignoreall**""* to tell LiftBot to leave out all the findings from this PR and from the status bar in Github.

When talking to LiftBot, you need to **refresh** the page to see its response. [Click here](https://help.sonatype.com/lift/talking-to-lift) to get to know more about LiftBot commands.

---

Was this a good recommendation?
[ [? Not relevant](https://www.sonatype.com/lift-comment-rating?comment=290183795&lift_comment_rating=1) ] - [ [? Won't fix](https://www.sonatype.com/lift-comment-rating?comment=290183795&lift_comment_rating=2) ] - [ [? Not critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=290183795&lift_comment_rating=3) ] - [ [? Critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=290183795&lift_comment_rating=4) ] - [ [? Critical, fixing now](https://www.sonatype.com/lift-comment-rating?comment=290183795&lift_comment_rating=5) ]",            switch (entity.getScopeType()) {,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,  abstract public boolean hasChild(String childName);,  abstract public boolean hasChildWithKey(String key);,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"To simplify the configuration keys, I think the equality delete writer could use the same metric configs as the data writer, because in theory the equality delete files has a column set which is actually a subset of the user defined table schema columns.

But for positional delete writers,  it's a different user story. Because its columns are file_path and offset, the file_path shouldn't be truncated even if people set a `write.metadata.metrics.default=truncate(16)` because we should filter the data files to join as much as possible for efficient. 

I'm OK to propose another separate PR to address the above issues for metric configs.",    // TODO: build and pass a correct metrics config for equality deletes,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Please address this TODO because this can cause performance regression,    // TODO: return a diff. comparator that does not handle nulls when nullHandlingEnabled is false.,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"        System.out.println(""Starting a server node... Logging to file: example-node.log"");","        System.out.println(""Starting a server node... Logging to file: ignite.log"");",0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""infos"".",What's this for?,        LinkedList<List<Comparable>> infos = new LinkedList<List<Comparable>>();,0
"""public static"" fields should be constant","Make this ""public static CONFLICT_MATRIX"" field final",If true means 2 operations have no conflict. which should be `compatibilityMatrix`.,    public static Boolean[][] CONFLICT_MATRIX;,0
Field names should comply with a naming convention,"Rename this field ""_isSplitCommitEnabled"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",final,    private boolean _isSplitCommitEnabled;,0
Try-with-resources should be used,"Change this ""try"" to a try-with-resources. (sonar.java.source not set. Assuming 7 or greater.)","It seems that there is no need to really do the serialization to get the actual size, maybe you can add a new method like `getSerializedSize()` in `PhysicalPlan`, each actual plan class to override that method to calculate its own size. In this way, you can avoid allocate extra memory in this `BufferOverflowException` situation.","      DataOutputStream dos = new DataOutputStream(new ByteArrayOutputStream());
ExpressionStmt       plan.serialize(dos);
ExpressionStmt       int neededSize = dos.size();
ExpressionStmt       dos.close();",0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,?,    private final int queueTime = 60000;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,I think this is a bug in Spark. There isn't a work-around that I know of.,      // TODO remove this when we have Spark workaround for multipart identifiers in SparkSessionCatalog,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove this comment,"      //      IoTDB.schemaProcessor.collectTimeseriesSchema(sgPath, schemas);",1
Throwable and Error should not be caught,Catch Exception instead of Throwable.,"1. I think this can be `SdkException` instead of all throwables, because `persistGlueTable` is only a call to Glue. If it is not that exception type, it is guaranteed to be a failure.
2. can we avoid nested try and directly determine this in the catch block below? We are already catching that exception at L137 anyway.",      } catch (Throwable persistFailure) {,1
Field names should comply with a naming convention,"Rename this field ""_pureScore"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",this is simply a frequency or a count right? Why is it called pureScore? Add a comment if this needs to be called pureScore.,  private long _pureScore;,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,can used common？,public final class ZipkinConstants {,0
Resources should be closed,"Use try-with-resources or close this ""Stream"" in a ""finally"" clause.",Is this an old code?,"            Map<Boolean, List<Path>> files = list(checkpointDir)",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,bootstrap reattempt will do this IIRC,    // TODO : MULTIWRITER -> check if failed bootstrap files can be cleaned later,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove the comments,"      /*PathPatternTree pathPatternTree = new PathPatternTree();
ReturnStmt       PartialPath partialPath = new PartialPath(createTemplateStatement.getName());
ReturnStmt       for (String measurement : createAlignedTimeSeriesStatement.getMeasurements()) {
ReturnStmt         pathPatternTree.appendFullPath(
ReturnStmt             createTemplateStatement.getPaths(), measurement);
ReturnStmt       }
ReturnStmt       SchemaPartition schemaPartitionInfo;
ReturnStmt       schemaPartitionInfo = partitionFetcher.getOrCreateSchemaPartition(pathPatternTree);
ReturnStmt       analysis.setSchemaPartitionInfo(schemaPartitionInfo);*/",1
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),Do you really like an idea of wrapping every next result with SingletonSet?,"        this.it = new InnerIterator(e -> singleton(e), fn);",0
Lambdas containing only one statement should not nest this statement in a block,Remove useless curly braces around statement (sonar.java.source not set. Assuming 8 or greater.),What's the meaning of `drainingDataNodes`.   Is `req.getDataNodeLocations()` all draining DataNodes?,              drainingDataNodes -> {,0
"""InterruptedException"" should not be ignored","Either re-interrupt this method or rethrow the ""InterruptedException"" that can be caught here.",Can we add the maximum number of retries to prevent an endless loop ?,                    } catch (InterruptedException ex) {,0
Loops should not be infinite,Add an end condition to this loop.,Do you intend to add some sort of retry back-off to it?,            attemptWrite(attempt);,0
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,G => GroupT?,"abstract class BaseDataReader<T, CST extends ContentScanTask<?>, G extends ScanTaskGroup<CST>>",1
Methods should not have too many parameters,"Constructor has 10 parameters, which is greater than 7 authorized.","What will be the common usage pattern of this method? The default of these parameters are coming from the table and if some configuration is set, then the values are overwritten? If so, maybe we would like to have a builder which helps with it?","  protected BaseWriterFactory(Table table, FileFormat dataFileFormat, Schema dataSchema,",0
"Unused ""private"" methods should be removed","Remove this unused private ""waitAllSgReady"" method.",This method could be removed,  private void waitAllSgReady(PartialPath storageGroupPath) throws StorageEngineException {,1
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,We typically use the verb `wrap` for this pattern.,  public void setRecord(Record record) {,0
Field names should comply with a naming convention,"Rename this field ""_version"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","nice.

I would also introduce a `private final _headerEntryChunkOffsetSize` here, and initialize it by calling a method `getHeaderEntryChunkOffssetSize(version)` in the writer.",  private final int _version;,0
Unnecessary imports should be removed,Remove this unused import 'java.util.Set'.,unused import can be deleted by idea using ```control+option+O```,import java.util.Set;,1
"Unused ""private"" fields should be removed","Remove this unused ""message"" private field.",What about processed count and watermark?,  private final String message;,0
"Unused ""private"" fields should be removed","Remove this unused ""offset"" private field.",fields would be not accessed ?,    private long offset;,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,why replace with '%'?,"    System.out.printf(""%n"");",0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"I changed all of them to `static final` to be consistent with everywhere elsein #146, so you need to merge. 
","    public final static String WORK_UNITS_CREATE = MetricRegistry.name(BASE_NAME, ""work.units.create"");",1
Resources should be closed,"Use try-with-resources or close this ""Stream"" in a ""finally"" clause.","most of the streams which are returned from `Files.*` must be closed after use. Would be good to wrap the stream in an arm-block and do the rest in the block.

I have some jackpot rules here (since its easy to forget - most streams don't have to be closed):
https://github.com/mbien/jackpot-inspections/blob/5b518358408dda4008be5b7f2602aa3304a0c8fc/ProbableBugs.hint#L32-L40",                        Files.walk(nbAllPath),1
Nested blocks of code should not be left empty,Either remove or fill this block of code.,"will be good to log a warning that we cannot apply vectorization, I am guessing this would happen with jdk8 or some security restriction?",    } catch (NoSuchMethodException | IllegalAccessException ignore) {,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,use `log` to replace `System.out.println`.,"        System.out.println(""connect1 successful"");",1
"Parsing should be used to convert ""Strings"" to primitives","Use ""Long.parseLong"" for this string-to-long conversion.","Same for metricIds.  Just pass in `@ApiParam(""metric config id"") @NotNull @QueryParam(""metricIds"") List<Long> metricIds,` ",      long id = Long.valueOf(metricId);,1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","public abstract class SyncInfo {

Separate SyncManager with SyncInfo",public abstract class AbstractSyncInfo {,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,printStackTrace?,          e.printStackTrace();,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Does this comment apply or does it have to be more specific?,            // TODO: What do we actually want to do with this?,1
Two branches in a conditional structure should not have exactly the same implementation,This branch's code block is the same as the block for the branch on line 79.,"This part can be simplified
      } else {
        byteBuffer.putInt(cache[i].length);
        byteBuffer.put(cache[i]);
      }","      } else if (value instanceof String) {
IfStmt         byteBuffer.putInt(cache[i].length);
IfStmt         byteBuffer.put(cache[i]);
IfStmt       } else if (value instanceof BigDecimal) {
IfStmt         byteBuffer.putInt(cache[i].length);
IfStmt         byteBuffer.put(cache[i]);
IfStmt       } else if (value instanceof byte[]) {
BlockStmt         byteBuffer.putInt(cache[i].length);
BlockStmt         byteBuffer.put(cache[i]);
BlockStmt       } else {
ThrowStmt         throw new IllegalStateException(""Data type not supported for serializing Primary Key"");
ReturnStmt       }",1
"""public static"" fields should be constant","Make this ""public static SNAPSHOT_SEND_BUFFER_SIZE"" field final","Same about the name. And is 50 enough? From my understanding, we do thread dump every 10ms, then we could have 100 in one second. I think as we could collect 5 parallel, you will highly trigger queue abandon mode easily. 
I suggest at least 5 * 500. @kezhenxu94 What do you think? ",        public static int SNAPSHOT_SEND_BUFFER_SIZE = 50;,0
Static non-final field names should comply with a naming convention,"Rename this field ""CALLBACK_INTERCEPTOR"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Why this static?,    private static CallbackInterceptor CALLBACK_INTERCEPTOR = new CallbackInterceptor();,0
Static non-final field names should comply with a naming convention,"Rename this field ""REGEX_EXPRESSION"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","            public static String REGEX_EXPRESSION = "".*Service$,.*Dao$,.*DAO$,.*Repository$"";","            public static String REGEX_EXPRESSION = "".*Service.*,.*Dao.*,.*Repository.*"";",0
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.db.exception.FileNodeManagerException'.,remove unused imports,import org.apache.iotdb.db.exception.FileNodeManagerException;,1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"    Exist, NonExist, Constant","    Normal, NonExist, Const;",0
Unnecessary imports should be removed,Remove this unused import 'com.alibaba.fastjson.JSON'.,unused imports?,import com.alibaba.fastjson.JSON;,1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"This should be capitalized or if we think we want to change it in the figure, add // TODO: make this configurable  ",  private static final int maxAttempts = 5;,1
Static non-final field names should comply with a naming convention,"Rename this field ""DEFAULT_NONADDITIVE_BUCKET_SIZE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","why can't we get this from collection schema -> timegranularity
",  public static int DEFAULT_NONADDITIVE_BUCKET_SIZE = 5;,0
Unnecessary imports should be removed,Remove this unused import 'java.util.HashMap'.,unused import.,import java.util.HashMap;,1
Ternary operators should not be nested,Extract this nested ternary operation into an independent statement.,"I think that this would be cleaner as some if statements. Also, the 10 magic number is not ideal, but I don't believe that we have a constant defining the length of the sequential part of the node name anywhere. Not sure where the best place would be, perhaps just in the CuratorFramework interface. Thoughts @Randgalt ?",                    : (useProtection ? basePath + existingPath.substring(existingPath.length()-10) : existingPath);,1
"""equals(Object obj)"" should be overridden along with the ""compareTo(T obj)"" method","Override ""equals(Object obj)"" to comply with the contract of the ""compareTo(T o)"" method.","Do we need @Override above the compareTo()  method ?
it is recommended that we override equals() method as well
",  public int compareTo(TimeRange r) {,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Mind explaining that why using ByteBufferAllocator.HEAP is fine for now?,"      // TODO:We use ByteBuffAllocator.HEAP here, because we could not get the ByteBuffAllocator",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Wrong file type here,"      throw new RuntimeException(""Unable to read the footer of the avro file: "" +",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""column"" is nullable here.",No need lock?,"        statistics.updateColumnStats(table.getId(), columnName, column.getType(), stmt.getProperties());",0
Abstract classes without fields should be converted to interfaces,"Convert the abstract class ""SPage"" into an interface. (sonar.java.source not set. Assuming 8 or greater.)",What is this empty abstract class for?,public abstract class SPage {},0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,need a reference to ticket,            // TODO This will be fixed later.,1
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"Seems you don't need to override this method.
",  public void write(D record),0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,I wouldn't use the source directory for tests. Use rather a `@TempDir` created by Junit.,"        final String path = ""src/test/resources/test-dir"";",0
Static non-final field names should comply with a naming convention,"Rename this field ""MAX_SEGMENT_COMPLETION_TIME_MINS"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Can u pls add some comments here as to what this means (max time elapsed between the time when step 1 is done, and step 3 is not done while committing segments, including any back-offs for step 2)",  private static int MAX_SEGMENT_COMPLETION_TIME_MINS = 10;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"s/valid/default/
","      throw new RuntimeException(""No valid constructor found on "" + className, e);",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""collectionDimensions"" is nullable here.","Change to dimensionName
",          String dimensionValue = collectionDimensions.get(i);,0
Type parameters should not shadow other type parameters,"Rename ""T"" which hides a type parameter from the outer scope.",Should rename to `MethodInheritanceAnnotationMatcher`,public class MethodInheritsDeclaringAnnotationMatcher<T extends MethodDescription> extends ElementMatcher.Junction.AbstractBase<T> {,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""existingJob"" is nullable here.",&& ,    Preconditions.checkArgument(job == null || job.jobState() == jobState);,0
"Null checks should not be used with ""instanceof""","Remove this unnecessary null check; ""instanceof"" returns false for nulls.","If you skip this, the cast exception is gone, yes. But, the callback will not be traced, right? I think you should create a new function to delegate the existing parameter, which could propagate the context and continue the trace in the callback invocation. WDYT?",        if (null != shouldCallbackInstance && shouldCallbackInstance instanceof EnhancedInstance) {,0
Field names should comply with a naming convention,"Rename this field ""_primaryKeyColumns"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","This should not be part of the schema, but the upsert config",  private List<String> _primaryKeyColumns;,0
Field names should comply with a naming convention,"Rename this field ""_aggregationFunctions"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Change the member variables to protected,  AggregationFunction[] _aggregationFunctions;,0
Empty arrays and collections should be returned instead of null,Return an empty collection instead of null.,return emptylist?,    return null;,1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"Remove the ""_"" prefix",  private void setTimeInfo(PropertiesConfiguration _segmentMetadataPropertiesConfiguration) {,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""localhost"" 5 times.","""grpc"" replace to RpcTypeEnum.GRPC.getName()","        list.add(URIRegisterDTO.builder().appName(""test1"").rpcType(""grpc"").host(""localhost"").port(8090).build());",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,rename to `SparkConfigUtils`? to make it explicit? ,public class ConfigUtils {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Don't forget this. Seems existing in all `ILogQueryDAO` implementations.,            // TODO add span id,1
"Unused ""private"" fields should be removed","Remove this unused ""asyncBatchPersistentPoolSize"" private field.","Unused
",    private int asyncBatchPersistentPoolSize = 4;,1
Class variable fields should not have public accessibility,Make TOPIC_MANAGEMENT a static final constant or non-public and provide accessors if needed.,How are these topic(s) created?,"            public static String TOPIC_MANAGEMENT = ""skywalking-management"";",0
Anonymous inner classes containing only one method should become lambdas,Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.),Can we use lambda here instead of declaring an anonymous class?,"        builder.hostnameVerifier(new HostnameVerifier() {
CatchClause           @Override
CatchClause           public boolean verify(String hostname, SSLSession session) {
CatchClause             return true;
CatchClause           }
CatchClause         });",1
Raw types should not be used,Provide the parametrized type for this generic.,hi brad. I noticed a few declarations don't have a generic type on the left hand side. Was it not easily possible to assign one without breaking things as you said in the PR text?,            final List list2 = new LinkedList<>(Arrays.asList((CmpField[]) element));,1
"""Collections.EMPTY_LIST"", ""EMPTY_MAP"", and ""EMPTY_SET"" should not be used","Replace ""Collections.EMPTY_LIST"" by ""Collections.emptyList()"".",Use Collections.emptyList() instead.,      anomalyFetcherConfigs = Collections.EMPTY_LIST;,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Throwing RTE within `finally` might complicate debugging. Let's keep everything in `try` block:
  private void recreateZKConnection() throws Exception {
    try {
      zk.close();
      createZKConnection(newTaskCreatedWatcher);
      createEphemeralZNode(ChaosConstants.CHAOS_AGENT_REGISTRATION_EPIMERAL_ZNODE +
        ChaosConstants.ZNODE_PATH_SEPARATOR + agentName, new byte[0]);
    } catch (InterruptedException | IOException e) {
      LOG.error(""Error recreating new ZK Connection for agent: {}"", agentName, e);
      throw e;
    }
  }","  private void recreateZKConnection() throws Exception{
TryStmt     try {
CatchClause       zk.close();
CatchClause     } catch (InterruptedException e) {
ExpressionStmt       LOG.error(""Error closing ZK connection : "" + e);
ThrowStmt       throw new RuntimeException(e) ;
BlockStmt     } finally {
TryStmt       try {
CatchClause         createZKConnection(newTaskCreatedWatcher);
CatchClause         createEphemeralZNode(ChaosConstants.CHAOS_AGENT_REGISTRATION_EPIMERAL_ZNODE +
CatchClause           ChaosConstants.ZNODE_PATH_SEPARATOR + agentName, new byte[0]);
CatchClause       } catch (IOException e) {
ExpressionStmt         LOG.error(""Error creating new ZK COnnection for agent: "" + agentName + e);
ThrowStmt         throw new RuntimeException(e);
ClassOrInterfaceDeclaration       }
ClassOrInterfaceDeclaration     }
ClassOrInterfaceDeclaration   }",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Do we need any log messages to debug if this happens again ?,        //TODO: why is stat.getPartitionPath() null at times here.,1
Field names should comply with a naming convention,"Rename this field ""_failures"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","The `Exception` is not used. Consider changing it to
  private Queue<String> _failureFilePaths;","  private Queue<Pair<Exception, String>> _failures;",0
Empty statements should be removed,Remove this empty statement.,"Strange change.
",    public void doit() { throw AssertionError(); };,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,Better add them in the tail of ConfigPhysicalPlanType,"  AddTriggerInTable,
EnumConstantDeclaration   DeleteTriggerInTable,
EnumConstantDeclaration   GetTriggerTable,
EnumConstantDeclaration   UpdateTriggerStateInTable,",0
Static non-final field names should comply with a naming convention,"Rename this field ""MAX_SEGMENT_COMMIT_TIME_MS"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","is this the default? lets change it to 2 minutes for now. We can probably log time gap between selecting the server to commit and uploading the segment
",  private static long MAX_SEGMENT_COMMIT_TIME_MS = 15000;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""STRING"" 27 times.","nit: space between comma and `""STRING""`","  public static final String[] TABLE_COLUMNS_DTYPES = {""STRING"", ""STRING"",""STRING"", ""STRING"",""STRING"", ""STRING"",""STRING"", ""STRING"",""STRING"",""STRING""};",0
Field names should comply with a naming convention,"Rename this field ""_matcher"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(minor) Do not add `private` in a `private` inner class,    private final Matcher _matcher;,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","`SequentialAndTTLBasedBatchAccumulator` is too verbose. `SequentialBatchAccumulator` is good enough. Usually, asynchronization comes together with timeout. ",public abstract class SequentialAndTTLBasedBatchAccumulator<D> extends BatchAccumulator<D> {,0
Two branches in a conditional structure should not have exactly the same implementation,This branch's code block is the same as the block for the branch on line 140.,same as above.,"          } else if (absExtVal.compareTo(absCurrentValue) == 0
BinaryExpr               && extVal.compareTo(currentValue) > 0) {
ExpressionStmt             extVal = currentValue;",0
Empty arrays and collections should be returned instead of null,Return an empty collection instead of null.,"Comparing to `return null`, could it return an empty collection?",      return null;,1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""configFile"" is nullable here.",*NULL_DEREFERENCE:*  object `configFile` last assigned on line 65 could be null and is dereferenced at line 72.,            if (!configFile.exists()) {,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,"      e.printStackTrace();
      fail(e.getMessage());",      e.printStackTrace();,0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,"Actually you don't need to keep this and deprecate as this class is not part of the public API. You can simply change the binding in the module class.
",public class DataSourceProvider extends JobHistoryDataSourceProvider {,1
Unused method parameters should be removed,"Remove this unused method parameter ""nReplicasNU"".",What is the difference between nReplicasNU parameter and nReplicas on line 1237? They look like they're the same? Do we need both?,      int nReplicasNU) {,1
Collection.isEmpty() should be used to test for emptiness,Use isEmpty() to check whether the collection is empty or not.,"Could you elaborate why you think it's a bug when the table doesn't exist?

Plus, here's an interesting discussion on this topic:
https://stackoverflow.com/questions/6439416/deleting-a-resource-using-http-delete",      if (tablesDeleted.size() == 0) {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Let's add JIRA ticket for this TODO,"   * TODO support different split criteria, e.g., distribute records evenly using statistics",1
Static non-final field names should comply with a naming convention,"Rename this field ""LOG_BODY_TYPE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Why use `int` rather than `Enum`?,            public static int LOG_BODY_TYPE = 2;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"What is there to change?
",      // TODO change,0
Unnecessary imports should be removed,Remove this unused import 'com.nimbusds.oauth2.sdk.ParseException'.,"the unused ""import"" should be removed..",import com.nimbusds.oauth2.sdk.ParseException;,1
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",Are we still need this factory?,"    public volatile Map<UUID, AtomicLong> allSentMsgsMetricsByNodeId = new ConcurrentHashMap<>();",0
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,Good to seed it with some value.,  private static final Random RANDOM = new Random();,1
Type parameters should not shadow other type parameters,"Rename ""T"" which hides a type parameter from the outer scope.",Why need this? Doesn't `net.bytebuddy.matcher.ElementMatchers.isAnnotatedWith` meet your requirement?,public class AnnotationTypeNameMatch<T extends AnnotationDescription> implements ElementMatcher<T> {,0
"""StandardCharsets"" constants should be preferred",Replace charset name argument with StandardCharsets.UTF_8,"I guess this is for the config files from the layer ? If so they will materialize in the userdir's config area even though they are only read (not changed) -- is it OK @JaroslavTulach  ?
","                        os.write(txt.getBytes(""UTF-8""));        // NOI18N",0
Field names should comply with a naming convention,"Rename this field ""_numRowsConsumed"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","We shouldn't need the volatile, unless the consumption loop runs concurrently with catching up. If it does, we should prevent that from happening instead of trying to synchronize between both threads.
",  private volatile int _numRowsConsumed = 0;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""test1"" 4 times.","""grpc"" replace to RpcTypeEnum.GRPC.getName()","        list.add(URIRegisterDTO.builder().appName(""test1"").rpcType(""grpc"").host(""localhost"").port(8090).build());",0
Methods should not have too many parameters,"Method has 10 parameters, which is greater than 7 authorized.",or like this?  lets format it based on the same style?,"  public static HoodieLogBlock getBlock(HoodieLogFile logFile,",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one., Replace with `ShenyuException`,"            throw new RuntimeException(""exception"");",1
"""public static"" fields should be constant","Make this ""public static FILENAME_METADATA_FIELD_POS"" field final",this could be a separate cleanup task: make constants for all meta fields and adopt them across codebase,  public static int FILENAME_METADATA_FIELD_POS = 4;,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"do you plan on addressing in this PR? if not, i think you can come up with something reasonable so we don't introduce a null pointer",    // TODO: what to do about null photo descriptions?,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"If we encounter this exception, what happens to the server who is waiting for a response? We should return FAILED response to the server.
","      throw new RuntimeException(""Exception extracting and reading segment metadata for "" + segmentNameStr, e);",1
Static non-final field names should comply with a naming convention,"Rename this field ""MAX_DUMP_STACK_DEPTH"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",`MAX_DUMP_STACK_DEPTH` -> `DUMP_MAX_STACK_DEPTH`,        public static int MAX_DUMP_STACK_DEPTH = 500;,1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",could we remove `validateFilesInPartition` ?,"  private void validateFilesInPartition(HoodieTableFileSystemView metaFsView, HoodieTableFileSystemView fsView, String partitionPath) {",1
Unused local variables should be removed,"Remove this unused ""data"" local variable.","Very interesting. I can see how the previous code would leave watches around. This is a very big change though. I'll run the tests with it and think about edge cases.
",                            byte[] data = client.getData().usingWatcher(watcher).forPath(previousSequencePath);,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"What the hell is this =)
I know it's not yours, we should link a JIRA issue here as well",        // TODO this constant is used because currently we cannot reuse data pages as index pages,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Error in executing plan node: {}"" 6 times.","      LOGGER.warn(""Error in executing plan node: {}"", node, e);","      LOGGER.error(""Error in executing plan node: {}"", node, e);",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""scanSpec"" is nullable here.","Looks like `scanSpec` is required field for this class and it is used everywhere in the class, but never checked for the `null` value. So it looks like a redundant check.",    if (scanSpec == null) {,1
"Unused ""private"" fields should be removed","Remove this unused ""expiredSeconds"" private field.",make it configurable maybe is better ,    private Long expiredSeconds = 24 * 60 * 60 * 1000L;,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",Please add a comment describing what HybridClock is and why it is needed in the Raft engine,    private volatile HybridClock clock;,0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,"We can estimate the number of resources we need to be ""done"" _once_ and compare against it.",      if ((double)(_numTotalResourcesToMonitor - _resourcesToMonitor.size())*100/_numTotalResourcesToMonitor,0
"Unused ""private"" fields should be removed","Remove this unused ""SEGMENT_VALIDATION_INITIAL_DELAY_IN_SECONDS"" private field.",should this be called REALTIME_SEGMENT_VALIDATION_INITIAL_DELAY_IN_SECONDS to match other variable conventions(like REALTIME_SEGMENT_VALIDATION_FREQUENCY_IN_SECONDS),    private static final String SEGMENT_VALIDATION_INITIAL_DELAY_IN_SECONDS =,0
Static non-final field names should comply with a naming convention,"Rename this field ""TRACE_SQL_PARAMETERS"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Default to `false`,            public static boolean TRACE_SQL_PARAMETERS = true;,0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,"You can move all deprecated constants to `Stats`, and remove `Stats.` in front of all constant names.
IDEA's `Move Members` can do it quickly",    @Deprecated public static final String QUEUE_PUT_NUMS = Stats.QUEUE_PUT_NUMS;,1
Nested blocks of code should not be left empty,Either remove or fill this block of code.,"I think we should not be catching exceptions here mainly because JSON_PARSER_CONTEXT has been declared to suppress exceptions already:

  private static final ParseContext JSON_PARSER_CONTEXT =
      JsonPath.using(Configuration.defaultConfiguration().addOptions(Option.SUPPRESS_EXCEPTIONS));
If for some reason, it does throw exception even with SUPPRESS_EXCEPTIONS option turned on, then we would like to know about that (as that would be a bug). Is there a specific case that you encountered that made caching exception here necessary?",      } catch (Exception ignored) {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal "" not specified"" 3 times.","Oh, IIRC I've asked this before. What will happen if we do not specify the location? The problem will go to the OS default location? Maybe you have already answered but I can not find the comments.

Anyway, can also be a follow on issue.","      LOG.warn(TLS_CONFIG_TRUSTSTORE_LOCATION + "" not specified"");",0
Class variable fields should not have public accessibility,Make properties a static final constant or non-public and provide accessors if needed.,"If the variable name is changed, the serialized JSON will change.
Is there some method to seprate the variable name and serialized field name?",    public EtlJobProperty properties;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""IGNITE_QUERY_CONTEXT"" 3 times.",QCTX_VARIABLE_NAME ?,"        return (QueryContext)ses.getVariable(""IGNITE_QUERY_CONTEXT"").getObject();",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,add some annotations,"    NoPartition, InPartition, PrevPartition",0
Lambdas containing only one statement should not nest this statement in a block,Remove useless curly braces around statement (sonar.java.source not set. Assuming 8 or greater.),Would it be possible to use the RequestProcessor API ? That way the default Lookup (and connection to the appropriate LSP client) will be transferred to the `supplier` thread.,                CompletableFuture.supplyAsync(supplier).thenAccept(t -> {,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Add a UT?,public class RangeUtils {,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""field"" is nullable here.",minor: can we reuse `expressionFieldPath` instead of obtaining `ref().name()` again? ,      caseSensitive ? struct.field(ref().name()) : struct.caseInsensitiveField(ref().name());,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"This class is also a bit suspicious, as is the adjacent test.",public class SnippetDoc {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,do we have a tracking ticket for this? ,  // TODO replace w/ DateTimeFormatter,1
Unused assignments should be removed,"Remove this useless assignment to local variable ""attemptCount"".",Would be better to use `RetryPolicy` to implement the retry logic.,      while (attemptCount++ < this.retryCount) {,0
"""catch"" clauses should do more than rethrow",Add logic to this catch clause or eliminate it and rethrow the exception automatically.,May package this exception to a tsfile exception.,        throw e;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Unable to read the footer of the avro file: "" 3 times.","Avro doesn't actually have footers, I believe this method does something else ... I can't remember what. But I think we can have the message just be ""Unable to read Avro file: "" ....
","      throw new RuntimeException(""Unable to read the footer of the avro file: "" +",0
Raw types should not be used,Provide the parametrized type for this generic.,What's this for?,        LinkedList<List<Comparable>> infos = new LinkedList<List<Comparable>>();,0
Raw types should not be used,Provide the parametrized type for this generic.,"I didn't see any particular usage of this method, all implementations of this interface return the class itself, just to get the implemented class, I think this method is no needed actually ","    /**
MethodDeclaration      * @return Config to host parameters, all static fields set based on the config variable name.
MethodDeclaration      */
MethodDeclaration     Class config();",0
"""ThreadLocal"" variables should be cleaned up when no longer used","Call ""remove()"" on ""bytes"".",At one point would multiple threads access the same writer? Does this truly need to be a `ThreadLocal`?,    private final ThreadLocal<byte[]> bytes;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove unused code here,//  },1
"Unused ""private"" methods should be removed","Remove this unused private ""validateFilesInPartition"" method.",could we remove `validateFilesInPartition` ?,"  private void validateFilesInPartition(HoodieTableFileSystemView metaFsView, HoodieTableFileSystemView fsView, String partitionPath) {",1
Local variables should not shadow class fields,"Rename ""table"" which hides the field declared at line 49.",Should we use `TableIf` here?,                Table table = (Table) parent.getTable();,0
Lambdas containing only one statement should not nest this statement in a block,Remove useless curly braces around statement (sonar.java.source not set. Assuming 8 or greater.),"You need to handle the case where error != null here. In that case I believe locs will be null, and you'll get an NPE below.  Can you add a test for this?

Also, I think the convention in the async client is to use FutureUtils.addListener. The benefit there is it will also handle catching any errors thrown by your own callback.","        .whenComplete((locs, error) -> {",0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,      return seqStatistics.getEndTime() > unseqStatistics.getEndTime();,"      if (seqStatistics.getEndTime() > unseqStatistics.getEndTime()) {
ReturnStmt         return true;
ReturnStmt       }
ReturnStmt       return false;",1
Static non-final field names should comply with a naming convention,"Rename this field ""bdbje_lock_timeout_second"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Is 1 second enough for most cases?,    public static int bdbje_lock_timeout_second = 1;,0
"Fields in a ""Serializable"" class should either be transient or serializable","Make ""partitionAwarenessMapperFactory"" transient or serializable.","Let's avoid generic functional interfaces in public APIs. Please create dedicated interfaces - `PartitionAwaranessMapperFactory`, `PartitionAwarenessMapper`.","    private BiFunction<String, Integer, ToIntFunction<Object>> partitionAwarenessMapperFactory;",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""newKafkaOffsets"" is nullable here.",This will cause a NullPointerException on line 345.,"    Map<TopicPartition, OffsetAndMetadata> offsets = null;",1
"Mutable fields should not be ""public static""","Make this member ""protected"".","I still have performance concerns for these naming match. You should set a explicit instrumentation for get parameter, rather than using string match.
Instrumentation name match filter happens in startup amd class loading stage.",    public static final Set<String> PS_SETTERS = new HashSet<String>(Arrays.asList(,0
URIs should not be hardcoded,Refactor your code to get this URI from a customizable parameter.,"Dude, this should be removed from the code :)","        .dumpClassFilesTo(new File(""C:\\test"").toPath());",1
Field names should comply with a naming convention,"Rename this field ""_result"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",_results?,  private double[] _result;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"technicaly the exception here would be, cannot retrieve specs from <start> to <start + count> from Spec stores","      throw new RuntimeException(""Cannot retrieve all specs from Spec stores"", e);",0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,"nit: Do we need to use `Objects.nonNull(e)`? Maybe I am old fashioned but should `e != null` suffice?

Thanks,
Peter",    if (Objects.nonNull(e) && e instanceof MetaException &&,0
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.db.exception.ConfigAdjusterException'.,unused,import org.apache.iotdb.db.exception.ConfigAdjusterException;,1
"Unused ""private"" fields should be removed","Remove this unused ""LOG"" private field.",    private static final Logger LOG = LogManager.getLogger(AnalyzeStmt.class);,    private static final Logger LOG = LogManager.getLogger(CreateRoutineLoadStmt.class);,0
"Unused ""private"" fields should be removed","Remove this unused ""scopeType"" private field.","*[MissingOverride](https://errorprone.info/bugpattern/MissingOverride):*  getScopeType implements method in EntityDescription; expected @Override


    private final ScopeType @Override scopeType = ScopeType.PROCESS_RELATION;



Reply with *""**@sonatype-lift help**""* for info about LiftBot commands.
Reply with *""**@sonatype-lift ignore**""* to tell LiftBot to leave out the above finding from this PR.
Reply with *""**@sonatype-lift ignoreall**""* to tell LiftBot to leave out all the findings from this PR and from the status bar in Github.

When talking to LiftBot, you need to **refresh** the page to see its response. [Click here](https://help.sonatype.com/lift/talking-to-lift) to get to know more about LiftBot commands.

---

Was this a good recommendation?
[ [? Not relevant](https://www.sonatype.com/lift-comment-rating?comment=290409302&lift_comment_rating=1) ] - [ [? Won't fix](https://www.sonatype.com/lift-comment-rating?comment=290409302&lift_comment_rating=2) ] - [ [? Not critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=290409302&lift_comment_rating=3) ] - [ [? Critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=290409302&lift_comment_rating=4) ] - [ [? Critical, fixing now](https://www.sonatype.com/lift-comment-rating?comment=290409302&lift_comment_rating=5) ]",    private final ScopeType scopeType = ScopeType.PROCESS_RELATION;,0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,use a default method here to call `unassign(b[])` so that our various implementations can skip including the same.,"  void unassign(byte[] regionName, boolean force) throws IOException;",0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"I don't think you should remove the old examples unless they are incorrect, you should only add the new ones.","      System.out.println(""Cost Time: "" + (endTime - startTime));",0
Redundant casts should not be used,"Remove this unnecessary cast to ""PropertyChangeListener"".",                java.beans.PropertyChangeListener pcl = listeners.get(i);,                java.beans.PropertyChangeListener pcl = (PropertyChangeListener)listeners.get(i);,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,pls comment in English,        // todo 需要判断 header /data/trailers 发送状态 避免异常时发送重复stream导致h2 error,0
"""public static"" fields should be constant","Make this ""public static SNAPSHOT_SEND_CHANNEL_SIZE"" field final",`SEND` -> `TRANSPORT`,        public static int SNAPSHOT_SEND_CHANNEL_SIZE = 2;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"This compilation check is only to figure out if the flow should be persisted in the flow catalog or not, right? In that case, quota check is not required, correct?",      //todo: do we check quota here? or in compiler? Quota manager need dag to check quota which is not accessable from this class,0
"Classes from ""sun.*"" packages should not be used",Use classes from the Java API instead of Sun classes.,Wrong import,import com.sun.istack.internal.NotNull;,1
"Unused ""private"" fields should be removed","Remove this unused ""WRONG_TYPE_MESSAGE"" private field.",Remove it since it is useless :D,  private final String WRONG_TYPE_MESSAGE =,1
"""throws"" declarations should not be superfluous","Remove the declaration of thrown exception 'java.io.IOException', as it cannot be thrown from method's body.",serializedAuditCountMap?,"      Map<String, String> offsetRange, OperationType operationType, SchemaSource schemaSource, String serializedAuditMap) throws IOException {",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Netty already provide this mechanism, each handler context has its own ByteBuf allocator
See
https://netty.io/4.1/api/io/netty/channel/ChannelHandlerContext.html#alloc--

",    private byte[] data = new byte[4]; // TODO: Pooled buffers IGNITE-15162.,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,TODO remove these system outs,"    System.out.println(""eventsUrl: "" + eventsUrl);",1
"""public static"" fields should be constant","Make this ""public static PARALLELS_THREAD_COUNT"" field final",`PARALLELS_THREAD_COUNT` -> `MAX_PARALLEL`,        public static int PARALLELS_THREAD_COUNT = 5;,0
Unused method parameters should be removed,"Remove this unused method parameter ""input"".",Shouldn't it break any unit test that address [distributeDataStream](https://github.com/apache/iceberg/pull/2886/files#diff-a26cb8b3f0f5b0e6a9f110bb0b3fdd0ed625bfc9faf27e248f6446818cad4d69R255) logic  ?  I see we did not use the `input` data stream  when chain the iceberg writers into the stream..,"    private SingleOutputStreamOperator<WriteResult> appendWriter(DataStream<RowData> input, RowType flinkRowType) {",1
Field names should comply with a naming convention,"Rename this field ""_channelClass"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",It’s better not to use raw types even if you make it a wildcard because it causes IDE warnings.,  private Class _channelClass;,0
"Instance methods should not write to ""static"" fields","Make the enclosing method ""static"" or remove this set.",you can move the variable to before method ,        isRegister = false;,0
Raw types should not be used,Provide the parametrized type for this generic.,I think `LinkedList` is better choice for performance.,        List result = new ArrayList();,0
Field names should comply with a naming convention,"Rename this field ""_inSegmentResultLimit"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","`_inSegmentResultLimit` and `_enableSegmentGroupTrim` can be combined into `_trimSize`, and use negative value to denote that trim is off",  private final int _inSegmentResultLimit;,0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""double"".","Devision of these two long value `idleCpuTime` and `totalCpuTime` is either 0 or 1. If you want to get double result, you can try to first parse long values to double values.",				return Double.valueOf(100 * (1 - idleCpuTime / totalCpuTime)).doubleValue();,1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""segmentURI"" is nullable here.","We should attempt to get metadata from the multi-part in this method as well. That way, we can add the server code to send multi-part form with metadata and everything will work. If metadata is not present in multi-part then we need to extract from local.
You can add this as a separate PR before moving on to other parts, or add it now, your choice.","        segmentMetadata = extractMetadataFromLocalSegmentFile(segmentName, segmentURI.getPath());",0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,Use en instead of cn,"                        System.out.printf(""生产者组(%s)实例数为空\n"", group);",0
Field names should comply with a naming convention,"Rename this field ""_childDocIdIterator"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Make `_childDocIdIterator` and `_numDocs` final,  private BlockDocIdIterator _childDocIdIterator;,0
"Boxed ""Boolean"" should be avoided in boolean expressions",Use the primitive boolean expression here.,seems like this should be `1l:0l` instead of `1L : 0L` to avoid unnecessary type conversion?,      return ((Boolean) value) ? 1L : 0L;,1
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"Same question for this scheduler. The task should only start after the prev one finished, right? If so, why two schedulers?","    private final static ScheduledExecutorService PROFILE_TASK_FINISH_SCHEDULE = Executors.newScheduledThreadPool(2, new DefaultNamedThreadFactory(""PROFILE-TASK-FINISH-SHCEDULE""));",0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,no need,"        System.out.println(""Error"");",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Error happened while getting {} size"" 6 times.",?,"      logger.error(""Error happened while getting {} size"", filePath);",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,    public static final int VERSION_61 = 61;,    public static final int Version_61 = 61;,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,This doesn't need to be static. There is just one instance of ConstructorConstructor in Gson,  private final static ReflectionAccessor accessor = ReflectionAccessUtils.getReflectionAccessor();,0
"""throws"" declarations should not be superfluous","Remove the declaration of thrown exception 'java.io.IOException', as it cannot be thrown from constructor's body.",Now we dont have to keep this throws IOE at this constructor.  So below catch stuff in CustomizedScanInfoBuilder also can be avoided.,  public ImmutableScan(Scan scan) throws IOException {,0
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),"nit: please remove the extra space bet ""("" and add a space after ""k,""","        _headers.forEach( (k,v) -> request.addHeader(k, v));",0
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,I see the same assertion above. Is it really needed here ?,"                }
AssertStmt                 assert aff.assignments(topVer).equals(aff.idealAssignmentRaw()) :
BinaryExpr                     ""Not an ideal final distribution on LAA [grp="" + aff.cacheOrGroupName() + "", lastAffinity="" +
MethodCallExpr                         aff.lastVersion() + ""]"";",1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,I wonder if this could be an Enum instead,public class DetectionTags {,0
Boolean literals should not be redundant,Remove the unnecessary boolean literal.,"This can throw an exception if someone puts in an invalid value (eg. `useStarTree=foo`)
",    return (useStarTreeString != null) ? Boolean.valueOf(useStarTreeString) : true;,0
"Unused ""private"" fields should be removed","Remove this unused ""syncBulkActions"" private field.","Why put this in 10k? Is there any testing, which could prove this provides better performance?",    private int syncBulkActions = 10000;,0
Unnecessary imports should be removed,Remove this unused import 'java.util.Arrays'.,Unused import,import java.util.Arrays;,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Don't need the TODO anymore?,  private TransferStore transferStore; // TODO(olsona): use transferStore,1
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",No need to be volatile since it's always fetched synchronized,"  private volatile Pair<String, Integer> _controllerLeaderHostPort = null;",1
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,return values.equals(get(dictId)),    if (value.equals(get(dictId))) {,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Nit: remove trailing whitespace.,                                     padding:kSecPaddingPKCS1SHA256];  ,0
Redundant casts should not be used,"Remove this unnecessary cast to ""PrivilegedExceptionAction"".",why is this needed now?,            AccessController.doPrivileged((PrivilegedExceptionAction<?>)() -> {,1
Redundant casts should not be used,"Remove this unnecessary cast to ""PropertyChangeListener"".",                java.beans.PropertyChangeListener pcl = listeners.get(i);,                java.beans.PropertyChangeListener pcl = (PropertyChangeListener)listeners.get(i);,1
Field names should comply with a naming convention,"Rename this field ""_realtimeHLCRoutingTableBuilder"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Would be better to not have the external view based routing not aware of the fact that there are HLC and LLC implementations. A better way to do it would be to have a `RoutingTable` implementation that merges the output of an offline routing table and a realtime routing table, with the realtime routing table being aware of the fact that there is both an hlc and llc one.
",  private final RoutingTableBuilder _realtimeHLCRoutingTableBuilder;,0
"""InterruptedException"" should not be ignored","Either re-interrupt this method or rethrow the ""InterruptedException"" that can be caught here.",What is this sleep for?,        TimeUnit.SECONDS.sleep(15);,0
"""public static"" fields should be constant","Make this ""public static enable_odbc_table"" field final",Add this config to FE config doc.,    public static boolean enable_odbc_table = false;,0
"""StandardCharsets"" constants should be preferred",Replace charset name argument with StandardCharsets.UTF_8,"      properties.load(new InputStreamReader(inputStream, TSFILEConfig.STRING_ENCODING));","      properties.load(new InputStreamReader(inputStream, ""utf-8""));",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Don't leave commented codes~,"      // logger.info(""Usage: <node-ids>, split with ':'"");",1
Abstract classes without fields should be converted to interfaces,"Convert the abstract class ""PinotCrypter"" into an interface. (sonar.java.source not set. Assuming 8 or greater.)",This should be an interface not abstract class.,public abstract class PinotCrypter {,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Submit an issue for @chidaodezhongsheng , please.",                //TODO linjiaqi operation name was changed to contains multiple values,1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"for scheduled AND runImmediately flows, seems we would only `scheduleJob()` when quota finds it permitted to run immediately (right now).  are those semantics intended?","    if (!jobConfig.containsKey(ConfigurationKeys.JOB_SCHEDULE_KEY) || PropertiesUtils.getPropAsBoolean(jobConfig, ConfigurationKeys.FLOW_RUN_IMMEDIATELY, ""false"")) {",0
"Unused ""private"" fields should be removed","Remove this unused ""DIMENSIONS_SPLIT_ORDER_PARAM"" private field.",do we need all these constants if we are using jackson?,"  private static final String DIMENSIONS_SPLIT_ORDER_PARAM = ""dimensionsSplitOrder"";",1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Log or throw exception,            e.printStackTrace();,1
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,I think we would better set a reasonable default value. one hour is enough for most cases.,    int DORIS_REQUEST_QUERY_TIMEOUT_S_DEFAULT = -1;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,What is this exactly? Can we simply remove this line?,"//        clusterNetSvc.messagingService().addMessageHandler((message, senderAddr, correlationId) -> {});",1
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""ret"".",when runningMode will be null?,"      String runningMode = cfg.runningMode == null ? """" : cfg.runningMode.toLowerCase();",0
Static non-final field names should comply with a naming convention,"Rename this field ""INVOKER"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",remove static will be better. make it not global.,    private static Invoker<Object> INVOKER = new Invoker<Object>() {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Namespace does not exist: %s"" 8 times.",This violates the method contract. This should return `false` because the namespace did not exist.,"      throw new NoSuchNamespaceException(""Namespace does not exist: %s"", namespace);",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","can this be an interface instead of an abstract class?
",public abstract class JobLock implements Closeable {,1
Unused method parameters should be removed,"Remove this unused method parameter ""includeProperties"".","Is it intentional that you are not using `includeJobProperties`?
","  private JobExecutionInfo queryByJobId(String id, boolean includeProperties) {",1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,All these config values should be configurable.,public class CacheConfig {,0
Field names should comply with a naming convention,"Rename this field ""_isThrottlingAllowed"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",volatile?,  private boolean _isThrottlingAllowed = false;,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,The job properties maybe could be modified in here instead of the subclass  `KafkaRoutineLoad`.,    abstract public void modifyProperties(AlterRoutineLoadStmt stmt) throws DdlException;,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,nit: static variable should be above all other non-static ones,"  private static final String digestAlgorithm = ""MD5"";",0
Raw types should not be used,Provide the parametrized type for this generic.,Let's use `List<SparkCommand>`?,"    List masterContained = Arrays.asList(SparkCommand.COMPACT_VALIDATE, SparkCommand.COMPACT_REPAIR,",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,@jnturton Could you please create a JIRA for this an reference it here?,    // TODO: why do we hard code this when we provide {@link ExecConstants.SSL_HANDSHAKE_TIMEOUT}?,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"Hi, according to previous design, `checkBufferedArray` is to be done by `ArrayManager` module.

When TSP is asking for one array, it could call `ArrayManager.getDataListByType` (and it is the only interface for asking array). This method will check whether there are enough buffered arrays and return one if true; or apply an out of buffer array and return one if system module agrees; or return null if system module refuses to offer one.

In this way, TSP does not need to know whether the array is buffered or out of buffer. The management of arrays is responsibility of `ArrayManager`. What do you think?",      // TODO: isbufferedArrayEnough = checkBufferedArray();,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"What stops working if the sec group is made restrictive?
",    // TODO: Make security group restrictive,0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".",Sync timer checkpoint every 3 seconds and syncAll every 60 seconds?,"                }, 1000 * 10, 3 * 1000, TimeUnit.MILLISECONDS);",0
Abstract classes without fields should be converted to interfaces,"Convert the abstract class ""HoodieData"" into an interface. (sonar.java.source not set. Assuming 8 or greater.)",Glad to see that we toward a simpler direction. HoodieData contains some operation APIs. WDYT about those similar operation APIs exists in `HoodieEngineContext`? Will we remove them and make  `HoodieEngineContext` to be a pure context object?,public abstract class HoodieData<T> implements Serializable {,0
Empty arrays and collections should be returned instead of null,Return an empty collection instead of null.,"If not success, shall we throw an exception or return a failure TSStatus?","    if (resp.getStatus().getCode() == TSStatusCode.SUCCESS_STATUS.getStatusCode()) {
ReturnStmt       return resp.getPathList();
ReturnStmt     }
ReturnStmt     return null;",0
Field names should comply with a naming convention,"Rename this field ""_timeColumnSpec"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",We may store the `_timeColumnName` and `_timeFormatSpec` for better performance,  private DateTimeFieldSpec _timeColumnSpec;,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Calling this config is a bit misleading.. these are just constants,public final class HoodieRealtimeConfig {,0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,why var names in all caps?,"  SegmentSizeRecommendations estimate(long GSS, int DSS, int NRGS, long NRPP) {",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"I think this is okay for now to get this in with tests. Thanks, @huaxingao!",        // Todo: The following code needs to be improved in the bloom filter write path PR.,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Maybe `ServerMessageType` then?,"/**
ClassOrInterfaceDeclaration  * Server to client message types.
ClassOrInterfaceDeclaration  */
ClassOrInterfaceDeclaration public class ClientMessageType {",0
"Unused ""private"" fields should be removed","Remove this unused ""url"" private field.","Take a look at application.yml, I am feeling this will be overrided, and make no effect.","    private String url = ""jdbc:h2:mem:skywalking-oap-db;DB_CLOSE_DELAY=-1"";",0
Unused local variables should be removed,"Remove this unused ""renamed"" local variable.",This does not seem to be used. Please remove.,      boolean renamed;,1
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,"no one use return result from this func, may it would be be more clear to change implementation to void ?","    @Nullable public GridCacheContext<?, ?> prepareCacheStop(",0
"""public static"" fields should be constant","Make this ""public static yarn_client_path"" field final",@ConfField,"    public static String yarn_client_path = PaloFe.DORIS_HOME_DIR + ""/lib/yarn-client/hadoop/bin/yarn"";",0
Boolean expressions should not be gratuitous,"Remove this expression which always evaluates to ""true""",why not just write as `if (processQueue == null || processQueue.isDropped())` ? This is more concise,                if ((null == processQueue) || (processQueue != null && processQueue.isDropped())) {,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""count"" 3 times.","Can we use `Measurements`, which already have the name defined?
","    metrics.add(serializeValue(name, meter.getCount(), ""count""));",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,what does better logic mean?,    // TODO: better logic (v2),1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",Duplicated,"        this.indexNameToId = new HashMap<String, Long>();",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Can we remove these comments when it comes time to check in?,            // URL configURL = new URL(_readerConfigFile);,1
Functional Interfaces should be as specialised as possible,Refactor this code to use the more specialised Functional Interface 'UnaryOperator<Boolean>',Good catch. The leak and the fix makes sense. ,"  private void shutdownCallback(Function<Boolean, Boolean> callback) {",0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","You have known the max size, using ArrayList please.",                    LinkedList<ProfileTaskSegmentSnapshot> buffer = new LinkedList<ProfileTaskSegmentSnapshot>();,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""asslConfigs"".",Why not rename to `sslConfigs`?,"    Map<String, Object> asslConfigs = configs.entrySet().stream()",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Suggest to rename it to `AuthorityFetcher`,public class ClusterAuthorizer {,0
Ternary operators should not be nested,Extract this nested ternary operation into an independent statement.,"This change isn't very satisfying, right? Instead of being able to debug something, we run tests with debugging disabled.",                                         : ActionProvider.COMMAND_TEST //TODO: COMMAND_DEBUG_TEST is missing?,0
Field names should comply with a naming convention,"Rename this field ""_functionInfo"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(minor) remove `private` as it is already in a private class,    private final FunctionInfo _functionInfo;,0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,"I think you can remove these `if` statements. IE:
// Instead of 
if (x || y )

// Just have 
return x || y
Here and elsewhere in this class.",    if (name.equals(tags.get(GenericMetadataDirectory.TAG_FILE_SIZE)),1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Suggest throwing `IllegalStateException`,"      throw new RuntimeException(""Expression cycle found for column '"" + column + ""' in Ingestion Transform Function""",1
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,Lambda in critical path seem to have a performance impact,"            result.stream().forEach(record -> response.append(""\n"")",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",Would you be able to add some javadoc here,public abstract class CopyExceptionWithFailureReason extends CopyException {,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","        Pair<TPaloBrokerService.Client, TNetworkAddress> pair = getBrokerAddressAndClient(brokerDesc);","        Pair<TPaloBrokerService.Client, TNetworkAddress> pair = new Pair<TPaloBrokerService.Client, TNetworkAddress>(null, null);",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,'TODO' without ticket number.,//TODO Filter by table type must be added after 'view' type will appear.,1
Field names should comply with a naming convention,"Rename this field ""_expectedVersion"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Put `Integer.MIN_VALUE` as the default? We don't want to override the ZNRecord if this is not correctly set,  private int _expectedVersion = -1;,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"nit: can you rename to StandardLimiterFactory or something along those lines. LimiterFactory sounds a bit too generic. Someone else may want to implement their own limiter and limiter factory.
",public class LimiterFactory {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Can you log a Jira issue for this please?
",            //TODO: Make this Jackson Format implementation reusable,1
Field names should comply with a naming convention,"Rename this field ""_segmentsFrom"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Make all of them `final`,  private List<String> _segmentsFrom;,0
"Mutable fields should not be ""public static""","Make this member ""protected"".","The reason you put the CONTEXT here, is this for avoiding classloader isolation issue? If SO, add this to comments.","        public static Map<String, Object> CONTEXT = new HashMap<String, Object>();",0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,"given the fact that `s3` namespace is already taken by AWS S3, can we switch to another prefix like `dell` or `ecs`?","  String ACCESS_KEY_ID = ""s3.access.key.id"";",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Can you throw DetectorException?,      throw new RuntimeException(String.format(,1
Unused local variables should be removed,"Remove this unused ""result"" local variable.",remove local variable assignment since it's not used?,"        Map<String, Boolean> result = deleteFilesParallelize(metaClient, skipped, context, true);",1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"System.out?
",      System.out.println(result.diagnosticsByKind);,1
Unnecessary imports should be removed,Remove this unused import 'org.apache.curator.test.compatibility.CuratorTestBase'.,Unused import,import org.apache.curator.test.compatibility.CuratorTestBase;,1
"""public static"" fields should be constant","Make this ""public static INSTRUMENTATION"" field final",Why this?,    public static Instrumentation INSTRUMENTATION;,0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,"Maybe more of a question for @holachuy , as this behavior is in the legacy worker code as well: do we still plan on doing the security thing where we only load one importer and exporter in each worker instance to mitigate risk that some other service's malicious/broken code is called? In that case I think we'd want only one instance returned from each method here. Would be a potential good use case for the new java 9 service loading stuff.","    List<Exporter<?, ?>> getExporters();",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,implement this. It is important!,"        //TODO if indexes.size() == times.length, could we write a chunk at a time",1
Only static class initializers should be used,Move the contents of this initializer to a standard constructor or to field initializers.,Does this mean there is a logger per extension?,                    return new Logger() {{,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",Static context isn't very good for tests I think,    private static volatile QuestionWriterReader questionWriterReader;,0
"Unused ""private"" fields should be removed","Remove this unused ""aliyunProperties"" private field.",Nit: Any usage for this variable ? Seems it could be converted to use a local variable. ,  private final AliyunProperties aliyunProperties;,1
Local variables should not shadow class fields,"Rename ""deviceTimeseriesMetadataMap"" which hides the field declared at line 100.",It seems that this method only contains chunkmetadata in memory.,"    Map<String, List<TimeseriesMetadata>> deviceTimeseriesMetadataMap = new TreeMap<>();
ExpressionStmt     Map<String, Map<String, List<IChunkMetadata>>> chunkMetadataMap = new TreeMap<>();
ForEachStmt     for (ChunkGroupMetadata chunkGroupMetadata : chunkGroupMetadataList) {
ForEachStmt       for (ChunkMetadata chunkMetadata : chunkGroupMetadata.getChunkMetadataList()) {
ExpressionStmt         chunkMetadataMap
NameExpr             .computeIfAbsent(chunkGroupMetadata.getDevice(), x -> new TreeMap<>())
NameExpr             .computeIfAbsent(chunkMetadata.getMeasurementUid(), x -> new ArrayList<>())
NameExpr             .add(chunkMetadata);
ForEachStmt       }
ForEachStmt     }
ForEachStmt     for (String device : chunkMetadataMap.keySet()) {
ExpressionStmt       Map<String, List<IChunkMetadata>> seriesToChunkMetadataMap = chunkMetadataMap.get(device);
ForEachStmt       for (Map.Entry<String, List<IChunkMetadata>> entry : seriesToChunkMetadataMap.entrySet()) {
TryStmt         try {
CatchClause           deviceTimeseriesMetadataMap
CatchClause               .computeIfAbsent(device, x -> new ArrayList<>())
CatchClause               .add(TSMIterator.constructOneTimeseriesMetadata(entry.getKey(), entry.getValue()));
CatchClause         } catch (IOException e) {
ExpressionStmt           logger.error(""Failed to get device timeseries metadata map"", e);
ReturnStmt           return null;
ReturnStmt         }
ReturnStmt       }
ReturnStmt     }",0
URIs should not be hardcoded,Remove this hard-coded path-delimiter.,`/` -> `File.separator`,"      String tarFilePath = TarGzCompressionUtils.createTarGzOfDirectory(tableDir + ""/"" + segmentName);",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""WEEKS"" 3 times.",Do we also support MONTHS?,"    if (this.monitoringGranularity.endsWith(""WEEKS"")) {",0
"Unused ""private"" fields should be removed","Remove this unused ""h2AsyncBatchPersistentChannelSize"" private field.","    /**
     * max size per batch execute sql
     */
    private int maxSizeOfBatchSql = 100;
    /**
     * async batch execute pool size
     */
    private int h2AsyncBatchPersistentPoolSize = 1;
    /**
     * async batch execute channel size
     */
    private int h2AsyncBatchPersistentChannelSize = 1;

H2 is not that powerful, I recommend to use less number of threads and size in default.
___
Also, according to DataCarrier implementation, it is better to merge `h2AsyncBatchPersistentPoolSize` and `h2AsyncBatchPersistentChannelSize` as `asyncBatchPersistentPoolSize` only. There is no point to create more threads than the number of channels.","    /**
FieldDeclaration      * max size per batch execute sql
FieldDeclaration      */
FieldDeclaration     private int maxSizeOfBatchSql = 2000;
FieldDeclaration     /**
FieldDeclaration      * async batch execute pool size
FieldDeclaration      */
FieldDeclaration     private int h2AsyncBatchPersistentPoolSize = 4;
FieldDeclaration     /**
FieldDeclaration      * async batch execute channel size
FieldDeclaration      */
FieldDeclaration     private int h2AsyncBatchPersistentChannelSize = 4;",0
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,why add the leading `_`,"    void _inject(AbstractSpan exitSpan, ContextCarrier carrier);",1
Unnecessary imports should be removed,Remove this unused import 'java.util.HashMap'.,Some imports are unused?,import java.util.HashMap;,1
Unused assignments should be removed,"Remove this useless assignment to local variable ""gf"".",Unused variable.,        GradleFiles gf = ((NbGradleProjectImpl) project).getGradleFiles();,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,It would be nice to have a class TimeSpecFormat that takes in the format and provides all these getters.,public class DateTimeFieldSpecUtils {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Can we add a getBrokerList() method to the `BrokerSelector` interface? By doing so, we can get the broker list out of it.",    // TODO get broker list from brokerSelector,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,can you document?,public class OAuthUtils {,0
Class variable fields should not have public accessibility,Make SOURCE_NAME a static final constant or non-public and provide accessors if needed.,`final static String`,"  public String SOURCE_NAME = ""iot-metrics"";",0
Class variable fields should not have public accessibility,Make allSentMsgsMetricsByNodeId a static final constant or non-public and provide accessors if needed.,Are we still need this factory?,"    public volatile Map<UUID, AtomicLong> allSentMsgsMetricsByNodeId = new ConcurrentHashMap<>();",0
Static non-final field names should comply with a naming convention,"Rename this field ""default_insert_visible_timeout_ms"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","If we use session variable, there is no need to add this config.
I think session variable is enough.",    public static long default_insert_visible_timeout_ms = 10000;,0
"Unused ""private"" fields should be removed","Remove this unused ""jobName"" private field.",.. also jobGroup,  private final String jobName;,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Is this supposed to be a builder? it has all kinds of methods get, build, has. It resembles a Util class",public class TagNameBuilder {,0
Nested blocks of code should not be left empty,Either remove or fill this block of code.,"nit: weird syntax, including 4 space indents in this file
",      } catch (JsonSyntaxException expected) {},1
Collection.isEmpty() should be used to test for emptiness,Use isEmpty() to check whether the collection is empty or not.,"Very good, but the concurrency problem must be taken into account. Suppose that 10 threads execute this step and judge size=0. At this time, multiple elements will still be stored in the queue. The size judgment can use the atomic class, like the previous `final AtomicInteger count = new AtomicInteger();`",                        if (ref.size() > 0) {,0
"""Collections.EMPTY_LIST"", ""EMPTY_MAP"", and ""EMPTY_SET"" should not be used","Replace ""Collections.EMPTY_SET"" by ""Collections.emptySet()"".",Collections.emptySet(). Use EMPTY_SET will introduce a warning.,    Set<ServerName> servers = CollectionUtils.isEmpty(names) ? Collections.EMPTY_SET :,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""0.10.0"" 4 times.",we need to fix this to 0.11.0,"      .sinceVersion(""0.10.0"")",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""org.jboss.dmr.ModelNode"" 9 times.","This looks strange - why was line 122 changed, but 123 not? This seems to be the case at multiple places.","        Class modelClazz = cl.loadClass(""org.jboss.dmr.ModelNode""); // NOI18N",1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"keyEntry could be renamed to entry, and so is the obove","            System.out.printf(""%-50s=  %s\n"", keyEntry.getKey(), keyEntry.getValue());",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""false"" 5 times.",`COMPACT_SCHEDULE_ASYNC` seems  better.,"      .defaultValue(""false"")",0
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,Please use `Connection connection = EnvFactory.getEnv().getConnection();` instead.,"                Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");",1
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,"Can we avoid custom test code that ADDS FIELDS only required for testing? This is a bad design, we should fight it, please add TODO for removing it",    public CompletableFuture<?> enableCheckpoints(boolean enable) {,0
"""equals(Object obj)"" should be overridden along with the ""compareTo(T obj)"" method","Override ""equals(Object obj)"" to comply with the contract of the ""compareTo(T o)"" method.","compareTo should return the diff value, not just 0 and 1/-1. although I am not sure how to convert the double into int, is there any typical comparison written in other SQL system?",  public int compareTo(@Nonnull CovarianceTuple covarianceTuple) {,0
Unused type parameters should be removed,T is not used in the interface.,Does it have to extend `ValueExpression`?,"public interface Unbound<T, B> {",0
Unnecessary imports should be removed,Remove this unused import 'java.util.stream.Collectors'.,Remove unused import,"import java.util.Comparator;
ImportDeclaration import java.util.LinkedList;
ImportDeclaration import java.util.stream.Collectors;",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,do not drop this pipe if some load failed,          // TODO: should drop this pipe?,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"This should be managed by a merger process. You can't just delete markers, don't you? I'd remove most of the code related to this property",    // TODO: IGNITE-16935 Move to config,0
Raw types should not be used,Provide the parametrized type for this generic.,    Iterator it = ((LinkedList<IPageReader>) pageReaders).descendingIterator();,    Iterator it = pageReaders.descendingIterator();,1
Private fields only used as local variables in methods should become local variables,"Remove the ""exportColumns"" field and declare it as a local variable in the relevant methods.","If you store columns as a separate attribute in the export job from properties, you need to consider persistence.
Either reload the columns attribute during replay.
Or just persist the columns object directly.
My suggestion is not to modify the persistence logic. Re-parse columns after persistence.",    private List<String> exportColumns ;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""binary_filed"" 6 times.","    builder.field(""binary_field"", ""Senior Management"".getBytes());","    builder.field(""binary_filed"", ""Senior Management"".getBytes());",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Fail to find config file {}"" 3 times.","the error should be more clear, this may due to open the engine file failed, rather than can not find the config file.","        logger.error(""Fail to find config file {}"", iotdbEnginePropertiesUrl, e);",0
Return values should not be ignored when they contain the operation status code,"Do something with the ""boolean"" value returned by ""renameTo"".",What if the system crashes before the renaming completes?,        new File(tmpTsfilePath).renameTo(new File(tsfilePathBefore));,0
"""public static"" fields should be constant","Make this ""public static REGEX_EXPRESSION"" field final","            public static String REGEX_EXPRESSION = "".*Service$,.*Dao$,.*DAO$,.*Repository$"";","            public static String REGEX_EXPRESSION = "".*Service.*,.*Dao.*,.*Repository.*"";",0
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.cli.AbstractCli'.,This unused import could be removed : ),import org.apache.iotdb.cli.AbstractCli;,1
Field names should comply with a naming convention,"Rename this field ""_controllerLeaderHostPort"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",No need to be volatile since it's always fetched synchronized,"  private volatile Pair<String, Integer> _controllerLeaderHostPort = null;",0
"""String#replace"" should be preferred to ""String#replaceAll""","Replace this call to ""replaceAll()"" by a call to the ""replace()"" method.",What does this line do? ,"        .parseClaimsJws(token.replaceAll(""access_token:"", """"))",0
Field names should comply with a naming convention,"Rename this field ""_queryConfig"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Will it be shown as `SimpleName: null` in the table config if it's null? 
If yes, might be good to skip printing out this as `""QueryConfig"": null`?",  private QueryConfig _queryConfig;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Currently we use `String` to represent JSON. If we change that to use `JsonNode`, then we can add `JsonNode` here. One problem of adding `JsonNode` is that it is an abstract class, and won't match the actual class",  // TODO: Do we need to create a class for handling JSON. It doesn't seem like this is needed since JSON type directly,0
Field names should comply with a naming convention,"Rename this field ""_tableName"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Could this table name be any table name like raw table name and table name with suffix? Can we add some javadoc on that?,    private final String _tableName;,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,Do we want a `System.out.println()` here?,"        System.out.println (String.format(""name : %s, minor_type : %s, data_mode : %s"",",1
Nested code blocks should not be used,Extract this nested code block into a method.,Looks like a dangling parenthesis,            {,1
Field names should comply with a naming convention,"Rename this field ""_termToDictIdMapping"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Ideally we should use a mutable dictionary to store the value mapping so that it can be off-heap. We may add a TODO here and address that separately.
One low hanging optimization is to use `Object2IntOpenHashMap` which has better performance and lower memory footprint","  private final Map<String, Integer> _termToDictIdMapping;",0
Raw types should not be used,Provide the parametrized type for this generic.,We don't need this,  public static Comparable extractTimeValueIfPossible(Comparable time) {,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,why not use SPI Loader？,public class SubscribeConfig {,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,*CatchAndPrintStackTrace:*  Logging or rethrowing exceptions should usually be preferred to catching and calling printStackTrace,                            e.printStackTrace();,1
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,Why is at abstract?,"public abstract class ConfigurationTreeWrapper<VIEW, CHANGE> implements ConfigurationTree<VIEW, CHANGE> {",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove,    // chunkWriterMap.get(subTaskId)=null;,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Better to throw DetectorException or define another exception.,      throw new RuntimeException(String.format(,1
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,I think `then` here is more consistent name. Looking at the next method it is logical to have `then` and `ifThen` instead of `appendFlow` and `ifThen`.,"    public <OT> FlowBuilder<I, OT> appendFlow(Flow<O, OT> flow) {",0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","        sessionOriginValue = new HashMap<Field, String>();","        sessionOriginValue = new HashMap<Field,String>();",0
"Declarations should use Java collection interfaces such as ""List"" rather than specific implementation classes such as ""LinkedList""","The type of the ""dataNodeLocations"" object should be an interface such as ""ConcurrentMap"" rather than the implementation ""ConcurrentHashMap"".","      List<TDataNodeLocation> dataNodeLocations) {
Which is enough for sending asynchronize requests","      ConcurrentHashMap<Integer, TDataNodeLocation> dataNodeLocations) {",0
Field names should comply with a naming convention,"Rename this field ""_filterFunction"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Shouldn't this be a list of filter functions applied in sequence specified? How do we indicate filter like:
1. Sample x% of the records
2. filter out those with age > 40

Or, 
1. Filter out those with age > 40
2. Sample x% of these records.",  private final String _filterFunction;,0
Unnecessary imports should be removed,Remove this unused import 'com.netflix.iceberg.encryption.EncryptionKeyMetadata'.,"Nit: this isn't used. Not a blocker, but we should remove it eventually.",import com.netflix.iceberg.encryption.EncryptionKeyMetadata;,1
Anonymous inner classes containing only one method should become lambdas,Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.),"As before, check out ExecutorUtils","      ExecutorService es = Executors.newFixedThreadPool(10, new ThreadFactory() {",0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,"Don't check this every time, once you don't get the notification event(`notifyAfterMainThreadFinish`), it is safe to continue.",        if (!context.getProfilingThread().isAlive()) {,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,Again doesn't need to be static,  private final static ReflectionAccessor accessor = ReflectionAccessUtils.getReflectionAccessor();,1
Nested blocks of code should not be left empty,Either remove or fill this block of code.,Probably more readable returning false within the catch?,    } catch (IOException e) {,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"  public static final String PLACE_HOLDER = ""PH"";","  public static final String placeholder = ""PH"";",0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"Please remove print statements.
","      System.out.println(""Original schema: "" + newestSchema);",1
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,how about just convertToVCardEmail? bit simpler and clear it is a single email. Also the _ is more c-style than java for function names,  static Email convertToVCardEmail_Single(EmailAddress personEmail) {,1
Unused method parameters should be removed,"Remove this unused method parameter ""typeProvider"".","Use a function named like `public boolean isMappedOneToOne()` or something else to replace this method. In this way, we may not need `collectSubexpressions` method any more.","  public AccessStrategy getUDFAccessStrategy(TypeProvider typeProvider) {
ReturnStmt     return null;
MethodDeclaration   }",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Partition column["" 3 times.","                        throw new DdlException(""The partition column could not be aggregated column"");","                        throw new DdlException(""Partition column["" + colName + ""] is not key column"");",0
Class variable fields should not have public accessibility,Make spark_dpp_version a static final constant or non-public and provide accessors if needed.,Better to move it to the Config.java,"    public static String spark_dpp_version = ""1_0_0"";",0
Class variable fields should not have public accessibility,Make datasetName a static final constant or non-public and provide accessors if needed.,"Seems like there is a lot of overlap in the fields: datasetName, dbName, tableName, topicName, topicPartition. Can we keep only the ones needed and derive the rest from those fields?",  public String datasetName;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"These were temporary solutions, and I expected you to fix them within this PR. However, they were initially for full concurrency, we did not want some failing connections to block others.","    // TODO it is not suitable for register and deregister an Object to JMX to such a frequent
ExpressionStmt     // function call.
ExpressionStmt     // BUT is it suitable to create a thread pool for each calling??
ExpressionStmt     ExecutorService fillService = Executors.newFixedThreadPool(partitionGroups.size());",1
Throwable and Error should not be caught,Catch Exception instead of Throwable.,Let's just catch IOException and RuntimeException here? Which can make the code more clear.,      } catch (Throwable e) {,1
Field names should comply with a naming convention,"Rename this field ""_controllerVipUrl"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",final,    private String _controllerVipUrl;,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"So,  think you can probably do better than merely testing the existence of the adapter classes, but load the child adapter, invoke the attach() method with a fake linker (for real, non-parent bindings if any, or as a stub), and then invoke get() on the child binding.  In short, not only proving that the binding exists as a file, but that it works. 
",class TestApp {,0
Field names should comply with a naming convention,"Rename this field ""_keyExtractor"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",final,  private KeyExtractor _keyExtractor;,0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".",Maybe it's better to use `TimeUnit.MINUTES.toSeconds(15)` than calculating seconds by multiplication.,  private long schedulingWindowInSec = 15 * 60; // 15 minutes,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,need to add some meaningful message in exception,"        throw new RuntimeException("""");",1
Using publicly writable directories is security-sensitive,Make sure publicly writable directories are used safely here.,Can use cleanUpDir here.,    File specStoreDir = new File(SERVICE_WORK_DIR);,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Segment "" 3 times.","remove res.message or make it += below
","        res.message = ""Segment "" + segmentId + "" not in IDEALSTATE."";",0
Raw types should not be used,Provide the parametrized type for this generic.,It would be better to define a variable using interface type.,    ArrayList executeList = new ArrayList();,0
Field names should comply with a naming convention,"Rename this field ""_pushLocations"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Remove the member variables that are already in the base segment job (_pushLocations and _rawTableName). Same for SegmentCreationJob.,  protected List<PushLocation> _pushLocations;,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",Isn't `Collections.unmodifiableList` better than `ArrayList`? The Javadoc shall state whether the result can or cannot be modified and what effect it has on the state of the object (none).,            return new ArrayList<Item>(btn2items.values());,0
Raw types should not be used,Provide the parametrized type for this generic.,"I think it's the correct way to address the raw type warning : 
java
  public static <T> PositionDeleteStructWriter<T> positionDelete(OrcRowWriter<T> writer,
                                                                 Function<CharSequence, ?> pathTransformFunc) {
    return new PositionDeleteStructWriter<>(writer, pathTransformFunc);
  }","  public static PositionDeleteStructWriter positionDelete(OrcRowWriter writer,
BlockStmt       Function<CharSequence, ?> pathTransformFunc) {
ReturnStmt     return new PositionDeleteStructWriter(writer, pathTransformFunc);
ClassOrInterfaceDeclaration   }",1
Private fields only used as local variables in methods should become local variables,"Remove the ""minSequenceNumber"" field and declare it as a local variable in the relevant methods.","I remember the sequence number 0 is kept for the data files for iceberg v1, so in theory the sequence number from delete files should start from 1.   So setting it to 0 as the default value sounds correct.  ",    private long minSequenceNumber = 0L;,0
Field names should comply with a naming convention,"Rename this field ""_firstLiteral"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","I don't think we need to handle the case for literal. Also, the current implementation cannot handle literal properly since the math operator is not applied to it.",  private double _firstLiteral;,0
"""Collections.EMPTY_LIST"", ""EMPTY_MAP"", and ""EMPTY_SET"" should not be used","Replace ""Collections.EMPTY_LIST"" by ""Collections.emptyList()"".",Should prefer Collections.emptyList() over EMPTY_LIST,"        return createParameterContextEntity(name, description, parameters, Collections.EMPTY_LIST);",1
Unused assignments should be removed,"Remove this useless assignment to local variable ""count"".",3 is a magic number,            while (isOk && count++ < 3) {,0
Return values should not be ignored when they contain the operation status code,"Do something with the ""boolean"" value returned by ""delete"".","Could we use `FileUtils.deleteQuietly`, also is the `exists` check needed? I take it that the `exists()` check is needed in case the delete failed to delete existing directory?",    _resourceTmpDir.delete();,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,use `log` to replace `printStackTrace()`.,            e.printStackTrace();,1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",why deserialize do not implementation？ How to deserialize this execution plan?,  public void deserialize(ByteBuffer buffer) throws IllegalPathException {},1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"Remove the ""_"" prefix",  private void initStarTreeMetadata(PropertiesConfiguration _segmentMetadataPropertiesConfiguration) {,1
"Unused ""private"" fields should be removed","Remove this unused ""metadataPartitionTable"" private field.","  private final Map<String, Map<Integer, Integer>> schemaPartitionTable;","  private final Map<String, Map<Integer, Integer>> metadataPartitionTable;",0
String literals should not be duplicated,Use already-defined constant 'LEVEL_TEMPORARY' instead of duplicating its value here.,"Not required here, just click on the use default. on the form editor to remove this line.","        cbTrustLevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ""None"", ""Temporary"", ""Permanent"" }));",0
Static non-final field names should comply with a naming convention,"Rename this field ""INSTRUMENTATION"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Why this?,    public static Instrumentation INSTRUMENTATION;,0
Field names should comply with a naming convention,"Rename this field ""_hllLog2mOverride"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Rename to `_defaultHllLog2m`?,  private final int _hllLog2mOverride;,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"@jlahoda We get this in an output window when we run a module.  What is this for?
mimeTypes=[text/xml, text/x-properties, text/plain, text/x-diff, content/unknown, text/x-php5]
mimeTypes=[text/xml, text/x-properties, text/plain, text/x-diff, content/unknown, text/x-php5]
mimeTypes=[text/xml, text/x-properties, text/plain, text/x-diff, content/unknown, text/x-php5]
mimeTypes=[text/xml, text/x-properties, text/plain, text/x-diff, content/unknown, text/x-php5]
mimeTypes=[text/xml, text/x-properties, text/plain, text/x-diff, content/unknown, text/x-php5]
mimeTypes=[text/xml, text/x-properties, text/plain, text/x-diff, content/unknown, text/x-php5]
mimeTypes=[text/xml, text/x-properties, text/plain, text/x-diff, content/unknown, text/x-php5]
INFO [org.netbeans.modules.bugtracking.BugtrackingManager]: Loading stored repositories took 47 millis.
mimeTypes=[text/xml, text/x-properties, text/plain, text/x-diff, content/unknown, text/x-php5]
mimeTypes=[text/xml, text/x-properties, text/plain, text/x-diff, content/unknown, text/x-php5]
mimeTypes=[text/xml, text/x-properties, text/plain, text/x-diff, content/unknown, text/x-php5]
mimeTypes=[text/xml, text/x-properties, text/plain, text/x-diff, content/unknown, text/x-php5]","            System.err.println(""mimeTypes="" + mimeTypes);",0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"if (fs.exists(daughtADir) && !deleteDir(daughterADir))

Can combine the two if in one line.

Anyway, not a big problem.",    if (fs.exists(daughterADir)) {,1
Unnecessary imports should be removed,Remove this unused import 'com.sun.org.apache.xerces.internal.impl.xs.util.XSInputSource'.,"Is this a useless import? Please check, remove it if it's useless.",import com.sun.org.apache.xerces.internal.impl.xs.util.XSInputSource;,1
Field names should comply with a naming convention,"Rename this field ""_controllerConf"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","u don't need to store the controller conf, if you are calling into PinotLLCRealtimeSegmentManager to deide whether splitcommit is configured.",  private final ControllerConf _controllerConf;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""unspecified"" 3 times.","Just minor. Using n.isEmpty(), q.isEmtpy() and v.isEmpty would be better here than the equals approach. The null check is done in the condition anyway. ","            if (n == null || """".equals(n) || g == null || """".equals(g) || v == null || """".equals(v) || ""unspecified"".equals(v)) {  // NOI18N",0
"Unused ""private"" fields should be removed","Remove this unused ""isQuit"" private field.","this field is not used, remove it ba",  private static boolean isQuit = false;,1
Methods should not have too many parameters,"Method has 8 parameters, which is greater than 7 authorized.",  public AbstractCrossSpaceCompactionRecoverTask getCompactionRecoverTask(,  public AbstractCrossSpaceCompactionTask getCompactionRecoverTask(,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,can this TODO be removed?,            // TODO(ml): WIP,1
"""public static"" fields should be constant","Make this ""public static DISABLED_PLUGINS"" field final",Same performance concern. Prefer `LinkedList`.,        public static List DISABLED_PLUGINS = new ArrayList();,0
Field names should comply with a naming convention,"Rename this field ""_endedTaskQueue"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","I feel that we can remove the synchronization logic by using (1) use `ConcurrentLinkedList`, and (2) run clean up periodically (since the clean up time does not need to be accurate).","  private final Queue<EndedTask> _endedTaskQueue = new LinkedList<>();
FieldDeclaration   private final ReentrantLock _queueLock = new ReentrantLock();
FieldDeclaration   private final Condition _availableToClean = _queueLock.newCondition();",0
Field names should comply with a naming convention,"Rename this field ""_tableConfigMap"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Why do we need tableConfigMap? I don't see it being used,"    Map<String, TableConfig> _tableConfigMap = new ConcurrentHashMap<>();",0
Static non-final field names should comply with a naming convention,"Rename this field ""BEAN_NAME"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Should it be change to `dubboConfigBeanInitializer`?,"    public static String BEAN_NAME = ""dubboConfigInitializer"";",1
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"The name is a bit inaccurate, bitmap_union and hll_union are builtin aggregate function too.
So could you choose another name?",    public final static com.google.common.base.Predicate<Expr> IS_BUILTIN_AGG_FN =,0
Ternary operators should not be nested,Extract this nested ternary operation into an independent statement.,Return INFINITY will skew the result. Shall we just return 0?,"        return Double.compare(values[0], 0.0) == 0 ? 0.0 : (values[0] > 0 ? Double.POSITIVE_INFINITY : Double.NEGATIVE_INFINITY);",0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",I wonder if having a static context can somehow mess up tests,    private static volatile CommandLine cmd;,0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,It would be better to combine one with the following if.,            if (addrs != null && !UtilAll.isBlank(addrs)) {,1
Static non-final field names should comply with a naming convention,"Rename this field ""DISABLED"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Wouldn't it be better to have a static final member in ActionMapping interface as a specific instance?,    public static DefaultActionMapping DISABLED = new DefaultActionMapping();,0
Private fields only used as local variables in methods should become local variables,"Remove the ""_threadAccumulator"" field and declare it as a local variable in the relevant methods.",multiple threads are accessing the same Map. Don't you need a ConcurrentHashMap?,"  private Map<Long, Map<String, Map<String, AbstractAccumulator>>> _threadAccumulator = null;",0
"""java.nio.Files#delete"" should be preferred","Use ""java.nio.file.Files#delete"" here for better messages on error conditions.",Why is `delete()` invoked again here ?,        mLogSnapshot.delete();,1
"Unused ""private"" fields should be removed","Remove this unused ""mergeContext"" private field.","this is unused now, remove ?",  private QueryContext mergeContext = new QueryContext();,1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"optional nit: your choice, but maybe this is clearer as a single expression? `e.getStatusCode() == 400 && (e.getContent().contains(GOOG_...) || e.getContent().contains(GOOG_...))`

I think this makes your comment about delegation a bit clearer (really _everything_ will be delegated to be handled eleswhere - even the non-400s).",    if (e.getStatusCode() == 400) {,1
Field names should comply with a naming convention,"Rename this field ""_varLengthDictionaryColumns"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Same here, why does RT need to know about var length dict columns if this PR is specifically for offline?",  private final List<String> _varLengthDictionaryColumns;,0
"Unused ""private"" fields should be removed","Remove this unused ""superDatasetShardsFactor"" private field.","<img width=""662"" alt=""image"" src=""https://user-images.githubusercontent.com/5441976/169683842-caf90d51-ac6e-406c-930b-4f6408016ef1.png"">

Please take another look at how `factor` works in ElasticSearch. The factor is the amplification coefficient. Others are using `ShardsNumber`.","    /**
FieldDeclaration      * Shards Factor for measure/metrics.
FieldDeclaration      */
FieldDeclaration     private int metricsShardsFactor;
FieldDeclaration     /**
FieldDeclaration      * Shards Factor for a normal record.
FieldDeclaration      */
FieldDeclaration     private int recordShardsFactor;
FieldDeclaration     /**
FieldDeclaration      * Shards Factor for a super dataset
FieldDeclaration      */
FieldDeclaration     private int superDatasetShardsFactor;",0
Local variables should not shadow class fields,"Rename ""maxTime"" which hides the field declared at line 51.","No matter what measurementIndex is, this calculation process is the same. It only needs to be called once.
You can extract that method outside the the calling loop.","    long maxTime = Long.MIN_VALUE;
ExpressionStmt     int maxIndex = 0;
ForStmt     for (int i = 0; i < times.length; i++) {
IfStmt       if (times[i] > maxTime) {
ExpressionStmt         maxTime = times[i];
ExpressionStmt         maxIndex = i;
ExpressionStmt       }
ExpressionStmt     }",0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.","Add javadoc to this method explaining the intention. Also, can we change to Collection<String> instead of List<String> ","  public void sendAuditCounts(String topicName, List<String> serializedAuditCountMaps) {",0
"""@Deprecated"" code should not be used","Remove this use of ""Long""; it is deprecated.","Maybe try `s1`, `s2` and `s3` as before will better.","          new SingleSeriesExpression(new Path(DEVICE1, ""s1""), ValueFilter.eq(new Long(3)));",0
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,"why rename?
We should use noun.
Even if we need to rename, I would recommend `Distribution`

",public class PhysicalDistribute<CHILD_TYPE extends Plan> extends PhysicalUnary<CHILD_TYPE> {,0
Math operands should be cast before assignment,"Cast one of the operands of this division operation to a ""double"".",Same as above.,				return Double.valueOf(100 * (busytime) / (busytime + idletime)).doubleValue();,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Use logger?,      e.printStackTrace();,0
"Unused ""private"" fields should be removed","Remove this unused ""status"" private field.","The field is better named `successful` (or something similar) IMO, based on its type `boolean`",    private boolean status;,0
Field names should comply with a naming convention,"Rename this field ""_orderByType"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Make member variables final,    private OrderByType _orderByType;,0
Nested code blocks should not be used,Extract this nested code block into a method.,remove this parentheses,           {,1
Boolean literals should not be redundant,Remove the unnecessary boolean literal.,"(minor) Can be simplified to 
    return Boolean.TRUE.equals(offlineTableDisableGroovyQuery) || Boolean.TRUE.equals(realtimeTableDisableGroovyQuery);","    return (offlineTableDisableGroovyQuery == null ? false : offlineTableDisableGroovyQuery) || (
ConditionalExpr         realtimeTableDisableGroovyQuery == null ? false : realtimeTableDisableGroovyQuery);",1
Two branches in a conditional structure should not have exactly the same implementation,This branch's code block is the same as the block for the branch on line 191.,Use `or` instead of else if,"    if (!hasCandidateResult()) {
IfStmt       setValue(extVal);
IfStmt     } else if (absExtVal.compareTo(absCandidateResult) > 0) {
IfStmt       setValue(extVal);
IfStmt     } else if (absExtVal.compareTo(absCandidateResult) == 0
BinaryExpr         && extVal.compareTo(candidateResult) > 0) {
ExpressionStmt       setValue(extVal);",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""prometheus"" 3 times.",`String METRICS_SERVLETS_DEFAULT[]` -> `String[] METRICS_SERVLETS_DEFAULT`,"  public static final String METRICS_SERVLETS_DEFAULT[] = { ""jmx"", ""metrics"", ""prometheus"" };",0
Field names should comply with a naming convention,"Rename this field ""_segment"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","for anything other than Hashmap, we can't store Segment reference in the store. Should we replace it with the `int` or something else. We might also need to add method in the interface to convert the integer segmentId to segment object.",  private final IndexSegment _segment;,0
Raw types should not be used,Provide the parametrized type for this generic.,  private Future<Void> transportFuture;,  private Future transportFuture;,1
Unused assignments should be removed,"Remove this useless assignment to local variable ""depth"".",Don't need to manipulate RuntimeContext. Just `ControllerDepth#pop`.,"            ContextManager.getRuntimeContext().put(CONTROLLER_METHOD_STACK_DEPTH, depth--);",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""fieldSpec"" is nullable here.",Let's add a method in `FieldSpec`: `boolean isBackwardCompatibleWith(FieldSpec oldFieldSpec)` so that other sub-classes can override it if necessary,"      boolean isBackward = EqualityUtils.isEqual(fieldSpec.getName(), oldSchemaFieldSpec.getName())",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"  LEVEL_STRATEGY,
  NORMAL_STRATEGY;","  LevelStrategy,
EnumConstantDeclaration   NormalStrategy;",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,And this one,public class ToolkitPluginConfigService implements PluginConfig {,0
"Parsing should be used to convert ""Strings"" to primitives","Use ""Long.parseLong"" for this string-to-long conversion.",Have assertion of the dataPoint size here.,    long timestamp = Long.valueOf(dataPoint[dataPoint.length - 1]);,0
"""StandardCharsets"" constants should be preferred",Replace charset name argument with StandardCharsets.UTF_8,"You can directly decode string here
          return Base64.getDecoder().decode(value.toString());","          return Base64.getDecoder().decode(((String) value).getBytes(""UTF-8""));",0
"Mutable fields should not be ""public static""","Make this member ""protected"".",Why using `static`?,"    public static final Map<Field, String> sessionOriginValue = new HashMap<Field, String>();",1
"""ThreadLocal"" variables should be cleaned up when no longer used","Call ""remove()"" on ""readRowVersionCache"".",Does this class really make sense? `ReadRowVersion` is a minuscule class with a minimum amount of data. Are you sure it would be faster to bother with `ThreadLocal` instead of creating a new instance?,    private final ThreadLocal<ReadRowVersion> readRowVersionCache;,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Use logger.error rather than e.printStackTrace();,      e.printStackTrace();,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,I agree. Can not see how variable message size can improve anything.,"            // TODO: Use fixed int message size? This will simplify encoders/decoders a lot,
IfStmt             // likely increasing performance as well.",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Rename it to sth more specific like `ResourceUtils`?,public class Utils {,0
Double Brace Initialization should not be used,Use another way to initialize this instance.,You can remove the `toLowerCase()` here,"          put(canonicalize(TransformFunctionType.ADD.getName().toLowerCase()), AdditionTransformFunction.class);",0
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),`PARTITION_ID_SUPPLIER `?,  SparkTaskContextDetailSupplier<Integer> PARTITION_SUPPLIER = () -> TaskContext.getPartitionId();,0
Raw types should not be used,Provide the parametrized type for this generic.,Same performance concern. Prefer `LinkedList`.,        public static List DISABLED_PLUGINS = new ArrayList();,0
Strings should not be concatenated using '+' in a loop,Use a StringBuilder instead.,It is recommended to use StringBuilder where string concatenations are many. ,"      ret = ret + prop.getKey() + ""="" +prop.getValue() + "","";",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"I think var name should still be capitalized since it's a private static final, if we want to follow google java style guide. like how COPY_ITERATION_COUNTER is cap'd.","  private static final List<String> fatalErrorRegexes = ImmutableList.of(""*fatal*""); // TODO: make configurable",0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,nit: add some comment to describe why need to process these expr specially,            if (expr instanceof Cast) {,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Another idea, depending what you think is to expose this converter and the reverse by extending an actual Converter type and delegate to these specific implementations? 

https://google.github.io/guava/releases/17.0/api/docs/com/google/common/base/Converter.html",public class VCardToGoogleContactConverter {,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"use LOG
","      System.out.println(""numRowsUpdated:"" + numRowsUpdated);",1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"Use logger
","    System.out.println(""Starting............"");",1
Raw types should not be used,Provide the parametrized type for this generic.,"The word ""sensor"" is seldom used in existing code, to avoid confusion, I would suggest using measurement.","  public Set calTopKSensor(String deviceId, String sensorId, double k)",0
"Unused ""private"" fields should be removed","Remove this unused ""KEY_SAFE_CLOSEABLE"" private field.",Never used?,"    private static final String KEY_SAFE_CLOSEABLE = ""SAFE_CLOSEABLE"";",1
"Unused ""private"" methods should be removed","Remove this unused private ""getUploadVersion"" method.",unused method?,  private FileUploadDownloadClient.UploadVersion getUploadVersion(String uploadVersionString) {,1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",Why using `static`?,"    public static final Map<Field, String> sessionOriginValue = new HashMap<Field, String>();",0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"@rdsr, same comment about naming here. Sorry I didn't point it out the first time.",    private final StructType record;,0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,nextId is a not used variable which can be removed.,    private AtomicLong nextId = new AtomicLong(NEXT_ID_INIT_VALUE);,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove the commented code.,"    AtomicInteger errorCount = new AtomicInteger(0);
ExpressionStmt     //    storageGroupNodes
ExpressionStmt     //        .parallelStream()
ExpressionStmt     //        .forEach(
ExpressionStmt     //            sgNode -> {
ExpressionStmt     //              try {
ExpressionStmt     //                rocksDBManager.setStorageGroup(sgNode.getPartialPath());
ExpressionStmt     //                if (sgNode.getDataTTL() > 0) {
ExpressionStmt     //                  rocksDBManager.setTTL(sgNode.getPartialPath(), sgNode.getDataTTL());
ExpressionStmt     //                }
ExpressionStmt     //              } catch (MetadataException | IOException e) {
ExpressionStmt     //                if (!(e instanceof StorageGroupAlreadySetException)
ExpressionStmt     //                    && !(e instanceof PathAlreadyExistException)
ExpressionStmt     //                    && !(e instanceof AliasAlreadyExistException)) {
ExpressionStmt     //                  errorCount.incrementAndGet();
ExpressionStmt     //                }
ExpressionStmt     //                logger.error(
ExpressionStmt     //                    ""create storage group {} failed"", sgNode.getPartialPath().getFullPath(),
ExpressionStmt     // e);
ExpressionStmt     //              }",1
Field names should comply with a naming convention,"Rename this field ""_tableGroupName"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Did we consider referring to `TableGroupConfig` directly here ? If null, then current behavior. If non null, then table is part of some TableGroup. See the example of `FieldConfig` which by itself is like a sub-config but is referred to from TableConfig.",  private String _tableGroupName;,0
Empty statements should be removed,Remove this empty statement.,remove,        ;,1
"Unused ""private"" fields should be removed","Remove this unused ""maxSizeOfProfileTaskNoneStream"" private field.",Why related to NoneStream?,    private long maxSizeOfProfileTaskNoneStream = 10_000L;,1
Class variable fields should not have public accessibility,Make isDropped a static final constant or non-public and provide accessors if needed.,I think `isDropped` need to be persisted?,    public volatile boolean isDropped = false;,0
Field names should comply with a naming convention,"Rename this field ""_relOptPlanner"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","nit: move these sections to the top of the class (in Pinot our class structure are member variables then functions)
also make it final so that it cannot be modify outside of constructor of the class / compiler knows how to optimize getter methods.","  private PlannerImpl _planner;
FieldDeclaration   private SqlValidator _validator;
FieldDeclaration   private RelOptPlanner _relOptPlanner;",0
Methods should not have too many parameters,"Constructor has 9 parameters, which is greater than 7 authorized.",Why add options in the middle instead of at the end? Seems like you're changing more lines by displacing the other arguments.,"  protected BaseTableScan(TableOperations ops, Table table, Long snapshotId, Map<String, String> options,",0
Unused assignments should be removed,"Remove this useless assignment to local variable ""!unknown!"".",Can you add a try/finally here?,              TaskResult result = runInternal();,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,is there any other place we can move this to? having a class for just one constant  does not look right.,public class Constants {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Failed to create the subscription group. Reach out to the ThirdEye team."" 3 times.","Should be detection pipeline, not subscription group. And this error checking logic is missing in the /create-alert endpoint.","      responseMessage.put(""message"", ""Failed to create the subscription group. Reach out to the ThirdEye team."");",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Is this a temporary value for debug ?,  private static final int QUERY_TIMEOUT_MS = 1000_000; // TODO: load from config files or requests,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"It's all good to add new entry at middle, while it's better to append it at the end to keep enumerations compatible.","  CreateSchemaTemplate,",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Please check unuseful codes  like this line.,"      //        baseDirIndex, relativePath);",1
Local variables should not shadow class fields,"Rename ""regionInfoMap"" which hides the field declared at line 73.","`(consensusGroupId, regionGroup)`","    regionInfoMap.forEach(
LambdaExpr         (consensusGroupId, regionInfoMap) -> {",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Do you want to open a JIRA ticket if this is a problem?,        if (recursiveParserWrapperHandler instanceof BasicContentHandlerFactory) { // TODO this cond is always false,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Use log instead,            e.printStackTrace();,0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,static,"  private final String SIMPLE_NAME = ""DefaultDateTypeAdapter"";",1
Raw types should not be used,Provide the parametrized type for this generic.,add some comment for this function? Let people known what does this function do without reading code,"    public List<List<Comparable>> getLoadJobInfosByDb(long dbId, String labelValue,",0
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @deprecated Javadoc tag.,"You can move all deprecated constants to `Stats`, and remove `Stats.` in front of all constant names.
IDEA's `Move Members` can do it quickly",    @Deprecated public static final String QUEUE_PUT_NUMS = Stats.QUEUE_PUT_NUMS;,1
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,Please prepare a Jackpot hint that would rewrite to `ProgressHandle.createSystemHandle`.,"    public static ProgressHandle createSystemHandle(String displayName, Cancellable allowToCancel, Action linkOutput) {",0
Field names should comply with a naming convention,"Rename this field ""_tableName"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(nit) seems we don't need the table name,  private String _tableName;,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"(nit)
public class LikeToRegexpLikePatternConverterUtils {",public class LikeToRegexFormatConverterUtil {,0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"              if (!allFailedDataNodeSet.contains(candidateDataNode)) {
                selectedDataNode = candidateDataNode;
                break;
              }","              if (!allFailedDataNodeSet.contains(candidateDataNode)) {
BlockStmt                 if (selectedDataNode == null) {
BlockStmt                   selectedDataNode = candidateDataNode;
BlockStmt                 }
BlockStmt               }",1
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,"As discussed offline, we don't need this class","  public static abstract class ConverterRequestBuilder<RQ> implements AsyncRequestBuilder<HttpOperation, RQ> {",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""that"" is nullable here.",I don't think `equals()` and `hashCode()` is required for this class.,  public boolean equals(Object o) {,0
Field names should comply with a naming convention,"Rename this field ""_timeType"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Is this compatible with the zookeeper config we store? Will reads work right? Please test manually that the reads of old configs can work correctly.,  private TimeUnit _timeType;,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,Javadocs,    public final static SchemaTableValidatorImpl INSTANCE = new SchemaTableValidatorImpl();,0
Field names should comply with a naming convention,"Rename this field ""_lookupTable"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",I would make these final constructor parameters and remove `populate`,"  private Map<PrimaryKey, GenericRow> _lookupTable = new HashMap<>();
FieldDeclaration   private Schema _tableSchema;
FieldDeclaration   private List<String> _primaryKeyColumns;",0
"Unused ""private"" fields should be removed","Remove this unused ""currentGeneration"" private field.","above, it looked like IntegerLiteralExpr is the default/fallback for both generation and attempts, but here and below it seems that attempts begins at 0, but generation begins as 1.
1. why a different starting value for each?
2. for whatever starting value we use, is there a discrepancy between the `getProp` fallback and here?","  private int currentGeneration = 1;
FieldDeclaration   private int currentAttempts = 0;",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"is it correct that it would be `0L`?  if so, just wondering whether problematic to break the reasonable presumption that endTime > startTime.  if is, possibly use MAX_LONG?

also, musing, could we approximate with greatest end time among the job statuses here (even though none `isFlowStatus`)--or do those not have the end time even set?",      // todo: flow end time will be incorrect when dag manager is not used,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""yyyyMMdd"" 3 times.","*[JodaConstructors](https://errorprone.info/bugpattern/JodaConstructors):*  Use of certain JodaTime constructors are not allowed.

---


        long timeCeiling = Long.parseLong(DateTime.now().toString(""yyyyMMdd""));



---

<details><summary><b>ℹ️ Learn about @sonatype-lift commands</b></summary>

You can reply with the following commands. For example, reply with ***@sonatype-lift ignoreall*** to leave out all findings.
| **Command** | **Usage** |
| ------------- | ------------- |
| `@sonatype-lift ignore` | Leave out the above finding from this PR |
| `@sonatype-lift ignoreall` | Leave out all the existing findings from this PR |
| `@sonatype-lift exclude <file\|issue\|path\|tool>` | Exclude specified `file\|issue\|path\|tool` from Lift findings by updating your config.toml file |

**Note:** When talking to LiftBot, you need to **refresh** the page to see its response.
<sub>[Click here](https://github.com/apps/sonatype-lift/installations/new) to add LiftBot to another repo.</sub></details>



---

Was this a good recommendation?
[ [? Not relevant](https://www.sonatype.com/lift-comment-rating?comment=337688211&lift_comment_rating=1) ] - [ [? Won't fix](https://www.sonatype.com/lift-comment-rating?comment=337688211&lift_comment_rating=2) ] - [ [? Not critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=337688211&lift_comment_rating=3) ] - [ [? Critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=337688211&lift_comment_rating=4) ] - [ [? Critical, fixing now](https://www.sonatype.com/lift-comment-rating?comment=337688211&lift_comment_rating=5) ]","        long timeCeiling = Long.parseLong(new DateTime().toString(""yyyyMMdd""));",0
Unused assignments should be removed,"Remove this useless assignment to local variable ""influxDB1"".",```,"    InfluxDB influxDB1 = IoTDBInfluxDBFactory.connect(""http://127.0.0.1:6667"", ""root"", ""root"");",1
"""Collections.EMPTY_LIST"", ""EMPTY_MAP"", and ""EMPTY_SET"" should not be used","Replace ""Collections.EMPTY_LIST"" by ""Collections.emptyList()"".",emptyList() should be preferred over EMPTY_LIST,"        return createParameterContextEntity(name, description, parameters, Collections.EMPTY_LIST);",1
Unnecessary imports should be removed,Remove this unused import 'java.text.SimpleDateFormat'.,same here,import java.text.SimpleDateFormat;,0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".",This should be final.,  private long maxTaskRunTimeMillis = 6 * 60 * 60_000; // 6 hours,0
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,Please add a comment explaining how to handle the return value -- there are a lot of callers that have not been updated to check the new return value. Looks like true iff the operation was queued?,    <DATA_TYPE> boolean queueOperation(OperationAndData<DATA_TYPE> operationAndData),0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,no longer required?,    // TODO: join to partition data from the manifest file,0
Field names should comply with a naming convention,"Rename this field ""_tableName"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Use `_tableNameWithType` for clarity,  private final String _tableName;,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"LOG
","    System.out.println(Thread.currentThread().getId() + "" : Started task driver"");",1
Class variable fields should not have public accessibility,Make skipMalformedDocument a static final constant or non-public and provide accessors if needed.,Is there a system option for this?  Also is this documented anywhere?,  public boolean skipMalformedDocument;,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,How about we support direct log in this pull request?,public class ActiveSpan {,0
"""public static"" fields should be constant","Make this ""public static INJECTION_TAGS"" field final","        /**
         * Tag the span by the key/value in the correlation context, when the keys listed here exist.
         */
        public static String AUTO_TAG_KEYS = """";","        /**
FieldDeclaration          * Extract tags from the correlation.
FieldDeclaration          */
FieldDeclaration         public static String INJECTION_TAGS = """";",0
Raw types should not be used,Provide the parametrized type for this generic.,"                Map<String, String> header = new HashMap<>(tMap.size);","                Map<String, String> header = new HashMap(tMap.size);",1
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,"Can we add empty line to split this definition?  Additionally, add some comments?",  SparkSupplier<Integer> PARTITION_SUPPLIER = () -> TaskContext.getPartitionId();,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","I see that curTask is used only locally in method ""body""
I think it's better to move it into the method (don't see any reason to add volatile reads).",    private volatile RunnableFuture<?> curTask;,0
"""public static"" fields should be constant","Make this ""public static disable_storage_medium_check"" field final","Better not changing the default value.
And why not using origin config name?",    public static boolean disable_storage_medium_check = false;,0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,make it function too,        long packed_datetime = ((ymd << 17) | hms) << 24 + microsecond;,0
Local variables should not shadow class fields,"Rename ""ioTime"" which hides the field declared at line 65.",You should use class variable ioTime rather than this local variable,    long ioTime = 0;,1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""commandsPath"" is nullable here.","I would simplify to 

            } else if (commandsPath != null && commandsPath.canRead()) {",            } else if (config.commandJsonPath != null && commandsPath.canRead()) {,0
"Mutable fields should not be ""public static""","Make this member ""protected"".",Do you forget to remove all these?,            public static List<String> EXCLUDED_CLIENT_TRACING_PEERS = new LinkedList<>();,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""yyyy-MM-dd HH:mm:ss"" 3 times.",You can use `TimeUtils.longToTimeString()`,"                    row.add(new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"").format(new Date(table.getUpdateTime())));",0
"Unused ""private"" fields should be removed","Remove this unused ""name"" private field.","1. I think this should be removed. 
2. This class should be named as `SampleConfig` and merge with `DefaultSampleRateConfig`. One `SampleConfig` should be enough.
3. `SampleRateSetting` should provide `add(String service, SampleConfig)` and use constructor as default setting.",        private String name;,1
Class variable fields should not have public accessibility,Make TIMESTAMP_PRECISION a static final constant or non-public and provide accessors if needed.,Just use a local variable is good,"  public static String TIMESTAMP_PRECISION = ""ms"";",1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.","Try to override these two methods, you can refer to `LastValueAggrResult`","  protected void deserializeSpecificFields(ByteBuffer buffer) {}
MethodDeclaration   @Override
BlockStmt   protected void serializeSpecificFields(OutputStream outputStream) {}",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"make each Type class be singleton, return the same instance here instead of new one each time.",public class TypeFactory {,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",Make it “final” and remove “volatile”,"    private static volatile ScheduledExecutorService PROFILE_TASK_READY_SCHEDULE = Executors.newScheduledThreadPool(15, new DefaultNamedThreadFactory(""PROFILE-TASK-READY-SCHEDULE""));",1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Can you explain what this class does exactly?  ,public class ImageDirectoryProcessor {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Solve this TODO,//TODO refactor the dependencies out of root ivy file,1
"""switch"" statements should have ""default"" clauses",Add a default case to this switch.,Do we need to make this case insensitive?,    switch (unitString) {,0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,It would be better to combine one with the following if.,            if (addrs != null && !UtilAll.isBlank(addrs)) {,1
Unused local variables should be removed,"Remove this unused ""bigInteger"" local variable.",Check largeint type range,            BigInteger bigInteger = new BigInteger(value);,0
Static non-final field names should comply with a naming convention,"Rename this field ""max_running_rollup_job_num"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",`max_running_rollup_job_num_per_table` ? ,    public static int max_running_rollup_job_num = 1;,1
"Boxed ""Boolean"" should be avoided in boolean expressions",Use the primitive boolean expression here.,"Probably, we may never hit null `this.writeHandleFactory` in `BulkInsertMapFunction` due to this overridden method, but it's still better to handle null there using Option<WriteHandleFactory> as suggested.",    return doAppend.get(idx) ? Option.of(new AppendHandleFactory()) :,0
"Boxed ""Boolean"" should be avoided in boolean expressions",Use the primitive boolean expression here.,Add an example in comment to explain the transformation.,                    if (onS3) {,0
"Loops should not contain more than a single ""break"" or ""continue"" statement",Reduce the total number of break and continue statements in this loop to use at most one.,"Logic is a little bit unclear by first glance. Recommend to change it to:
if (configuredClassName == null || configuredClassName.isEmpty()) {
  if (contains) {
    log info (use builtinClassName)
  } else {
    log warning
  }
} else {
  if (contains) {
    if (builtinClassName.equals(configuredClassName)) {
      log info (config same as builtin)
    } else {
      init
    }
  } else {
    init
  }
}",        continue;,1
"Synchronized classes Vector, Hashtable, Stack and StringBuffer should not be used","Replace the synchronized class ""Vector"" by an unsynchronized one such as ""ArrayList"" or ""LinkedList"".",ArrayList,    Vector<String> data_types = new Vector<>();,1
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","I cannot tell the design purpose of keeping both `RouterChain.stateRouters` and `StateRouter.setNextRouter()`.

We already have a router chain with the following look:
`HeaderRouter` -> `XxxRouter1` -> `XxxRouter2` -> `TailRouter`
All functions like 'notify', 'route', 'destroy', 'getSnapshot' can be started from HeaderRouter and run automatically to the end following the chain.

So what's the necessity of the list attribute in RouterChain hosting [XxxRouter1, XxxRouter2]",    private volatile List<StateRouter<T>> stateRouters;,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","@yihua @xushiyan let's chat more on this to make sure we're aligned on the approach going f/w:

I was thinking of keeping this component file-format agnostic and instead make it engine-specific, while refactoring MOR table read-path for efficient querying. 

Can you elaborate what's the goal you're striving for w/ `HoodieAvroRecord`?

P.S. Putting this context in here for somebody who might not be aware of previous conversations",public abstract class HoodieRecord<T> implements Serializable {,0
Class variable fields should not have public accessibility,Make HEARTBEAT_PERIOD a static final constant or non-public and provide accessors if needed.,Please fix comment.,        public static long HEARTBEAT_PERIOD = 3;,0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"@codope @nsivabalan folks, i don't believe this is the right fix to address the problem: bubbling down this config value we're now exposing every user of this API to be aware of it, which, very likely, will have very little to do with it.","  public static String getNestedFieldValAsString(GenericRecord record, String fieldName, boolean returnNullIfNotFound, boolean consistentLogicalTimestampEnabled) {",0
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,make it a class field?,      Random random = new Random();,0
Short-circuit logic should be used in boolean contexts,"Correct this ""&"" to ""&&"" and extract the right operand to a variable if it should always be evaluated.",&& ?,        if (hasMedia & !status.isRetweet()) {,1
"""equals(Object obj)"" and ""hashCode()"" should be overridden in pairs","This class overrides ""equals()"" and should therefore also override ""hashCode()"".","Still that question, when need we use this `equals` methods of a tree.",  public boolean equals(Object o) {,0
"Unused ""private"" fields should be removed","Remove this unused ""NAMING_CONTROL"" private field.",Where is it used?,    private static NamingControl NAMING_CONTROL;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Failed to merge FlowFiles to create new bin due to {}"" 3 times.",Same comment about args to the logger. Need to pass a separate arg to match the `{}` matcher and another for the stacktrace.,"                getLogger().error(""Failed to merge FlowFiles to create new bin due to {}"", e);",0
Raw types should not be used,Provide the parametrized type for this generic.,`List<Object>` for the left hand side.,            final List fileList = new ArrayList<>( mto.getCount() );,1
Static non-final field names should comply with a naming convention,"Rename this field ""CREATE_LONG"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",CREATE_LONG -> createLongF,"    private static Function<Metric, Measure> CREATE_LONG = m ->",1
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),"minor nit: `() -> function.call()` could be replaced with method reference, i.e. `function::call`",            return ugiProvider.call().doAs((PrivilegedExceptionAction<T>)() -> function.call());,1
"Blocks should be synchronized on ""private final"" fields","""chore"" is a method parameter, and should not be used for synchronization.","I think it makes sense. So what we are doing is we are taking lock on give `ScheduledChore` instance, followed by current `ChoreService` itself and when we find that this ScheduledChore belongs to different ChoreService instance, we call `cancel()` on that instance, which is anyways synchronized instance method.",            chore.getChoreService().cancelChore(chore);,0
Field names should comply with a naming convention,"Rename this field ""DEFAULT_BUFFER_SIZE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Need `static` if we use CAPITAL letters,  private final int DEFAULT_BUFFER_SIZE = 2048 * 10;,1
"""public static"" fields should be constant","Make this ""public static MAX_MONITOR_TIME"" field final",`MAX_MONITOR_TIME` -> `MAX_DURATION`,        public static int MAX_MONITOR_TIME = 10;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,I suggest to create a jira ticket that has the version number of the server that must be deployed everywhere before we can remove this code.,    // TODO: remove the code for backward compatible after server updated to the latest code.,1
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"Any specific reason for turning off HTML escaping? 

We have different ways of creating new Gson objects in the codebase... should all of them disable HTML escaping? ",  private final static Gson GSON = new GsonBuilder().disableHtmlEscaping().create();,0
Throwable and Error should not be caught,Catch Exception instead of Throwable.,"Better not catch Throwable? And where do we throw exception in the above code? getReplicationSink? Then maybe we could give them a special try catch block, instead of wrap the FutureUtils.addListenrer call too?",    } catch (Throwable e) {,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Fix indention.,       }                         ,0
Raw types should not be used,Provide the parametrized type for this generic.,Do you really like an idea of wrapping every next result with SingletonSet?,"        this.it = new InnerIterator(e -> singleton(e), fn);",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""taskqueue"" 3 times.",please define as  a static final string. it is used in multiple places,"      case ""taskqueue"":",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""sequence"" 3 times.","How about assigning these offsets some names like ""LOGICAL_SG_OFFSET_IN_LOG_V012=0"" in case the offsets change in the future.","        splittedFileInfo[LOGICAL_SG_OFFSET_IN_LOG - 1],
ArrayAccessExpr         splittedFileInfo[VIRTUAL_SG_OFFSET_IN_LOG - 1],
ArrayAccessExpr         splittedFileInfo[TIME_PARTITION_OFFSET_IN_LOG - 1],
BinaryExpr         splittedFileInfo[SEQUENCE_OFFSET_IN_LOG + 4].equals(""true"")
MethodCallExpr             || splittedFileInfo[SEQUENCE_OFFSET_IN_LOG + 4].equals(""sequence""),",0
"Strings and Boxed types should be compared using ""equals()""","Use the ""equals"" method if value comparison was intended.",A missing `equals()` here.,"    if (prefix == """") {",1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,isEmpty() is probably better here actually,"    if (!traversedDatePath.equals("""")) {",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,应该在内部处理Exception,    void onData(InputStream in) throws Exception;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"@bhasudha can you file a ticket for this work for later ? and may be assign a ""newbie"" component ",   * TODO Change code references to getInstants() that reverse the instants later on to use this method instead.,1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",cache? please rename.,                    Set<TNetworkAddress> cache = new HashSet<TNetworkAddress>();,0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,"no one use return result from this func, may it would be be more clear to change implementation to void ?","    @Nullable public GridCacheContext<?, ?> prepareCacheStop(",0
"Unused ""private"" fields should be removed","Remove this unused ""batchEnabled"" private field.",I believe you need to update the `application.yml` otherwise how could this take effect?,    private boolean batchEnabled = true;,0
"Null checks should not be used with ""instanceof""","Remove this unnecessary null check; ""instanceof"" returns false for nulls.",Simplify to `decompressor instanceof CanReinit` as it covers null check also?,          if (decompressor != null && decompressor instanceof CanReinit) {,1
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,"Can we avoid custom test code that ADDS FIELDS only required for testing? This is a bad design, we should fight it, please add TODO for removing it",    public CompletableFuture<?> enableCheckpoints(boolean enable) {,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,why not use enum type?,public class TsFileCheckStatus {,0
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,Please use `Connection connection = EnvFactory.getEnv().getConnection();` instead.,"                Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,,"    //    if (logger.isDebugEnabled()) {
ExpressionStmt     //      logger.debug(
ExpressionStmt     //        ""paths:""
ExpressionStmt     //          + groupByFillPlan.getPaths()
ExpressionStmt     //          + "" level:""
ExpressionStmt     //          + Arrays.toString(groupByFillPlan.getLevels()));
ExpressionStmt     //    }",1
Field names should comply with a naming convention,"Rename this field ""_fields"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Suggest renaming it to `_values`,  private final Object[] _fields;,1
Field names should comply with a naming convention,"Rename this field ""_segmentMetadata"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",You should not be sending segment metadata as a query parameter. ,      private SegmentMetadata _segmentMetadata;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal "" sec reached. Aborting"" 4 times.",the intended behavior here may be to simply run as many requests as possible and then stopping. just a thought,"          throw new TimeoutException(""Timeout of "" + timeout + "" sec reached. Aborting"");",0
Boxing and unboxing should not be immediately reversed,"Remove the boxing to ""Double"".","Hi,

I have checked the failed tests in [CompressionRatioTest.java, IoTDBConfigDynamicAdapterTest.java](https://travis-ci.org/apache/incubator-iotdb/jobs/577722148), and it is caused by "" / by zero"" when initializing. Maybe a judgement needs to be added here?",				return Double.valueOf(100 * (1 - idleCpuTime / totalCpuTime)).doubleValue();,0
Loops should not be infinite,Add an end condition to this loop.,Change the condition to no `enable.auto.commit`. :),                    if (!enableKafkaMessageAutoCommit) {,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,add a fail();,      e.printStackTrace();,0
"Jump statements should not occur in ""finally"" blocks",Remove this return statement from this finally block.,"Can you keep this `return` statement after `finally` block so that if Exception is thrown, we only unlock evictionLock and then let Exception be thrown by this method.",      return bytesToFree;,1
Class variable fields should not have public accessibility,Make executor a static final constant or non-public and provide accessors if needed.,Access control,"  public static final Logger LOGGER = LoggerFactory.getLogger(ServiceProvider.class);
FieldDeclaration   public static final Logger AUDIT_LOGGER =
MethodCallExpr       LoggerFactory.getLogger(IoTDBConstant.AUDIT_LOGGER_NAME);
FieldDeclaration   public static final Logger SLOW_SQL_LOGGER =
MethodCallExpr       LoggerFactory.getLogger(IoTDBConstant.SLOW_SQL_LOGGER_NAME);
FieldDeclaration   public static final TSProtocolVersion CURRENT_RPC_VERSION =
FieldAccessExpr       TSProtocolVersion.IOTDB_SERVICE_PROTOCOL_V3;
FieldDeclaration   public static final IoTDBConfig CONFIG = IoTDBDescriptor.getInstance().getConfig();
FieldDeclaration   public static final QueryTimeManager queryTimeManager = QueryTimeManager.getInstance();
FieldDeclaration   public static SessionManager sessionManager = SessionManager.getInstance();
FieldDeclaration   public static final TracingManager tracingManager = TracingManager.getInstance();
FieldDeclaration   public static QueryFrequencyRecorder queryFrequencyRecorder;
FieldDeclaration   public Planner processor;
FieldDeclaration   public IPlanExecutor executor;",1
Field names should comply with a naming convention,"Rename this field ""_primaryKey"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",what if the primary key is made up of two columns?,  private String _primaryKey;,0
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,"I believe this method should return MonitoringList.
You always use it to register metrics and initialize fields MonitoringList in a functional style.
If the method returns `<Id, R extends MonitoringRow<Id>> MonitoringList<Id, R>` initialize blocks in IgniteServiceProcessor, GridTaskProcessor, ClusterCachesInfo will be clearer.","    public <Id, R extends MonitoringRow<Id>> void list(String name, String description,",0
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,Why is at abstract?,"public abstract class ConfigurationTreeWrapper<VIEW, CHANGE> implements ConfigurationTree<VIEW, CHANGE> {",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"        GLOBAL_ORDINALS(""global_ordinals""), MAP(SimpleName);

I think code style will fail due to lower case.","        GLOBAL_ORDINALS(""global_ordinals""), map(""map"");",0
"""ThreadLocal"" variables should be cleaned up when no longer used","Call ""remove()"" on ""recursiveCall"".","Does this really need a recursive call to reproduce? Weird!
",      private static final ThreadLocal<Boolean> recursiveCall = new ThreadLocal<Boolean>();,1
Resources should be closed,"Use try-with-resources or close this ""FileInputStream"" in a ""finally"" clause.","closed after stream use, you could use ""try() {}""",    FileInputStream inputStream = new FileInputStream(specialPropertiesFile);,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Kernal"" 5 times.","Create mbean var, please","        registerMBean(""Kernal"", IgniteKernal.class.getSimpleName(), new IgniteMXBeanImpl(kernal), IgniteMXBean.class);",0
Static non-final field names should comply with a naming convention,"Rename this field ""spark_dpp_version"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Better to move it to the Config.java,"    public static String spark_dpp_version = ""1_0_0"";",0
Return values should not be ignored when they contain the operation status code,"Do something with the ""boolean"" value returned by ""delete"".","check the return value of all `delete` function, or use `FileUtils.delete` which throws exception if the deletion is failed. Here we can simply new a `TsFileResource` instance, and use the `remove` method to delete file, resourace file and modification.",              tmpTargetFile.delete();,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"same as above.
",      throw new RuntimeException(e);,0
Unused type parameters should be removed,T is not used in the class.,"I am not sure about type params in this and the scan classes. Do we need them?
I'd probably remove them and just cast `file` to `StructLike` in `rows`.

This type parameter assumes we read back `BaseFile`, which is true now, but may change in the future. Also, there are places where `ManifestReadTask` is instantiated without any types and Intellij complains. I think it should be sufficient to get back `StructLike` and that's what we can cast to.",  static class ManifestReadTask<T extends BaseFile<?>> extends BaseFileScanTask implements DataTask {,1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""matching"" is nullable here.",    MutableRoaringBitmap matching = firstRangeId < (lastRangeId - 1) ? new MutableRoaringBitmap() : null;,    MutableRoaringBitmap matching = firstRangeId < lastRangeId ? new MutableRoaringBitmap() : null;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Can you add the log message you want now? Or just remove the try/catch as it's not adding anything right now.,          //TODO Log that precision / scale isn't valid,0
Raw types should not be used,Provide the parametrized type for this generic.,It would be better to define a variable using interface type.,    ArrayList executeList = new ArrayList();,1
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"Overwrite this `pos` method for avoiding an extra `asStructLike(..)`, right  ? ",  protected long pos(Record record) {,0
"Classes from ""sun.*"" packages should not be used",Use classes from the Java API instead of Sun classes.,What is this?,import com.sun.org.apache.xpath.internal.operations.Bool;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Please change to uptime_usec().,    static long long uptime_us() {,0
Methods should not have too many parameters,"Method has 8 parameters, which is greater than 7 authorized.",(nit) Wrong format,"  public static ForwardIndexCreator getRawIndexCreatorForSVColumn(File file,",0
"""switch"" statements should have at least 3 ""case"" clauses","Replace this ""switch"" statement by ""if"" statements to increase readability.",*NULL_DEREFERENCE:*  object returned by `ProtoMetricFamily2MetricsAdapter.metricFamily.getType()` could be null and is dereferenced at line 36.,        switch (metricFamily.getType()) {,0
Unused method parameters should be removed,"Remove this unused method parameter ""dataset"".",Can we return a generic type?,  public Object onCompactionJobCompelete (FileSystemDataset dataset) {,0
Class variable fields should not have public accessibility,Make EXCLUDE_HTTP_HEADERS a static final constant or non-public and provide accessors if needed.,"Use include, rather than exclude.","            public static List<String> EXCLUDE_HTTP_HEADERS = Arrays.asList(""cookie"");",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","Ok, it will be hard to describe my complaints, but I'll try. As far as I see, you tried to use the same abstraction for all data reads. Abstraction is good, but too much of it is bad for performance. Now, let me be more specific:
- reading version row, generally speaking, does not require you reading the entire payload. You read timestamp and after that decide, whether you should read the payload or only return a link to the next version.
- payload size is known when you finished reading the header, ByteArrayOutputStream will lead to extra allocation.

RowId implementation doesn't support fragmentation, for example, but it must implement the method. Should we even attempt to introduce a common abstraction for two implementations? I think not. Even API should be different for them (chain reading needs a timestamp parameter).",public abstract class DataPageReader<T> {,0
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @Deprecated annotation.,"Can this class and `KafkaSimpleJsonExtractor` be deprecated now that there is `KafkaDeserializerExtractor`?
","public class KafkaSimpleExtractor extends KafkaExtractor<String, byte[]> {",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,this is getting out of hand(two pairs within a pair). we can't keep adding more Pairs here. I am adding a class to hold the return value in a class here in one of my PRs. Lets see if we can rebase once the other PR lands.,"  public Pair<Pair<SchemaProvider, JavaRDD<HoodieRecord>>, Pair<String, String>> fetchSource() throws Exception {",0
Static non-final field names should comply with a naming convention,"Rename this field ""CONFLICT_MATRIX"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",If true means 2 operations have no conflict. which should be `compatibilityMatrix`.,    public static Boolean[][] CONFLICT_MATRIX;,0
"Unused ""private"" fields should be removed","Remove this unused ""measurementTypes"" private field.","*SameNameButDifferent:*  The name `measurementTypes;` refers to [java.lang.SuppressWarnings, lombok.Generated, java.util.List, org.apache.iotdb.tsfile.file.metadata.enums.TSDataType] within this file. It may be confusing to have the same name refer to multiple types. Consider qualifying them for clarity. [(details)](https://errorprone.info/bugpattern/SameNameButDifferent)

(at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)",    private List<TSDataType> measurementTypes;,0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""hFileContext"".",Does it simplify things to be able to pass StoreContext directly to the builders?,                                .withCompressTags(getColumnFamilyDescriptor().isCompressTags()),0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",I don't think we should open this.,    private volatile ThreadProfiler profiler;,0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""dashboardUserVO"".",why del this ？ ,"        DashboardUserVO dashboardUserVO = findByQuery(userName, AesUtils.aesEncryption(password, key, iv));",0
Methods should not have too many parameters,"Constructor has 10 parameters, which is greater than 7 authorized.",Who is calling this or rather how is this being triggered? I do not see any updates to the caller in this PR.,"  public MetricBreakdownPipeline(String outputName, Set<String> inputNames, MetricConfigManager metricDAO,
BlockStmt       DatasetConfigManager datasetDAO, QueryCache cache, ExecutorService executor, Set<String> includeDimensions,
BlockStmt       Set<String> excludeDimensions, int k, boolean ignoreScore) {",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,  private static final int MERGE_PAGE_POINT_NUM = IoTDBDescriptor.getInstance().getConfig(),  private static final int mergePagePointNum = IoTDBDescriptor.getInstance().getConfig(),1
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,Please prepare a Jackpot hint that would rewrite to `ProgressHandle.createHandle`.,"    public static ProgressHandle createHandle(String displayName, Action linkOutput) {",0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".","Might worth to mention in the documentation, or somewhere that this should be smaller than `hive.txn.timeout` or in newer versions `metastore.txn.timeout` otherwise the locks might be timed out without because of the lack of heartbeat.",  private static final long HIVE_LOCK_CHECK_MAX_WAIT_MS_DEFAULT = 5 * 1000; // 5 seconds,0
Static non-final field names should comply with a naming convention,"Rename this field ""CONTEXT"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","The reason you put the CONTEXT here, is this for avoiding classloader isolation issue? If SO, add this to comments.","        public static Map<String, Object> CONTEXT = new HashMap<String, Object>();",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Commented code.,"                    //failPartTask(ctx, task.partition());",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,use ShenyuException,"                throw new RuntimeException(String.format(""can not get defaultInstance Field of %s"", requestMarshaller.getClass()));",1
Using slow regular expressions is security-sensitive,"Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.",Please add some comments to describe the pattern? i.e. an example checkpoint string?,"  private final Pattern pattern = Pattern.compile("".*,.*:.*"");",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Do we have to import `powermock`? `Mockito ` also supports mock static methods. Here's a example [https://github.com/dromara/soul/blob/master/soul-client/soul-client-common/src/test/java/org/dromara/soul/client/common/utils/RegisterUtilsTest.java](https://github.com/dromara/soul/blob/master/soul-client/soul-client-common/src/test/java/org/dromara/soul/client/common/utils/RegisterUtilsTest.java) Can you try it in this way?

","    public static void before() throws Exception {
ExpressionStmt         PowerMockito.mockStatic(RegisterUtils.class);
ExpressionStmt         PowerMockito.doNothing().when(RegisterUtils.class, ""doRegister"", Mockito.any(), Mockito.any(), Mockito.any());
MethodDeclaration     }",0
Field names should comply with a naming convention,"Rename this field ""_numReplicas"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Curious, why does this need to be volatile?",  protected volatile int _numReplicas;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""endTime"" 3 times.",Debug and array again.,"            Arrays.toString(parameter.get(""endTime"")), Arrays.toString(parameter.get(""timeSliceType"")));",0
"""@Deprecated"" code should not be used","Remove this use of ""newInstance""; it is deprecated.",Please use `PluginManager.createInstance()` ,      accessControlFactory = (AccessControlFactory) Class.forName(accessControlFactoryClass).newInstance();,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"I believe this class is missing a private constructor to prevent instantiation.
",public final class Modules {,1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"If this is checking for null (plus the compareAndSet), should it set it to null as well or is the AtomicBoolean sufficient? I imagine it's sufficient but thought to ask.","    if (isResourceClosed.compareAndSet(false, true)) {
IfStmt       if (client != null) {
ExpressionStmt         client.close();",0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""deserializedObject"".","This could be collapsed into a single line.
            return jaxbElement.getValue();","            T deserializedObject = jaxbElement.getValue();
CatchClause             return deserializedObject;",1
All branches in a conditional structure should not have exactly the same implementation,Remove this conditional structure or edit its code blocks so that they're not all the same.,Can if check be removed?,            if (!backgroundCompilation),1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,a little...   ConfigNode --> ConfigRegion,"  ConfigNode,",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"I think it might be better to use `logger` to give hints to users like other service. The import and statement are like:
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

private static final Logger logger = LoggerFactory.getLogger(ServerArgument.class);
In **other places in this PR**, whenever throw exceptions, we could also replace them with `logger.error` / `logger.warn`.
				logger.warn(""Can't get the cpu ratio,because this OS is not support"");","				throw new Exception(""Can't get the cpu ratio,because this OS is not support"");",0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,Is there any difference between these two passwords and user?,"    String DORIS_PASSWORD = ""doris.password"";",0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,not allow systme.out.print,"        threadFactory.newThread(() -> System.out.println(""hello""));",1
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"nits: Open another PR to change the style, it should be 'static final' instead of 'final static'. This could reduce the checkstyle warnings.","  final static byte[] BL_PREPARE = Bytes.toBytes(""R"");",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""RegionInfo cannot be null"" 3 times.",Should we add @NotNull annotations given you are in here? Could be a follow-on no problem.,"    Objects.requireNonNull(info, ""RegionInfo cannot be null"");",0
Static non-final field names should comply with a naming convention,"Rename this field ""PAGE_LENGTH_DIGIT"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",not used,  public static int PAGE_LENGTH_DIGIT = 14;,0
"""public static"" fields should be constant","Make this ""public static typeSet"" field final",nit typeSet -> VALID_TYPE_PAIR_SET. pls fix it in next PR,"    public static Set<Pair<JoinType, JoinType>> typeSet = ImmutableSet.of(",0
"""public static"" fields should be constant","Make this ""public static DEFAULT_NONADDITIVE_BUCKET_SIZE"" field final","why can't we get this from collection schema -> timegranularity
",  public static int DEFAULT_NONADDITIVE_BUCKET_SIZE = 5;,0
Field names should comply with a naming convention,"Rename this field ""_dictIdCountMap"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",We can use `Int2IntOpenHashMap` here to reduce memory usage because this only stores the result for one segment,    final Int2LongOpenHashMap _dictIdCountMap;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""schedule CQ offset invalid. offset={}, cqMinOffset={}, cqMaxOffset={}, queueId={}"" 4 times.",currentDelayOffset < cqMinOffset 和 currentDelayOffset > cqMaxOffset 两个场景对correctDelayOffset进行调整，日志上是不是要有个区别。,"                    log.error(""schedule CQ offset invalid. offset={}, cqMinOffset={}, cqMaxOffset={}, queueId={}"",",0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""delegate"".",Can we use a package private getter here?,        AsyncLoggerDisruptor delegate = (AsyncLoggerDisruptor) f.get(logger);,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"if the comment is used, it shoule be deleted then",//    updateDeviceChunkPointSizeCache();,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Any Blocker for doing this?,// TODO Possibly redundant class. Use SegmentZKMetadata throughout?,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"just curious, why not throw an exception here like you do for other types which don't have support for MV such as BOOLEAN/TIMESTAMP?",          // TODO: MV cast to BIG_DECIMAL type,0
Using hardcoded IP addresses is security-sensitive,Make sure using this hardcoded IP address is safe here.,This is not a unit test. You need to setup the cluster in these ip addresses in order to make it work...,"        ConnectionFactory.fromHostList(""10.85.126.103:8099"", ""10.85.126.104:8099"", ""10.85.126.105:8099"");",0
"""public static"" fields should be constant","Make this ""public static DEFAULT_PREAGGREGATED_KEYWORD"" field final","KEYWORD --> DIMENSION_VALUE. Add java doc for these constants
","  public static String DEFAULT_PREAGGREGATED_KEYWORD = ""all"";",0
Field names should comply with a naming convention,"Rename this field ""DEFAULT_DATA_SLA"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Should we use Duration or TimeGranularity instead of String, since we are converting it anyway?","  private final String DEFAULT_DATA_SLA = ""3_DAYS"";",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""type"" is nullable here.","Can you open a separate PR for Java fixes? This looks good to me, but we try not to mix changes like this into other PRs to avoid commit conflicts when cherry picking to maintain branches.

This also causes the full test suite to run for this PR, which I'm sure is annoying!","    Preconditions.checkArgument(type != null && type.isNestedType() && type.asNestedType().isStructType(),",0
Methods should not have too many parameters,"Constructor has 14 parameters, which is greater than 7 authorized.",could this use other constructors?,  public IoTDBRpcDataSet(,0
Unnecessary imports should be removed,Remove this unused import 'org.apache.log4j.Layout'.,Imports here too,import org.apache.log4j.Layout;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Have you finish the TODO?,      // TODO rewrite logDeletion,1
Nested blocks of code should not be left empty,Either remove or fill this block of code.,This try catch is redundant,      } catch (UnsupportedOperationException ignored) { },1
Private fields only used as local variables in methods should become local variables,"Remove the ""users"" field and declare it as a local variable in the relevant methods.","if you add @Mock annotation to the ones that are mocks, you can omit the lines in setup",  private Users users;,0
Lambdas containing only one statement should not nest this statement in a block,Remove useless curly braces around statement and then remove useless return keyword (sonar.java.source not set. Assuming 8 or greater.),nit: `cleanerFIleInfoList` -> `cleanerFileInfoList`,          return cleanerPlan.getFilePathsToBeDeletedPerPartition().values().stream().flatMap(cleanerFIleInfoList -> {,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","Sorry this class is so complicated. It's really just a Schema with partner visitor, but that pattern wasn't around when we needed to write this, so I used the custom order visitor. I should eventually go clean these up!",public abstract class FixupTypes extends TypeUtil.CustomOrderSchemaVisitor<Type> {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Is it possible to have List<Serializable[]> in ResultTable instead of current implementation of List<Object[]>? ,          // TODO: Selection uses Serializable[] in all its operations,0
Static non-final field names should comply with a naming convention,"Rename this field ""FILENAME_METADATA_FIELD_POS"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",this could be a separate cleanup task: make constants for all meta fields and adopt them across codebase,  public static int FILENAME_METADATA_FIELD_POS = 4;,0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,Remove it.,  private final String WRONG_OPERAND_MESSAGE =,0
Abstract classes without fields should be converted to interfaces,"Convert the abstract class ""IndexedTableResizer"" into an interface. (sonar.java.source not set. Assuming 8 or greater.)",This seems better to be an interface?,abstract class IndexedTableResizer {,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""photos"" 3 times.","Curious, do we no longer need the credentialFactory? I thought this was for extending lifetime of oauth tokens if the transfer takes too long? ","    exporterBuilder.put(""photos"", new GooglePhotosExporter());",0
String literals should not be duplicated,Use already-defined constant 'LOCAL_JOB_LAUNCHER_TYPE' instead of duplicating its value here.,"Please replace the default value with `JobLauncherFactory.JobLauncherType.LOCAL.toString()`.
","    String jobLauncherType = state.getProp(ConfigurationKeys.JOB_LAUNCHER_TYPE_KEY, ""LOCAL"");",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,And handle if(credentials.getPrincipal() == null),      // TODO add support for authentication via DB token,0
Raw types should not be used,Provide the parametrized type for this generic.,"It seems the return result is always `Map<String, String>`?
It might be better to add generic type.
Map<String, String> getAuthParams() throws AuthException;",    Map getAuthParams() throws AuthException;,1
"Unused ""private"" methods should be removed","Remove this unused private ""parseTemplateMeasurementClause"" method.",this method may be useless,  private void parseTemplateMeasurementClause(,1
"""switch"" statements should have ""default"" clauses",Add a default case to this switch.,"use `write(Column column, int index);` function in `ColumnBuilder` to remove this ugly switch-case.","              switch (dataTypes[j]) {
SwitchEntry                 case BOOLEAN:
ExpressionStmt                   valueColumnBuilders[j].writeBoolean(
MethodCallExpr                       deviceTsBlocks[i].getColumn(j).getBoolean(rowIndex));
BreakStmt                   break;
SwitchEntry                 case INT32:
ExpressionStmt                   valueColumnBuilders[j].writeInt(deviceTsBlocks[i].getColumn(j).getInt(rowIndex));
BreakStmt                   break;
SwitchEntry                 case INT64:
ExpressionStmt                   valueColumnBuilders[j].writeLong(
MethodCallExpr                       deviceTsBlocks[i].getColumn(j).getLong(rowIndex));
BreakStmt                   break;
SwitchEntry                 case FLOAT:
ExpressionStmt                   valueColumnBuilders[j].writeFloat(
MethodCallExpr                       deviceTsBlocks[i].getColumn(j).getFloat(rowIndex));
BreakStmt                   break;
SwitchEntry                 case DOUBLE:
ExpressionStmt                   valueColumnBuilders[j].writeDouble(
MethodCallExpr                       deviceTsBlocks[i].getColumn(j).getDouble(rowIndex));
BreakStmt                   break;
SwitchEntry                 case TEXT:
ExpressionStmt                   valueColumnBuilders[j].writeBinary(
MethodCallExpr                       deviceTsBlocks[i].getColumn(j).getBinary(rowIndex));
BreakStmt                   break;
ExpressionStmt               }",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,How about renaming `DiskFull`?,"  Full(""Full""),",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Do not comment codes.Just remove it,    // dataTypes[index] = null;,1
Lambdas containing only one statement should not nest this statement in a block,Remove useless curly braces around statement and then remove useless return keyword (sonar.java.source not set. Assuming 8 or greater.),"@li36909 This change does not change any logging unlike what the title of the PR says, can you correct the title and explain this change please ?",    props.keySet().stream().filter(prop -> {,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","I am not sure if it's a good design. You make a detailed implementation pull-up into an abstraction. Why? `getInputDateTimeZone` and `getOutputDateTimeZone ` should be abstract method and be pushed down to a sub-class like before. Moreover, you can see it contains if/else block, it is full of changes.

The main benefit of abstract classes is to provide templates for the implementation of some subclasses. Instead of thinking that the default implementation is a template and marking it as an abstract class.

So I think the original design is good. WDYT?",public abstract class AbstractHoodieDateTimeParser implements Serializable {,0
"""public static"" fields should be constant","Make this ""public static rebalancer_type"" field final",tablet_rebalancer_type?,"    public static String rebalancer_type = ""BeLoad"";",0
String literals should not be duplicated,Use already-defined constant 'BROKER_EXTERNAL_VIEW_PATH' instead of duplicating its value here.,"You can reuse the BROKER_EXTERNAL_VIEW_PATH constant to replace String ""/EXTERNALVIEW/brokerResource"" here.","      byte[] brokerResourceNodeData = _zkClient.readData(""/EXTERNALVIEW/brokerResource"", true);",1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Could we change this to MetricsHolder? I don't want to use full name below.,public class Metrics {,0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,"This configuration item must less than 10000, can you impose restrictions on this item","    String DORIS_FILTER_QUERY_IN_VALUE_MAX = ""doris.filter.query.in.value.max"";",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,You shouldn't need to change this class at all. What should be done is to create a `NoDictionaryRealtimeColumnStatistics` instead of `RealtimeColumnStatistics` and build the stats as appropriate when it gets created from `RealtimeSegmentStatsContainer`., * TODO Fix this class after we re-factor segment generation code to get some of the stats later on while going through the values,0
"Mutable fields should not be ""public static""","Make this member ""protected"".","Use include, rather than exclude.","            public static List<String> EXCLUDE_HTTP_HEADERS = Arrays.asList(""cookie"");",0
Static non-final field names should comply with a naming convention,"Rename this field ""ROLE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",I think it is better to set a default value of this. And use enum rather than `enum Role` rather than string.,    private static String ROLE;,0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""lastPair"".","    return TimeValuePair(timestamp, TsPrimitiveType.getByType(dataType, value));","    TimeValuePair lastPair = new TimeValuePair(timestamp, TsPrimitiveType.getByType(dataType, value));
ReturnStmt     return lastPair;",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""ByteArray"" 3 times.","What if I declare two methods: `abc()` (a `Marshallable`) and `abcByteArray()`. Would a collision occur? If yes, we probably need some kind of a validation to avoid confusion.","                MethodSpec baSetter = MethodSpec.methodBuilder(getterName + ""ByteArray"")",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Can you put the rate limit in the error message?,"      throw new RuntimeException(""Server is busy handling create detection requests. Please retry later."");",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"        throw new RuntimeException(""Caught exception while transforming data type for column: "" + column, e);","        throw new RuntimeException(""failed to transform column "" + column, e);",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove this if it is truly unused.,"//      if (StorageEngine.getInstance().countUpgradeFiles() == 0) {
MethodDeclaration //        UpgradeSevice.getINSTANCE().stop();
MethodDeclaration //      }",1
Unused assignments should be removed,"Remove this useless assignment to local variable ""size"".","*UnusedVariable:*  The local variable SimpleName is never read. [(details)](https://errorprone.info/bugpattern/UnusedVariable)
(at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)",            final int size = series.getValues().size();,1
Character classes in regular expressions should not contain the same character twice,Remove duplicates in this character class.,"Could you put a benchmark test case about this REGEX? And put a result in comment? In our experiences, REGEX is powerful, but cause performance issues in many scenarios.","    private static final Pattern URL_REGEX = Pattern.compile(""(?<pref>http(s)?://)*(?<domain>[\\w_.\\-\\d]+(:\\d+)?)?/(?<path>solr/(?<collection>[\\w_]+))?(/.*)?"");",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Shouldn't we uncomment it here?,//      return Status.GOOD;,1
"""switch"" statements should have ""default"" clauses",Add a default case to this switch.,avoid this code duplication if possible,    switch (dimensionType) {,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","`SequentialAndTTLBasedBatchAccumulator` is too verbose. `SequentialBatchAccumulator` is good enough. Usually, asynchronization comes together with timeout. ",public abstract class SequentialAndTTLBasedBatchAccumulator<D> extends BatchAccumulator<D> {,0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",It can be omitted.,    public BrokerFileGroupAggInfo() {,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"I know this is already committed, but a couple of suggestions:
1. Use static final ObjectMapper so no need to new each time.
2. I use objectMapper().writerWithDefaultPrettyPrinter() to make the json output pretty printed.",  public String toJsonString() throws Exception {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""ByteArray"" 4 times.","How about extracting this `getterName + ""ByteArray""` expression as a static method to some util class? It is encountered a few times in at least 2 classes.","                String name = getterName + ""ByteArray"";",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"I suppose we intend to have (eventually) the realtime segment do the ""upload"" step via this method. Let us think through if there are any architectural changes needed for that. We can implement that eventually.","  private SuccessResponse uploadSegment(FormDataMultiPart multiPart, boolean enableParallelPushProtection, HttpHeaders headers, Request request) throws Exception {",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Have a flag to turn off validation by default for query performance?,"    // TODO cleanup
ExpressionStmt     validate(targetFiles, listStatusForSnapshotModeLegacy(job, tableMetaClientMap, snapshotPaths));",0
Boolean checks should not be inverted,"Use the opposite operator (""!="") instead.","For these conflicts, we should indicate the module name of new appending column.","            if (!(mc1.isIndexOnly() == mc2.isIndexOnly())) {
ThrowStmt                 throw new IllegalArgumentException(mc1.getColumnName() + "" and "" + mc2.getColumnName() + "" isIndexOnly conflict in index: "" + physicalName);
IfStmt             }
IfStmt             if (!(mc1.isStorageOnly() == mc2.isStorageOnly())) {
ThrowStmt                 throw new IllegalArgumentException(mc1.getColumnName() + "" and "" + mc2.getColumnName() + "" isStorageOnly conflict in index: "" + physicalName);
IfStmt             }",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Thanks for adding these great unit tests.,  public void testParamsInPostBodyAndStaticParams() throws Exception {,0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""numAddedFiles"".","I think `parseLong` returns a primitive, no need to box it. I'd make it:

    Snapshot snapshot = table.currentSnapshot();
    long numAddedFiles = Long.parseLong(snapshot.summary().get(SnapshotSummary.ADDED_FILES_PROP));
    LOG.info(""Successfully loaded Iceberg metadata for {} files"", numAddedFiles);
    return numAddedFiles;

And make `importDataToIcebergTable` to return a primitive.",      Long numAddedFiles = Long.parseLong(snapshot.summary().get(SnapshotSummary.ADDED_FILES_PROP));,0
"Fields in a ""Serializable"" class should either be transient or serializable","Make ""lock"" transient or serializable.",move this to InternalMNode,  protected ReadWriteLock lock = new ReentrantReadWriteLock();,0
"""entrySet()"" should be iterated when both the key and value are needed","Iterate over the ""entrySet"" instead of the ""keySet"".",Use `.entrySet()` to avoid the extra map lookups on line 312,    for (String prefix : _prefixesToRename.keySet()) {,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,pls add a comment here that even if table is not created succesfully it will be fixed in the next run by validation manager,"      // TODO: validate that table was created successfully (in realtime case, metadata might not have been created)",0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,`PARTITION_ID_SUPPLIER `?,  SparkTaskContextDetailSupplier<Integer> PARTITION_SUPPLIER = () -> TaskContext.getPartitionId();,0
Field names should comply with a naming convention,"Rename this field ""_isNullHandlingEnabled"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","(minor) Rename to `_nullHandlingEnabled`, same for other places",  private boolean _isNullHandlingEnabled;,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,same,"      // rowRecord.addField(info.isTemporary(), TSDataType.BOOLEAN);",0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,innerProp,    Node inner_prop = IR,1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""type"" is nullable here.","interesting, I wonder if this is something that we're expecting to happen. From the code around `typeFromJson(..)` it looks like there shouldn't be a `null` returned. It's probably worth adding a test for this","    Preconditions.checkArgument(type != null && type.isNestedType() && type.asNestedType().isStructType(),",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,why not commit this file after you finishing that?,,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,"catching Exception would be better, since Throwable includes Error too which is better not to be caught.

handle with `Exceptions.printStackTrace`?","        } catch (Throwable ex) {
ExpressionStmt             ex.printStackTrace();",0
"Loops should not contain more than a single ""break"" or ""continue"" statement",Reduce the total number of break and continue statements in this loop to use at most one.,This is a bug?,            continue;,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,consider including some javadocs for this utility class,public class ResourceUtils {,0
"Unused ""private"" fields should be removed","Remove this unused ""WRONG_OPERAND_MESSAGE"" private field.",Remove it.,  private final String WRONG_OPERAND_MESSAGE =,1
Empty arrays and collections should be returned instead of null,Return an empty collection instead of null.,"I haven't thought about it very carefully, but IMO, throw exception in these interface in PlaceHolderPlan may be better",        return null;,0
"Unused ""private"" fields should be removed","Remove this unused ""cachedLastValuePair"" private field.",remove this and its import,  private TimeValuePair cachedLastValuePair = null;,1
Static non-final field names should comply with a naming convention,"Rename this field ""backend_rpc_timeout_ms"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Please add comment for this config and also modify the config document
`admin-manual/config/fe-config.md`",    public static int backend_rpc_timeout_ms = 60000; // 1 min,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",        List<Invoker<T>> copyInvokers = new ArrayList<>(this.invokers);,        List<Invoker<T>> copyInvokers = new ArrayList<Invoker<T>>(this.invokers);,1
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""childDependency"" parameter (sonar.java.source not set. Assuming 8 or greater.)",So the line above expect that there could be allredy pair gav : dependency in the result. In this case the dependency is not put again in the result but the children are recountned anyway. ,            dependency.getChildren().forEach((childDependency) -> {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,add the sequence to the issue. We need to first change servers to use PinotFS to upload directly to the deep store. ,  // TODO: remove this API. Should not upload segment via controller,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,not secure to have this printed to out stream,"    System.out.println(String.format(""Paste this url in your browser:%n%s%n"", authorizeUrl));",1
Unused local variables should be removed,"Remove this unused ""logger"" local variable.",Make the logger a static final field.,    Logger logger = Logger.getLogger(getClass());,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"Do we need printlines?  This is sort of ick.
",        System.out.println(diagnostic);,1
Assignments should not be made from within sub-expressions,Extract the assignment out of this expression.,does sign really matter for month?,        int mon = (date >>= DAY_FIELD_LENGTH) & mask(MONTH_FIELD_LENGTH); // Sign matters.,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""description"" is nullable here.","if both `this.description` AND `test.description` are `null`, the first 2 clauses are false and the 3rd one will NPE. Please use `Objects.equals`.
Possibly the same for `file` test below.",                || !this.description.equals(test.description)) {,1
"Unused ""private"" fields should be removed","Remove this unused ""measurementValues"" private field.","*SameNameButDifferent:*  The name `measurementValues;` refers to [java.lang.SuppressWarnings, lombok.Generated, java.util.List, java.lang.Object] within this file. It may be confusing to have the same name refer to multiple types. Consider qualifying them for clarity. [(details)](https://errorprone.info/bugpattern/SameNameButDifferent)

(at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)",    private List<Object> measurementValues;,0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,"Why are you not making this part of the URL?
",    Attribute<Integer> PUBSUB_CONNECT_TIMEOUT_MILLIS = new Attribute<>(500);,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Please remove commented out code. ,    //assertThat(response.getPagingIdentifiers()).isEmpty();,1
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"We prefer line wrapping that keeps arguments to the same method aligned rather than aligning arguments to different levels. Here, the lambda to create an `InternalRecordWrapper` is an argument to `transform`, but it is aligned with `deleteSchema.asStruct()` that is an argument to the outer `toEqualitySet` call.

Instead, can you add a newline for each argument to `toEqualitySet`? If the line with the lambda is too long, then you can also add a newline for it that it indented from the start of the line with `transform`, so it is clear that it is an argument to `transform` and not `toEqualitySet`.","          record -> new InternalRecordWrapper(deleteSchema.asStruct()).wrap(record)),",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"    Exist, NonExist, Constant","    Normal, NonExist, Const;",0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"    public static ModifyPartitionClause createStarClause(Map<String, String> properties) {","    static public ModifyPartitionClause createStarClause(Map<String, String> properties) {",1
Field names should comply with a naming convention,"Rename this field ""_isTableLevelMetricsEnabled"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",thanks for changing this name ,  private final boolean _isTableLevelMetricsEnabled;,0
Nested blocks of code should not be left empty,Either remove or fill this block of code.,Report a message to the client - may be the DB connection failed ?,            } catch (Exception ex) {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,How difficult would it be?,    // TODO: support case sensitive flags,0
Raw types should not be used,Provide the parametrized type for this generic.,why the variable? ,    Stream<HoodieColumnRangeMetadata<Comparable>> stream = columnToStatsListMap.values(),0
Unnecessary imports should be removed,Remove this unused import 'java.io.IOException'.,remove this?,import java.io.IOException;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Unable to patch Guava classes: {}"" 3 times.",These calls can be wrapped in a small static function,"      logger.warn(""Unable to patch Guava classes: {}"", e.getMessage());",0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,"I notice that this method is marked as deprecated. Is there any need to modify this method? It may be removed in the future,WDYT","    public void send(final Message msg, final SendCallback sendCallback, final long timeout)",1
Field names should comply with a naming convention,"Rename this field ""_jsonStringLength"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",make it final?,  private int _jsonStringLength = 0;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"nit: these are new features and we already mentioned these in the top class javadoc, can we remove the TODOs?",    // TODO add back column encryption keys,1
"Track uses of ""FIXME"" tags",Take the required action to fix the issue indicated by this comment.,How to fix this issue?,        // FIXME: 2018/3/2 ,1
Unused local variables should be removed,"Remove this unused ""time"" local variable.",`time` + `FILE_LOCK_TIMEOUT_MS` is no longer used and can be removed.,            long time = 0;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""0.8.0"" 18 times.","I have an idea, wdyt about setting the `metatable`'s subpath as the default path?","      .sinceVersion(""0.8.0"")",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",I'd remove this class from the SPI.,public abstract class DefaultGradleActionsProvider implements GradleActionsProvider {,0
Return values should not be ignored when they contain the operation status code,"Do something with the ""boolean"" value returned by ""delete"".",You could use `TsFileResource.remove()` which also clean the modification file.,      new File(deletedTsFileResource.getFile().getAbsolutePath() + TsFileResource.RESOURCE_SUFFIX),0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,why is this class needed in `hudi-common`?  markers are strictly used by writing correct,public class MarkerUtils {,0
"""public static"" fields should be constant","Make this ""public static PAGE_LENGTH_DIGIT"" field final",not used,  public static int PAGE_LENGTH_DIGIT = 14;,0
"""InterruptedException"" should not be ignored","Either re-interrupt this method or rethrow the ""InterruptedException"" that can be caught here.","Why sleeping here ?
",        Thread.sleep(1000);,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Is there a way to handle the Parquet case? Just wondering what happens if someone tries to write UUID data with parquet,"        // TODO: This will not work with Parquet. Parquet UUID expect byte[], others are expecting UUID",0
Static non-final field names should comply with a naming convention,"Rename this field ""READ_PROPERTIES_TO_REMOVE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Is this required because of Pig?  If yes, then should this have been fixed in Pig module rather than here?",  private static Collection<String> READ_PROPERTIES_TO_REMOVE = Sets.newHashSet(,0
Nested code blocks should not be used,Extract this nested code block into a method.,Remove this pair of  parentheses,      {,1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",nit: would be better to name the two as preVisitField(...)  & postVisitField(...) ? ,    public void beforeField(Types.NestedField field) {,0
Empty arrays and collections should be returned instead of null,Return an empty collection instead of null.,"Never return `null`! You can use `Collections.emptyList()`.BTW, why not return true `prefixPaths` for `CreateMultiTimeSeriesPlan` ?",    return null;,1
"Unused ""private"" fields should be removed","Remove this unused ""PROP_DIMENSIONS"" private field.",Where it is used?,"  private static final String PROP_DIMENSIONS = ""dimensions"";",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Hi, according to previous design, `checkBufferedArray` is to be done by `ArrayManager` module.

When TSP is asking for one array, it could call `ArrayManager.getDataListByType` (and it is the only interface for asking array). This method will check whether there are enough buffered arrays and return one if true; or apply an out of buffer array and return one if system module agrees; or return null if system module refuses to offer one.

In this way, TSP does not need to know whether the array is buffered or out of buffer. The management of arrays is responsibility of `ArrayManager`. What do you think?",      // TODO: isbufferedArrayEnough = checkBufferedArray();,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""segments"" 6 times.",can you pick a better name,"  RETRY_EXCEEDED_FAILURES(""segments"", false),",0
Local variables should not shadow class fields,"Rename ""writeStatus"" which hides the field declared at line 60.","If you re going to rely on a constructor being called via Reflection, then making `WriteStatus` an interface is not a necessary thing.. Atleast in the subclassing route, you will be forcing the subclass to implement atleast 1 constructor of the same signature as base class

Was this part of @prazanna 's suggestion earlier on?  (given then comment history is nt there now) ",        WriteStatus writeStatus = ReflectionUtils.loadClass(config.getWriteStatusClassName());,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,minor: revert this change?,    } catch (RuntimeException | HiveException | MetaException e) { //TODO-jsbali FIx this,0
Class variable fields should not have public accessibility,Make PATTERN a static final constant or non-public and provide accessors if needed.,Default should be the pattern in the document.,"        public static String PATTERN = """";",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,It's better to point out the specific version number in method name such `recoverCrossCompactionBelow013` and add comments for the method.,  private void recoverCrossCompactionFromOldVersion() throws Exception {,0
Nested blocks of code should not be left empty,Either remove or fill this block of code.,        } catch (Exception e) {,"        } catch (InterruptedException ignored) {
CatchClause         } catch (ExecutionException e) {",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""anomalyFunction"" is nullable here.",should you check anomalyFunction == null here first? Also this treatment of different function ids together feels very arbitrary. ,        if (!anomalyFunction.getIsActive()) {,1
Methods should not have too many parameters,"Method has 8 parameters, which is greater than 7 authorized.","Too much `xxxAvailable` parameter. How about merge them into a struct, maybe like `predicates`?","    public List<Long> seqChooseBackendIdsByStorageMediumAndTag(int backendNum, boolean scheduleAvailable,",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""%s file  is not data"" 5 times.","what is file is not data, is it right sematic?","            throw new AclException(String.format(""%s file  is not data"", fileHome + File.separator + fileName));",0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,        Set<Integer> transformSlotIds = Sets.newHashSet();,        Set<Integer> transform_slot_ids = Sets.newHashSet();,1
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,same thing here.. would anyone override this? ,  protected GenericRecord rewriteRecord(GenericRecord record) {,0
Loops should not be infinite,Add an end condition to this loop.,you probably need something like while (!shuttingDown). See previous comment of adding a call from HelixBrokerStarter,            while(true) {,1
Methods should not have too many parameters,"Method has 11 parameters, which is greater than 7 authorized.",Please add the function annotation  ~,"    private void initAllStructure(Expr conjunct,",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Error happened while getting {} size"" 6 times.",?,"      logger.error(""Error happened while getting {} size"", filePath);",0
Throwable and Error should not be caught,Catch Exception instead of Throwable.,`OverlappingFileLockException` still needs to be retried.,"            } catch (Throwable e) {
CatchClause                 if (e instanceof OverlappingFileLockException) {
CatchClause                     logger.info(""Failed to save registry cache file for file overlapping lock exception, file name "" + file.getName());
CatchClause                 } else {
CatchClause                     throw e;
CatchClause                 }
CatchClause             }",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Can you throw `IOException` here and let the caller to decide what to do?
",      throw new RuntimeException(e);,0
Field names should comply with a naming convention,"Rename this field ""_dictId"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","(minor)
Move this after the final variables for readability",  private int _dictId;,0
Names of regular expressions named groups should be used,Directly use 'collection' instead of its group number.,"Could you put a benchmark test case about this REGEX? And put a result in comment? In our experiences, REGEX is powerful, but cause performance issues in many scenarios.","    private static final Pattern URL_REGEX = Pattern.compile(""(?<pref>http(s)?://)*(?<domain>[\\w_.\\-\\d]+(:\\d+)?)?/(?<path>solr/(?<collection>[\\w_]+))?(/.*)?"");",0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""segmentFetcher"".",We could probably just return _segmentFetcherMap.get(protocol).,    SegmentFetcher segmentFetcher = _segmentFetcherMap.get(protocol);,1
"""public static"" fields should be constant","Make this ""public static cbo_statistics_task_timeout"" field final",nit: add unit in config name,    public static int cbo_statistics_task_timeout = 60;,0
Unused method parameters should be removed,"Remove this unused method parameter ""job"".","Javadoc. This is the schema used for comparison, but that is not entirely clear.
","  private Schema getKeySchema(Job job, Schema newestSchema) throws IOException {",0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"can we try to re-use code across merge handle and this. lines 119 to 133. If incase we need to make some fix in merge handle, we might miss to fix it here. ",        HoodieRecord<T> record = recordItr.next();,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,What about allowing the projection if the the fields are primitives or if the entire struct is projected? That would cover the cases that are currently supported and avoid introducing a new pruning bug to replace the one you're fixing (where nested structs don't match the requested struct schema).,              // TODO Figure this out,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Make it clear TODO what.,      PathFilter pathFilter = new GlobFilter(filter.toString()); // TODO,1
Field names should comply with a naming convention,"Rename this field ""_tableName"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Remove TODO,  private String _tableName;,0
"""java.nio.Files#delete"" should be preferred","Use ""java.nio.file.Files#delete"" here for better messages on error conditions.","Could we use `FileUtils.deleteQuietly`, also is the `exists` check needed? I take it that the `exists()` check is needed in case the delete failed to delete existing directory?",    _resourceTmpDir.delete();,1
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""error"" parameter (sonar.java.source not set. Assuming 8 or greater.)","minor stuff

          asyncClusteringService.get().start(error -> true);",          asyncClusteringService.get().start((error) -> true);,1
Class variable fields should not have public accessibility,Make INJECTION_TAGS a static final constant or non-public and provide accessors if needed.,"        /**
         * Tag the span by the key/value in the correlation context, when the keys listed here exist.
         */
        public static String AUTO_TAG_KEYS = """";","        /**
FieldDeclaration          * Extract tags from the correlation.
FieldDeclaration          */
FieldDeclaration         public static String INJECTION_TAGS = """";",1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"Its not really relevant to this PR, but any reason why this line doesn't use `JobLauncherFactory`
",      System.err.println(je.toString());,0
Unnecessary imports should be removed,Remove this unused import 'lombok.AllArgsConstructor'.,Is this used?,import lombok.AllArgsConstructor;,1
Class variable fields should not have public accessibility,Make DEFAULT_NONADDITIVE_BUCKET_SIZE a static final constant or non-public and provide accessors if needed.,"why can't we get this from collection schema -> timegranularity
",  public static int DEFAULT_NONADDITIVE_BUCKET_SIZE = 5;,0
"Parsing should be used to convert ""Strings"" to primitives","Use ""Boolean.parseBoolean"" for this string-to-boolean conversion.","This property should be documented in _arch.xml_ file as `group=""systemproperty""`.","    private static volatile boolean indexingEnabled = Boolean.valueOf(System.getProperty(""org.netbeans.modules.groovy.editor.api.indexingEnabled"", ""true""));",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",java docs please. ,"public abstract class AbstractClusteringClient<T extends HoodieRecordPayload, I, K, O> implements Serializable {",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",Modify the comment of this class,"public abstract class Policy implements Writable, GsonPostProcessable {",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Would be good to have some javadocs here
",public final class PathUtils {,0
Ternary operators should not be nested,Extract this nested ternary operation into an independent statement.,minor: can we reuse `expressionFieldPath` instead of obtaining `ref().name()` again? ,      caseSensitive ? struct.field(ref().name()) : struct.caseInsensitiveField(ref().name());,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,unused comments should be deleted then,//  private double forkedUnSeqListMeasurementSize = 0;,1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"I recommend adding some backoff sleep strategies for retry, such as a slight sleep of 100ms, otherwise the retry is likely to fail again. BTW, you can abstract the retry logic into one place, see [example](https://carlosbecker.com/posts/exponential-backoff-java8/). Of course, this work can be optimized later, so please add at least one TODO",  private static final int retryNum = 5;,0
Field names should comply with a naming convention,"Rename this field ""_rowsArray"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(nit): should be final,  private JsonNode _rowsArray;,0
Double Brace Initialization should not be used,Use another way to initialize this instance.,Does this mean there is a logger per extension?,                    return new Logger() {{,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment., this method should not be deprecated :-),      // TODO: what happens to this method? below method is deprecated,0
Boxing and unboxing should not be immediately reversed,"Remove the boxing to ""Double"".",Same as above.,				return Double.valueOf(100 * (busytime) / (busytime + idletime)).doubleValue();,0
"""public static"" fields should be constant","Make this ""public static BEAN_NAME"" field final",Should it be change to `dubboConfigBeanInitializer`?,"    public static String BEAN_NAME = ""dubboConfigInitializer"";",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,seems weird as they use different naming style...,  ApplyConfigNode,1
Unused assignments should be removed,"Remove this useless assignment to local variable ""!unknown!"".","OK, using a builder is a good idea from [evolution perspective](http://wiki.apidesign.org/wiki/Evolution). Builder pattern is easily extensible.",                    CompletionUtilities.CompletionItemBuilder builder = CompletionUtilities.newCompletionItemBuilder(name),0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Fix indention.,	OSStatus status2 = SecItemDelete((CFDictionaryRef) query);,0
Raw types should not be used,Provide the parametrized type for this generic.,      List<Integer> sortedArray = new ArrayList<>();,      List<Integer> sortedArray = new ArrayList();,1
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),`The number of currently rebalanced keys for the whole cache group`,"            () -> rebalanceFut.rebalancingReceivedKeys.get(), ""Number of already rebalanced keys."");",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Senior Management"" 28 times.","    builder.field(""binary_field"", ""Senior Management"".getBytes());","    builder.field(""binary_filed"", ""Senior Management"".getBytes());",0
"Track uses of ""FIXME"" tags",Take the required action to fix the issue indicated by this comment.,"For BYTES, you need to store ByteArray in the Record. I think the current code stores byte[]",        comparable = (Comparable) keyColumn; // FIXME: is this the right way to get Comparable? will it work for BYTES?,0
Methods and field names should not be the same or differ only by capitalization,"Rename field ""count"" to prevent any misunderstanding/clash with field ""COUNT"" defined on line 34.","We have `getter`, why need `protected?",    protected long count;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""title"" 3 times.",@lianjunwei please give a default `title` value.,"        final String title = Optional.ofNullable(docRoot.getJSONObject(""info"")).map(jsonObject -> jsonObject.getString(""title"")).orElse("""");",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""\"" doesn't correspond to any known time series"" 3 times.",It will be nicer if you can extract this kind of exception into a separate Exception class.,"                  ""Path: \"""" + path + ""\"" doesn't correspond to any known time series"");",0
Field names should comply with a naming convention,"Rename this field ""_mode"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Consider making `_mode` default to `FULL` and `_hashFunction` default to `NONE`, which is the most common setup and these 2 fields cannot be `null`",  private Mode _mode;,0
Field names should comply with a naming convention,"Rename this field ""RAMSize"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",    private long ramSize;,    private long RAMSize;,1
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,Shall we deprecate these methods?,"  public static List<DataFile> listPartition(SparkPartition partition, PartitionSpec spec,",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Can you create an issue? The sequnce should be that we change the server first, and in the following release, remove the API",  // TODO: remove this API. Should not allow committing without metadata,1
Field names should comply with a naming convention,"Rename this field ""AbstractChunkReader"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",The first letter of the variable should be lowercase.,  private AbstractChunkReader AbstractChunkReader;,1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,Please add /** {@inheritDoc} */,            @Override public void apply(IgniteFuture<T> IgniteFuture) {,0
"Unused ""private"" fields should be removed","Remove this unused ""retryMaxCount"" private field.",So what is the meaning of these two variables (and the config items) in your implementation?,"  private final int retryMaxCount;
FieldDeclaration   private final int retryWaitTimeMs;",1
Raw types should not be used,Provide the parametrized type for this generic.,I think `LinkedList` is better choice for performance.,        List result = new ArrayList();,0
Unused method parameters should be removed,Remove these unused method parameters.,"I don't like our naming conventions with this ""number-suffix"" rule. What do you think about `doVisitLeaf` name?","    protected T visitLeafNode0(String key, Serializable val) {",0
Using publicly writable directories is security-sensitive,Make sure publicly writable directories are used safely here.,call cleanupDir() instead?,    File specStoreDir = new File(TEST_SPEC_STORE_DIR);,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,how about use log to replace system.out,"        System.out.println(""rule data removed: name = "" + ruleData.getName());",1
Nested blocks of code should not be left empty,Either remove or fill this block of code.,"IMO, print some exception message maybe a good choice.",        } catch (InterruptedException ignored) {,0
"""@Deprecated"" code should not be used","Remove this use of ""SCHEMA_CHANGE""; it is deprecated.","This is meaningless.
Because every time you set the state to `COMPACTION_TOO_SLOW`, you also set replica `isBad` to `true`.
I think we can only set replica's state to `COMPACTION_TOO_SLOW`, and change logic in `replica.isAlive()`.",            return this == NORMAL || this == SCHEMA_CHANGE || this == ALTER || this == COMPACTION_TOO_SLOW;,0
"""switch"" statements should have at least 3 ""case"" clauses","Replace this ""switch"" statement by ""if"" statements to increase readability.","Please consider K8sRetagType as an interface implementation. Then you could have `type.cover(param1, param2)` directly, rather than this switch case and throw an exception in the runtime.","        switch (type) {
SwitchEntry             case Pod2Service:
ReturnStmt                 return SampleFamily.build(this.context, K8sRetagOps.pod2Service(samples, newLabelName, existingLabelName));
SwitchEntry             default:
ThrowStmt                 throw new UnsupportedOperationException(
BinaryExpr                     ""Unsupported type: "" + type + "" in retagByK8sMeta() "" + this.toString());
MethodDeclaration         }
MethodDeclaration     }",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"can you help me understand, why do we have 2 keyGen factories? 
And I see sparkKeyGenFactory uses AvorKeyGenFactory to intialize keyGen and if its null, proceeds to initialize by its own. whats the case where avro key gen factory will not work, but spark key gen would work?  I could not find much diff between both key gen. may be I am missing something. ",public class HoodieSparkKeyGeneratorFactory {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""SELECT begin_lat, begin_lon, driver, end_lat, end_lon, fare, partitionpath, rider, ts, uuid FROM hudi_ro_table"" 7 times.","if repeating, declare a constant and re-use 
`SELECT begin_lat, begin_lon, driver, end_lat, end_lon, fare, partitionpath, rider, ts, uuid FROM hudi_ro_table` 
","    Dataset<Row> beforeDelete = spark.sql(""SELECT begin_lat, begin_lon, driver, end_lat, end_lon, fare, partitionpath, rider, ts, uuid FROM hudi_ro_table"");",1
Local variables should not shadow class fields,"Rename ""memSerializeTime"" which hides the field declared at line 64.",You should use class variable `memSerializeTime` rather than this local variable ,      long memSerializeTime = 0;,1
Throwable and Error should not be caught,Catch Exception instead of Throwable.,"Don't use catch, just try/finally, please.","        } catch (Throwable e){
ExpressionStmt             LOGGER.warn(""resttemplate plugin has error: "", e);",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,minor: remove this comment,      //updateHiveSQLUsingHiveDriver(s);,1
Only static class initializers should be used,Move the contents of this initializer to a standard constructor or to field initializers.,"Creating a map per method could be too much overhead. Suggest keeping the old way but just add `BIG_DECIMAL` into the picture
    if (left == BIG_DECIMAL || right == BIG_DECIMAL) {
      return BIG_DECIMAL;
    }
    ...",    Set<FieldSpec.DataType> dataTypes = new HashSet<FieldSpec.DataType>() {{,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Use logger.,        e.printStackTrace();,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Good catch, this is a bug. Can you directly fix it by changing it to `dictionary.readBytesValues(dictIds, length, _byteValuesSV);`","      // todo: In the line below, _intValuesSV is populated but not returned! This is most likely a bug.",0
"Unused ""private"" fields should be removed","Remove this unused ""enableContinuousCompaction"" private field.",remove the field as the field is never used in this file,  private final boolean enableContinuousCompaction = IoTDBDescriptor.getInstance().getConfig(),1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Commented code,"            //statRepo.saveLocalPartitionStatistics(key, partStat);",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal "". Record: "" 4 times.","Can you log data type here as well? or log the key as you do below, since that should include job ID and data type","          ""Could not create initial record for jobID: "" + jobId + "". Record: "" + entity, e);",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal "" sec reached. Aborting"" 4 times.",same here,"        throw new TimeoutException(""Timeout of "" + timeout + "" sec reached. Aborting"");",0
Methods and field names should not be the same or differ only by capitalization,"Rename field ""REGEX"" to prevent any misunderstanding/clash with field ""regex"" defined on line 36.","So, is this path filter only used to filter source datasets?
I can see that we specify the class using gobblin.dataset.path.filter.class . It could make sense to have the same ""gobblin.dataset"" prefix for this setting for consistency.

Also, it could be better to keep those config settings together, so that they would be easily discovered.

Usually, they land up in ConfigKeys class, but I can see that bunch of keys are defined in DatasetUtils. You can try to figure out if there is any reason to keep them there.","  public static final String REGEX = ""path.filter.regex"";",0
Static non-final field names should comply with a naming convention,"Rename this field ""rebalance_move_expire_after_access"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","If only valid for PartitionRebalancer, the name would better add a partition prefix.",    public static long rebalance_move_expire_after_access = 600; // 600s,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"maybe introduce the new key, update the docs, and deprecate the old one?",    // TODO: Rename the config key,1
Throwable and Error should not be caught,Catch Exception instead of Throwable.,"There is no problem in other places, that is, the catch is used here, and I see that the sofa test in the log will make an error. I suggest to solve the problem of the plug-in first and then merge the pr.",        } catch (Throwable e) {,0
Lambdas containing only one statement should not nest this statement in a block,Remove useless curly braces around statement (sonar.java.source not set. Assuming 8 or greater.),So the line above expect that there could be allredy pair gav : dependency in the result. In this case the dependency is not put again in the result but the children are recountned anyway. ,            dependency.getChildren().forEach((childDependency) -> {,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"I feel there is another choice of passing this information back: instead of throwing exception, we can return normally, but the returned message has the worker failure information. WDYT?","      throw new RuntimeException(String
StringLiteralExpr           .format(""There were %d workers failed to report task progress. Got partial progress info: %s"",
FieldAccessExpr               serviceResponse._failedResponseCount, subtaskProgressMap));",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""SELECT begin_lat, begin_lon, driver, end_lat, end_lon, fare, partitionpath, rider, ts, uuid FROM hudi_ro_table"" 7 times.",this might need some fixes. consider all error paths. ,"    assert spark.sql(""SELECT begin_lat, begin_lon, driver, end_lat, end_lon, fare, partitionpath, rider, ts, uuid FROM hudi_ro_table"").except(insertQueryDataIn).except(updateQueryDataIn).count() == 0;",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,exceptions should not be ignored in unit test cases,            e.printStackTrace();,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,delete this.,"    //    if (statistics == null
ReturnStmt     //        || (statistics.getStartTime() == Long.MAX_VALUE
ReturnStmt     //            && statistics.getEndTime() == Long.MIN_VALUE)) {
ReturnStmt     //      return false;
ReturnStmt     //    }",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"              throw new RuntimeException(""Caught exception while generating segment from file: "" + dataFiles.get(sequenceId), e);","              final String exceptionMessage = String.format(""%s. File: %s"", e.getMessage(), dataFiles.get(sequenceId));
ThrowStmt               throw new Exception(exceptionMessage, e);",1
"Constructors should not be used to instantiate ""String"", ""BigInteger"", ""BigDecimal"" and primitive-wrapper classes","Remove this ""Integer"" constructor","`Integer.valueOf(min)`, not `new Integer`. Same for other object allocations.",    _minValue = new Integer(min);,1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",I feel we can just make it Spark free for now.. Multi-engine can be dealt with separately..? ,"public abstract class AbstractConfig<T> {
FieldDeclaration   protected Properties props;
ConstructorDeclaration   public AbstractConfig(Properties props) {
ExpressionStmt     this.props = props;
MethodDeclaration   }
MethodDeclaration   public abstract long getMaxMemoryAllowedForMerge(String maxMemoryFraction);
MethodDeclaration   public abstract T getWriteStatusStorageLevel();
MethodDeclaration   public abstract T getBloomIndexInputStorageLevel();",0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,What's up with this formatting,	private final int       ALBUM_MAX_SIZE						= 5000;,0
Field names should comply with a naming convention,"Rename this field ""_maxRid"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","(nit) We usually use `_numDocs`. It is currently exclusive, which can possibly cause confusion",  private final long _maxRid;,0
Using hardcoded IP addresses is security-sensitive,Make sure using this hardcoded IP address is safe here.,can this port be dynamic?,"@LocalstackDockerProperties(services = {ServiceName.KINESIS}, portEdge = ""4591"", environmentVariableProvider = RealtimeKinesisIntegrationTest.HostnameEnvProvider.class, imageTag = ""0.13.0.10"")",0
"Unused ""private"" fields should be removed","Remove this unused ""retryTimes"" private field.","This field can be deleted

",        private int retryTimes = 0;,1
Field names should comply with a naming convention,"Rename this field ""_groupKeyForNullValue"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Do we need to handle the null group in the aggregation function? It will make aggregation function hard to implement. I think we should be able to identify and skip the null groups in the group-by executor,  private Integer _groupKeyForNullValue = null;,0
Collection.isEmpty() should be used to test for emptiness,Use isEmpty() to check whether the collection is empty or not.,"I think it's a little bit complicated. How about
    if (cache.size() != 0) {
      cache.remove(0);
    }
What's more, I think it's better not to split `RemoveObjectIfCacheIsFull` into two methods.","    if (cache.size() == 0) {
ReturnStmt       return;
ExpressionStmt     }
ExpressionStmt     String deviceId = cache.iterator().next();
ExpressionStmt     cache.remove(deviceId);",0
Child class methods named for parent class methods should be overrides,"Rename this method; there is a ""private"" method in the parent class with the same name.","I don't think synchronized is necessary based on how this class is used and the thread-safety of the parent class. Synchronization here doesn't buy us anything because it only guards the method itself, not the `inferCaller` check elsewhere (which isn't volatile, nor do I think it should be) so it would only prevent additional concurrent calls from running in parallel.",    private synchronized void inferCaller() {,0
Anonymous inner classes containing only one method should become lambdas,Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.),"if `srcLogFile` is deleted, or the job that generates `srcLogFile` has finished, is there a way to remove the Runnable from schedule, or is it scheduled forever?
",      this.logCopyExecutor.scheduleAtFixedRate(new Runnable() {,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Are these codes useful or not?,//  },1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"two things:
first, surprised there's no interface declaration, as is typical so different implementions of the factory could be used interchangeably.
second, not a big deal, but the method name and return type names usually match, whereas the specific instance type (created) might match the class name (granted, more considerations when a common interface is being implemented).","public class GobblinHelixManagerFactory {
MethodDeclaration   public static HelixManager getZKHelixManager(String clusterName, String instanceName,
BlockStmt       InstanceType type, String zkAddr) {
ReturnStmt     return new GobblinZkHelixManager(clusterName, instanceName, type, zkAddr);",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,We use the one from the new snapshot so that the timestamps all match. Do you think we should change that?,        //TODO: should this be System.currentTimeMillis(),0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,"Change it to `r2.response`, as we can't assume the parent namespace?","  private final String R2_RESPONSE_EVENT_NAMESPACE = ""gobblin.http.r2.response"";",0
Boolean expressions should not be gratuitous,"Remove this expression which always evaluates to ""true""","this line seems way too long to me, did you apply style file in your IDE ? ",    } else if(partitionEpochTime < previousWatermark && partitionDateTime.toLocalDate().equals(getDateFromEpochMillis(previousWatermark))) {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,I thought usage of the minimum should be in this ticket (according to the ticket description),                //TODO IGNITE-17302 Use miniumum from mv storage and tx state storage.,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""that"" is nullable here.",Revert the changes in this file since it is not related,"    return EqualityUtils.isEqual(_name, that._name) && EqualityUtils.isEqual(_dataType, that._dataType)",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,This is already implemented. You may rebase the latest master,        //TODO: Implement MV FixedByte Forward Index reader,1
Unused method parameters should be removed,"Remove this unused method parameter ""meterService"".",*MissingOverride:*  send overrides method in MeterSender; expected @Override,"    public void send(Map<MeterId, BaseMeter> meterMap, MeterService meterService) {",0
Class variable fields should not have public accessibility,Make PARALLELS_THREAD_COUNT a static final constant or non-public and provide accessors if needed.,`PARALLELS_THREAD_COUNT` -> `MAX_PARALLEL`,        public static int PARALLELS_THREAD_COUNT = 5;,0
Names of regular expressions named groups should be used,Directly use 'collection' instead of its group number.,"Could you put a benchmark test case about this REGEX? And put a result in comment? In our experiences, REGEX is powerful, but cause performance issues in many scenarios.","    private static final Pattern URL_REGEX = Pattern.compile(""(?<pref>http(s)?://)*(?<domain>[\\w_.\\-\\d]+(:\\d+)?)?/(?<path>solr/(?<collection>[\\w_]+))?(/.*)?"");",0
Field names should comply with a naming convention,"Rename this field ""PHOTO_TITLE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",these constants can be static final,"  private String PHOTO_TITLE = ""Model photo title"";",0
Two branches in a conditional structure should not have exactly the same implementation,This branch's code block is the same as the block for the branch on line 163.,same as above,"          } else if (absExtVal.compareTo(absCurrentValue) == 0
BinaryExpr               && extVal.compareTo(currentValue) > 0) {
ExpressionStmt             extVal = currentValue;",0
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,Please use `Connection connection = EnvFactory.getEnv().getConnection();` instead.,"                Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");",1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,You may just use `Queue.poll()`,        File tmp_file = ((LinkedList<File>) tmp).pollFirst();,0
Raw types should not be used,Provide the parametrized type for this generic.,"avoid using raw type of Map and BTW, if you mean to design this class as thread safe, it's better not to return the underlying map outside.",  public Map getTable() {,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Since we have a stats history file, it will pick up from all the segments and average it out.",    // TODO: allow multiple segments. What would that mean for the memory calculations?,0
"Boxed ""Boolean"" should be avoided in boolean expressions",Use the primitive boolean expression here.,"This is not generic for all functions, so it does not make sense to do this type of speedup for all. 

1. please add more inline comments to state why you choose these SimpleName configurations and when it should be used.
2. when you do speedup this way for multiple functions, you have even stronger assumption here for your input, which should be explained in java doc.",        if (speedup) {,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",private here and below,  volatile List<Buffer> _buffers = new ArrayList<Buffer>();,0
Class variable fields should not have public accessibility,Make TRACE_SQL_PARAMETERS a static final constant or non-public and provide accessors if needed.,"Add these configs to documentations, otherwise, nobody can find this feature until they read the source codes","            public static boolean TRACE_SQL_PARAMETERS = true;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, limit the max number of parameter
FieldDeclaration              */
FieldDeclaration             public static int SQL_PARAMETERS_MAX_COUNT = 20;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, SkyWalking won't save the entire parameters string into the tag, but only
FieldDeclaration              * the first {@code SQL_PARAMETERS_MAX_LENGTH} characters.
FieldDeclaration              *
FieldDeclaration              * Set a negative number to save the complete parameter string to the tag.
FieldDeclaration              */
FieldDeclaration             public static int SQL_PARAMETERS_MAX_LENGTH = 512;",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"I'd love to see a comment, not only a link. What's supposed to be done here?",    // TODO: https://issues.apache.org/jira/browse/IGNITE-16350,0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,You may just remove this method.,"  public void updateTime(String deviceId, long time) {",1
"""InterruptedException"" should not be ignored","Either re-interrupt this method or rethrow the ""InterruptedException"" that can be caught here.","not pressing, but equivalent:
if (planningJobIdFromStore.map(id -> !canRun(id, planningJobHelixManager)).getOrElse(false)) {","        if (planningJobIdFromStore.isPresent() && !canRun(planningJobIdFromStore.get(), planningJobHelixManager)) {",0
Printf-style format strings should be used correctly,String contains no format specifiers.,same as above,"      ret.append(String.format(""Region Replica set has not set.\n""));",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,`No need to scan values when filtering with inverted index`,    // TODO: explain why there is no entries scanned in this filter.,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,why?,        // TODO type here may be incorrect,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Is getFolderId the right method to replace this? Based on the name I would think mediaType wouldn't correspond with folderId,  // TODO(zacsh) remove this in favor of getFolderId,0
"Unused ""private"" fields should be removed","Remove this unused ""score"" private field.",score rule should be added as comments.,    private int score;,0
"Unused ""private"" fields should be removed","Remove this unused ""period"" private field.","default is 5, unit? If unit=second, I think it is too short for timeout, try 30 for configuration center, because in most case, people don't treat performance and latency very seriously for it.",    private int period = 5;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""%s file not found or empty"" 3 times.","""the xxx file  **is** not found or empty "" seems better.","            throw new AclException(String.format(""%s file not found or empty"", fileHome + File.separator + fileName));",0
"Unused ""private"" methods should be removed","Remove this unused private ""getLLCRealtimeTableFlushSize"" method.","Looks like this method is not being used anymore, can we remove it?",  private int getLLCRealtimeTableFlushSize(TableConfig tableConfig) {,1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","Ditto.
",    List<Metric> metrics = new ArrayList<Metric>();,0
"""switch"" statements should have at least 3 ""case"" clauses","Replace this ""switch"" statement by ""if"" statements to increase readability.",How about using if-else here?,"      switch (type) {
SwitchEntry         case TEXT:
ReturnStmt           return new DictionaryEncoder();
SwitchEntry         default:
ThrowStmt           throw new UnSupportedDataTypeException(""DICTIONARY doesn't support data type: "" + type);
MethodDeclaration       }",1
Unused local variables should be removed,"Remove this unused ""checkRealtimeFreshness"" local variable.","This condition checks are confusing. 
The first condition checks if a valid realtimeFreshness is set or not. The second condition checks if both checks are enabled and warns saying it will choose freshness based checker over offset based checker. 

so, if my config has offsetBasedConsumptionStatusChecker = true, freshnessBasedConsumptionStatusCheckerEnabled = true and realtimeMinFreshness = -50, the logs will be very confusing. 

It seems simpler to do this: if both are setup, choose freshness based check and use default freshness value if the minFreshness is not configured correctly. Also, the check for the correct config value can be moved further down Line 298 `if (isFreshnessStatusCheckerEnabled) { `

nit: the boolean `checkRealtimeFreshness` is unused



","    if (isFreshnessStatusCheckerEnabled && realtimeMinFreshnessMs <= 0) {
ExpressionStmt       LOGGER.warn(""Realtime min freshness {} must be > 0. Will not setup freshness based checker."", realtimeMinFreshnessMs);
IfStmt     }
IfStmt     if (isFreshnessStatusCheckerEnabled && isOffsetBasedConsumptionStatusCheckerEnabled) {
ExpressionStmt       LOGGER.warn(""Offset and Freshness checkers both enabled. Will only setup freshness based checker."");
ExpressionStmt     }
ExpressionStmt     boolean checkRealtimeFreshness = realtimeMinFreshnessMs > 0;",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Let's add JIRA ticket tracking tihs TODO., * TODO implement partitioner for SIMPLE BUCKET INDEX,1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",Why this?,"    public void produce(LogData logData) {
MethodDeclaration     }",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,are you planning on addressing this for this pr?,    // TODO: state should be moved to path or form parameter,1
Overriding methods should do more than simply call the same method in the super class,Remove this method to simply inherit it.,remove this.,    public boolean nullable() throws UnboundException {,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Timeout of "" 4 times.",same,"        throw new TimeoutException(""Timeout of "" + timeout + "" sec reached. Aborting"");",0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""copy"".","Does this just change formatting? If so, please revert it.","          ByteBuffer.wrap(((ByteBuffer) o).array(), ((ByteBuffer) o).arrayOffset(), ((ByteBuffer) o).limit());",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,TODO with no ticket.,        // TODO varlen types,1
Field names should comply with a naming convention,"Rename this field ""_schemaMap"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",I don't think this is needed. _schemaColumnMap should be enough.,"    Map<String, Schema> _schemaMap = new ConcurrentHashMap<>();",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Metastorage not ready. Node not started?"" 3 times.",This is unnecessary,"        A.notNull(metastorage, ""Metastorage not ready. Node not started?"");",1
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),What is this for?,    localMetaMember.getAppendLogThreadPool().submit(() -> localMetaMember.processEmptyContentLog());,1
Try-with-resources should be used,"Change this ""try"" to a try-with-resources. (sonar.java.source not set. Assuming 7 or greater.)","Please specify Charset.forName(ConfigurationKeys.DEFAULT_CHARSET_ENCODING).
",        scriptWriter = closer.register(new BufferedWriter(new OutputStreamWriter(fs.create(dumpScript))));,0
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,"Wow, why does it have to be so complicated?",        String fake = IntStream.generate(() -> ThreadLocalRandom.current().nextInt()),0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,`STAGE_ID_SUPPLIER `?,  SparkTaskContextDetailSupplier<Integer> STAGE_SUPPLIER = () -> TaskContext.get().stageId();,0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,"The method is names as `getNullableColumnReader`, so why the returned type is not `NullableColumnReader` anymore?","  public static ColumnReader<?> getNullableColumnReader(ParquetRecordReader parentReader,",0
Unused assignments should be removed,"Remove this useless assignment to local variable ""sanitizedName"".","You can define `""[\\s/]""` as a constant. Please also put an empty space before `""_""`.
","      String sanitizedName = field.name().replaceAll(""[\\s/]"",""_"");",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,add a fail();,      e.printStackTrace();,0
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""status"" parameter (sonar.java.source not set. Assuming 8 or greater.)",Would nt a better strategy be to just list the `.hoodie` folder for marker files? I feel we are listing the entire table and then throwing it away? ,"    processFiles(fs, markerDir, (status) -> {",0
Using hardcoded IP addresses is security-sensitive,Make sure using this hardcoded IP address is safe here.,What's `8.8.8.8` ?,"      s.connect(InetAddress.getByName(""8.8.8.8""), 10002);",1
Unused local variables should be removed,"Remove this unused ""type"" local variable.","the type is not used, we should  use the type to init authorType?",    int type = buffer.getInt();,1
Methods should not have too many parameters,"Constructor has 10 parameters, which is greater than 7 authorized.",i think it is better to use a new PR to submit the feature about RelationId,"    public PhysicalOlapScan(OlapScanNodeId id, OlapTable olapTable, List<String> qualifier, long selectedIndexId,",0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",":+1: 
There might be other things that belong in this list but none come to mind immediately.
","      new HashSet<String>(Arrays.asList(new String[] { ""reportUnknownTypes"" }));",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""temp"" is nullable here.",if temp is null how to invoke isStorageLevel() function?,      if (temp == null && temp.isStorageLevel()) {,0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,Should this be `private`?,"  protected static Map<? extends Number, Long> getValueMap(AggregationResultHolder aggregationResultHolder,",0
"""String#replace"" should be preferred to ""String#replaceAll""","Replace this call to ""replaceAll()"" by a call to the ""replace()"" method.","*[UNSAFE_HASH_EQUALS](https://find-sec-bugs.github.io/bugs.htm#UNSAFE_HASH_EQUALS):*  Unsafe comparison of hash that are susceptible to timing attack

---

<details><summary><b>ℹ️ Learn about @sonatype-lift commands</b></summary>

You can reply with the following commands. For example, reply with ***@sonatype-lift ignoreall*** to leave out all findings.
| **Command** | **Usage** |
| ------------- | ------------- |
| `@sonatype-lift ignore` | Leave out the above finding from this PR |
| `@sonatype-lift ignoreall` | Leave out all the existing findings from this PR |
| `@sonatype-lift exclude <file\|issue\|path\|tool>` | Exclude specified `file\|issue\|path\|tool` from Lift findings by updating your config.toml file |

**Note:** When talking to LiftBot, you need to **refresh** the page to see its response.
<sub>[Click here](https://github.com/apps/sonatype-lift/installations/new) to add LiftBot to another repo.</sub></details>



---

Was this a good recommendation?
[ [? Not relevant](https://www.sonatype.com/lift-comment-rating?comment=337681253&lift_comment_rating=1) ] - [ [? Won't fix](https://www.sonatype.com/lift-comment-rating?comment=337681253&lift_comment_rating=2) ] - [ [? Not critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=337681253&lift_comment_rating=3) ] - [ [? Critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=337681253&lift_comment_rating=4) ] - [ [? Critical, fixing now](https://www.sonatype.com/lift-comment-rating?comment=337681253&lift_comment_rating=5) ]","            if (existRule.toShardingRuleSQL().equals(shardingRuleSQL.replaceAll(""\"""", """"))) {",0
Boolean literals should not be redundant,Remove the unnecessary boolean literals.,`val == FALSE ? false : true` -> `val == TRUE` ?,                cache.enableStatistics(val == FALSE ? false : true);,1
"""public static"" fields should be constant","Make this ""public static backend_rpc_timeout_ms"" field final","Please add comment for this config and also modify the config document
`admin-manual/config/fe-config.md`",    public static int backend_rpc_timeout_ms = 60000; // 1 min,0
"Classes from ""sun.*"" packages should not be used",Use classes from the Java API instead of Sun classes.,Can javax.lang.model.element.Name be used here? ,        com.sun.tools.javac.util.Name leftTreeName = null;,1
Unused method parameters should be removed,"Remove this unused method parameter ""resource"".",remove unused `resource `,"      MergeResource resource, TsFileSequenceReader tsFileReader, List<Chunk>[] ret) throws IOException {",1
"Array designators ""[]"" should be on the type, not the variable",Move the array designator from the variable to the type.,Should use proper parameter names because it is not easy to understand what `arr` and `li` mean.,"        static private ExpressionTree buildTree(String arr[], int li, TransformationContext ctx) {",0
Unused method parameters should be removed,"Remove this unused method parameter ""ignore"".",Maybe an useless parameter,        private FileObject getJar(boolean ignore) {,1
"Loops should not contain more than a single ""break"" or ""continue"" statement",Reduce the total number of break and continue statements in this loop to use at most one.,(nit) redundant,          continue;,0
Jump statements should not be redundant,Remove this redundant jump.,Here `continue` is unnecessary.,          continue;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""%s should be set to %s"" 6 times.","To clarify, is this to make sure the properties loaded from the file matches what's in the write config after config resolution?","    ValidationUtils.checkArgument(config.inlineClusteringEnabled() == clusteringConfig.isInlineClusteringEnabled(),
MethodCallExpr         String.format(""%s should be set to %s"", INLINE_CLUSTERING.key(), clusteringConfig.isInlineClusteringEnabled()));
ExpressionStmt     ValidationUtils.checkArgument(config.isAsyncClusteringEnabled() == clusteringConfig.isAsyncClusteringEnabled(),
MethodCallExpr         String.format(""%s should be set to %s"", ASYNC_CLUSTERING_ENABLE.key(), clusteringConfig.isAsyncClusteringEnabled()));",0
Resources should be closed,"Use try-with-resources or close this ""FileInputStream"" in a ""finally"" clause.","stream should try(),  or close in finally.",    FileInputStream inputStream = new FileInputStream(dataFile);,1
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.tsfile.read.common.BatchData'.,Remove unused import,import org.apache.iotdb.tsfile.read.common.BatchData;,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Do we expect more classes for this interface? What else may they be doing? Looks to me that this method is pretty specific and does not warrant an interface unless I am missing something. Is the unzippedSegmentDir expected to be used as a tempDir? Or, is it that the method uses ONE of tarred file or unzippedsegmentdir to extract metadata? Some javadocs are needed, esp. if this is to be an interface.","  SegmentMetadata extractMetadata(File tarredSegmentFile, File unzippedSegmentDir) throws Exception;",0
Class variable fields should not have public accessibility,Make yarn_client_path a static final constant or non-public and provide accessors if needed.,@ConfField,"    public static String yarn_client_path = PaloFe.DORIS_HOME_DIR + ""/lib/yarn-client/hadoop/bin/yarn"";",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""db"" is nullable here.",        long quota = stmt.getQuota();,        long quota = (quotaType == QuotaType.DATA ? db.getDataQuota() : db.getReplicaQuota());,0
Unnecessary imports should be removed,Remove this unused import 'java.util.Objects'.,redundant,import java.util.Objects;,1
"Unused ""private"" methods should be removed","Remove this unused private ""getRandomGenerate"" method.",We do not call this private method?,  private CandidateGenerator getRandomGenerate() {,1
Field names should comply with a naming convention,"Rename this field ""_dataSink"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",size of queue should be configurable with a default value,  protected LinkedBlockingDeque<T> _dataSink = new LinkedBlockingDeque<>(2000);,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",Use interface `MonitoringList` instead of an implementation class,"    @Nullable private volatile MonitoringListImpl<IgniteUuid, ServiceView> svcsMonList;",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,nit: how about including Converter somewhere in the name of this class?,public class GoogleContactToVCard {,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove this,"            MetaUtils.getStorageGroupNameByLevel(path, config.getDefaultStorageGroupLevel());
CatchClause //        try {
CatchClause           setStorageGroup(storageGroupName);
CatchClause //        } catch (StorageGroupAlreadySetException e1) {
CatchClause //          ignore
CatchClause //        }",1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.","  public void mergeOnePoint() {
  // do nothing
  }",  public void mergeOnePoint() {},1
Return values should not be ignored when they contain the operation status code,"Do something with the ""boolean"" value returned by ""await"".","LGTM.
btw, I am wondering if we can improve internally in product for the AsyncProducer.java, that will make users easier to use. ","        countDownLatch.await(5, TimeUnit.SECONDS);",0
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,use camelCased function and parameters,    private void from_packed_datetime (long packed_time) {,1
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""auth"".",combine these two ,      Auth auth = flickr.getAuthInterface().checkToken(requestToken);,1
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,`ATTEMPT_ID_SUPPLIER `?,  SparkTaskContextDetailSupplier<Long> ATTEMPT_SUPPLIER = () -> TaskContext.get().taskAttemptId();,0
Field names should comply with a naming convention,"Rename this field ""_columnsWithProperties"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Suggest renaming it to `_columnProperties`. Also don't set it inside the `extractTextIndexColumnsFromTableConfig()`, set it in `extractFromTableConfig()` so that other index type can also access it.","  private Map<String, Map<String, String>> _columnsWithProperties;",1
Nested blocks of code should not be left empty,Either remove or fill this block of code.,"Empty finally?
",    } finally {,1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",Why not check column name?,"    @Override protected void columnCheck(Client client, TableDefine tableDefine) throws StorageException {",0
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @Deprecated annotation.,I'm still wary of only using the Javadoc tag. Can you include the annotation as well?,  public char getAsCharacter() {,0
"Declarations should use Java collection interfaces such as ""List"" rather than specific implementation classes such as ""LinkedList""","The type of the ""timeRet"" object should be an interface such as ""List"" rather than the implementation ""ArrayList"".",Also use `List`,"  public TimeColumn(ArrayList<long[]> timeRet, int count) {",1
"Null checks should not be used with ""instanceof""","Remove this unnecessary null check; ""instanceof"" returns false for nulls.","Excellent work! But ByteBuffers here are controlled by VirtualStorageGroupProcessor, whose releaseWalDirectByteBufferPool method also frees these ByteBuffers.
public void releaseWalDirectByteBufferPool() {
  synchronized (walByteBufferPool) {
    while (!walByteBufferPool.isEmpty()) {
      MmapUtil.clean((MappedByteBuffer) walByteBufferPool.removeFirst());
      currentWalPoolSize--;
    }
  }
}","      if (this.logBufferWorking != null && this.logBufferWorking instanceof MappedByteBuffer) {
BlockStmt         MmapUtil.clean((MappedByteBuffer) this.logBufferFlushing);
BlockStmt       }
BlockStmt       if (this.logBufferIdle != null && this.logBufferIdle instanceof MappedByteBuffer) {
BlockStmt         MmapUtil.clean((MappedByteBuffer) this.logBufferIdle);
BlockStmt       }
BlockStmt       if (this.logBufferFlushing != null && this.logBufferFlushing instanceof MappedByteBuffer) {
BlockStmt         MmapUtil.clean((MappedByteBuffer) this.logBufferFlushing);
BlockStmt       }",0
Unused method parameters should be removed,"Remove this unused method parameter ""name"".",The `name` isn't used.,"  public static MessageType removeIds(MessageType type, String name) {",1
Anonymous inner classes containing only one method should become lambdas,Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.),Lambda?,                    SwingUtilities.invokeLater(new Runnable() {,1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,The first letter o variable should be lowercase,"    AbstractChunkReader AbstractChunkReader = new ChunkReader(chunk, null);
WhileStmt     while (AbstractChunkReader.hasNextBatch()) {
ExpressionStmt       BatchData batchData = AbstractChunkReader.nextBatch();",1
"""switch"" statements should have ""default"" clauses",Add a default case to this switch.,I think it's ok for cancel heartbeat.,      switch (request.getType()) {,0
Unused local variables should be removed,"Remove this unused ""allSensors1"" local variable.",What is this for?,    Set<String> allSensors1;,1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",TypeConverter looks better? I see the function is to convert type and would you please add some tests?,  public abstract static class TypeOptimizer implements Serializable {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Looks like there is no way around `BigInteger#toByteArray()` call even if we have `ByteBuf` at hand (here and other TODOs like this).,        // TODO: Pack directly to ByteBuf without allocating IGNITE-15234.,0
Static non-final field names should comply with a naming convention,"Rename this field ""SERVICE_CACHE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Set a new config? FIx a TODO?,"    private static Cache<String, Integer> SERVICE_CACHE = CacheBuilder.newBuilder().maximumSize(1000).build();",0
Field names should comply with a naming convention,"Rename this field ""_lowerLimit"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Suggest renaming `_lowerLimit` to `_nextDocId` to be consistent with other iterators?,  private int _lowerLimit;,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Revert the change in this class. We have a different method for MV support,        //TODO: Need to support MV here,0
Field names should comply with a naming convention,"Rename this field ""_firstTransformFunction"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","We only have one argument, so let's just call it _transformFunction.",  private TransformFunction _firstTransformFunction;,0
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""record1"" parameter (sonar.java.source not set. Assuming 8 or greater.)",can we call super(..) here,"    this(record.isPresent() ? record.get() : null, (record1) -> 0); // natural order",0
Unused local variables should be removed,"Remove this unused ""topicMetric"" local variable.",just use getSpec().getMetric().. I dont see a reason to overrider plain simple getters/setters.,    String topicMetric = getSpec().getTopicMetric();,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"Instead use:

    NSString *msg = [NSString stringWithFormat:@""PublicKey getEncoded error %d"",  (int)status];
    @throw create_JavaSecurityProviderException_initWithNSString_(msg);
","      	  NSLog (@""PublicKey getEncoded error %d"", (int) result);",1
"""public static"" fields should be constant","Make this ""public static default_insert_visible_timeout_ms"" field final","If we use session variable, there is no need to add this config.
I think session variable is enough.",    public static long default_insert_visible_timeout_ms = 10000;,0
Local variables should not shadow class fields,"Rename ""factories"" which hides the field declared at line 84.",why size() + 3?,    List<TypeAdapterFactory> factories = new ArrayList<TypeAdapterFactory>(this.factories.size() + this.hierarchyFactories.size() + 3);,0
"Track uses of ""FIXME"" tags",Take the required action to fix the issue indicated by this comment.,pls comment in English,        // FIXME 看一下高版本的RoaringBitMap，是否有内置函数支持更高效的遍历,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,LOG.error ?,                e.printStackTrace();,1
"Instance methods should not write to ""static"" fields","Make the enclosing method ""static"" or remove this set.","Well, a static Configuration looks weird. But that's not part of this issue, rather speaks for the need rework the protocol-httpclient plugin (see NUTCH-1086).

+1 to commit, thanks!",    Http.conf = conf;,0
Static non-final field names should comply with a naming convention,"Rename this field ""MAX_MONITOR_TIME"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",`MAX_MONITOR_TIME` -> `MAX_DURATION`,        public static int MAX_MONITOR_TIME = 10;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Could use Utils.rethrowException() to avoid throwing a RuntimeException.,        throw new RuntimeException(e2);,1
Class variable fields should not have public accessibility,Make PACKAGE_MATCH_REGEX_EXPRESSION a static final constant or non-public and provide accessors if needed.,"1. I think this is the Class Name match? Not a package name?
1. The default value should be empty, which is more high-efficiency.","            public static String PACKAGE_MATCH_REGEX_EXPRESSION = "".*"";",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,LOG instead of printStackTrace() ?,            t.printStackTrace();,1
Field names should comply with a naming convention,"Rename this field ""_isSplitCommit"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",rename as _isSplitCommitEnabled,    private boolean _isSplitCommit;,1
Jump statements should not be redundant,Remove this redundant jump.,```,    return;,1
"""@Deprecated"" code should not be used","Remove this use of ""Date""; it is deprecated.",You can use `TimeUtils.longToTimeString()`,"                    row.add(new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss"").format(new Date(table.getUpdateTime())));",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""false"" 10 times.","The issue isn't really the LeaderLatch specifically is it? I think it's probably cleaner to create a test case under curator-framework for the ConnectionStateManager and then have a test explicitly for injected LOST events, rather than have something in the LeaderLatch tests.

Because, this test doesn't really cover the use case that was discussed originally (2 clients being leader at the same time).","            Assert.assertTrue(next.equals(Arrays.asList(ConnectionState.LOST.name(), ""false"")) || next.equals(Arrays.asList(""false"", ConnectionState.LOST.name())), next.toString());",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Failed to merge FlowFiles to create new bin due to {}"" 3 times.",Same comment about args to the logger. Need to pass a separate arg to match the `{}` matcher and another for the stacktrace.,"                getLogger().error(""Failed to merge FlowFiles to create new bin due to {}"", e);",0
"Constructors should not be used to instantiate ""String"", ""BigInteger"", ""BigDecimal"" and primitive-wrapper classes","Remove this ""Long"" constructor","Maybe try `s1`, `s2` and `s3` as before will better.","          new SingleSeriesExpression(new Path(DEVICE1, ""s1""), ValueFilter.eq(new Long(3)));",0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",Why this variable is volatile?,    private volatile LongMetric storageSize;,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,how about use log,                t.printStackTrace();,1
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),The indentation is strange,                                    partitionRowList.stream().map(row -> ByteString.copyFrom(row)),0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,we can drop the todo now that you have addressed it,      // TODO: Remove attributes map when removing restlet,1
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,use `Connection conn = EnvFactory.getEnv().getConnection()`,"            DriverManager.getConnection(""jdbc:iotdb://127.0.0.1:6667/"", ""root"", ""root"");",1
"""public static"" fields should be constant","Make this ""public static rnd"" field final","This will have to be removed in the future, no more special fields for test. Please add TODO. I'd rather have a
`private final IntUnaryOperator rng;` field with corresponding constructor parameter.",    public static Random rnd;,1
"Constructors should not be used to instantiate ""String"", ""BigInteger"", ""BigDecimal"" and primitive-wrapper classes","Remove this ""String"" constructor","okay, I see where you would use this hash to compare the correctness of the timeline cached. But this is not used anywhere yet..Also, does this timeline include pending compactions ? If yes, that mess with the hash calculated later..",    this.timelineHash = new String(Hex.encodeHex(md.digest()));,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Is this still necessary considering the fact that there is the routing table selector factory that switches between routing table selector implementations?
","    // TODO read config for ROUTING_TABLE_SELECTOR_CLASS_KEY, construct (or load) a RoutingTableSelector class appropriately",0
Try-catch blocks should not be nested,Extract this nested try block into a separate method.,Could you comment with a small snippet of the doc mentioning this is the new API ?,      try (BufferedMutator mutator = hbaseConnection.getBufferedMutator(TableName.valueOf(tableName))) {,0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,     return seqStatistics.getStartTime() < unseqStatistics.getStartTime());,"      if (seqStatistics.getStartTime() < unseqStatistics.getStartTime()) {
ReturnStmt         return true;
ReturnStmt       }
ReturnStmt       return false;",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Yep, the context sounds right",  // TODO: Should these be initialized from the ExtensionContext and not injected?,0
"Subclasses that add fields should override ""equals""","Override the ""equals"" method in this class.","you should also add RandomAccess, just in case",class GroupPageStoreHolder<T extends PageStore> extends AbstractList<T> {,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,I just spent 15min looking for the build issue that @JaroslavTulach had with older VSNetBeans release to realise it's already covered by this change! :smile:,        //ri.removeIf(e -> e.apidocurl.isEmpty());,0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,Thanks for fixing this!,    HoodieRecord<?> record = inputRecord;,0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"        if (!column[1].isNull(i)) {
          // do not assign true to hasCandidateResult
          updateLongFirstValue(column[1].getLong(i), column[0].getLong(i));","        if (!column[1].isNull(i)) {
IfStmt           // do not assign true to hasCandidateResult
IfStmt           if (column[0].getLong(i) < minTime) {
ExpressionStmt             minTime = column[0].getLong(i);
ExpressionStmt             firstValue.setLong(column[1].getLong(i));
ReturnStmt           }",0
"""clone"" should not be overridden","Remove this ""clone"" implementation; use a copy constructor or copy factory instead.",I suggest implementing Serializable interface to implement deep clone instead of overriding Cloneable interface.,    public SubscriptionItem clone() {,0
Class variable fields should not have public accessibility,Make tsFileManagement a static final constant or non-public and provide accessors if needed.,"it would be better to set it as a private variable

",  public TsFileManagement tsFileManagement;,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Can HttpServer be injected, and the local extension somehow provides this version whereas default provides the old version?",  private HttpServer createServer(int port) throws Exception {,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,remove this ,        System.err.println(execute.body());,1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"Here, if we firstly meet the `2`, and you set `extVal` to `2` and then we meet `-2`, you will set `extVal` to `-2` which is inconsistent with the above.","        } else if (absExtVal.compareTo(absCurrentValue) == 0) {
IfStmt           if (extVal.compareTo(currentValue) > 0) {
ExpressionStmt             extVal = currentValue;
ExpressionStmt           }",0
Field names should comply with a naming convention,"Rename this field ""_numberOfBitmaps"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",`_numBitmaps`,  private final int _numberOfBitmaps;,1
Static non-final field names should comply with a naming convention,"Rename this field ""MAX_NUM_ENTRIES"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","I thought only final variables should be all caps. Please check once

Or is there a way to keep this final for safety ?",  private static int MAX_NUM_ENTRIES = 16;  // Max number of past segments for which stats are kept,1
"Unused ""private"" methods should be removed","Remove this unused private ""throwOptionParsingException"" method.",looks like this is not used anymore,"    private static void throwOptionParsingException(IgniteSqlCreateTableOption opt, String exp, String qry) {",1
Field names should comply with a naming convention,"Rename this field ""_paddingByte"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Isn't this unnecessary? `_paddingByte` is already included in `ImmutableDictionaryReader`.,  private final byte _paddingByte;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"Why false? I don't understand crypto key use for derivation, but it's the Apple default.",,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""mtmvName"" is nullable here.",NPE may occur if mtmvName is null.,            return mtmvName.toString();,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,delete if unnecessary,"      // logger.info(String.format(""Finish parsing pipeLog %s."", file.getPath()));",1
Unused method parameters should be removed,"Remove this unused method parameter ""hasColumnAlias"".",`hasColumnAlias` is unused?,      boolean hasColumnAlias) {,1
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"This needs to be changed from private to something else if it is to be used in later Indexing Filter tasks.
Currently the private nature results in compiler error.","  private final static String ANY23_TRIPLES = ""Any23-Triples"";",0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""arithmeticExpr"".","        return new ArithmeticExpr(binaryArithmetic.getLegacyOperator(),","        ArithmeticExpr arithmeticExpr =  new ArithmeticExpr(binaryArithmetic.getLegacyOperator(),",1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,use `log` to replace `printStackTrace()`.,            e.printStackTrace();,1
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,"This is also probably a good idea, not sure it's required for this PR","abstract class BaseSparkAction<ThisT, R> implements Action<ThisT, R> {",0
"Unused ""private"" methods should be removed","Remove this unused private ""readPageHeader"" method.",You'd better put dataType as the first parameter.,"  private PageHeader readPageHeader(long position, boolean markerRead, TSDataType dataType) throws IOException {",0
Field names should comply with a naming convention,"Rename this field ""_numOrderByColsPreSorted"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Remove this unused variable,  private int _numOrderByColsPreSorted = 0;,0
Field names should comply with a naming convention,"Rename this field ""_urlToNameMap"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","No underscore in variable names.
",  private Properties _urlToNameMap = new Properties();,1
Class variable fields should not have public accessibility,Make isUnseqMerging a static final constant or non-public and provide accessors if needed.,  private volatile boolean isUnseqMerging = false;,  public volatile boolean isUnseqMerging = false;,1
"""public static"" fields should be constant","Make this ""public static KEY_COUNT"" field final",Should be renamed to `ELEMENT_MAX_NUMBER`.,        public static int KEY_COUNT = 3;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove unused code,//    alertFilter.setParameters(anomalyFunctionSpec.getAlertFilter());,1
Class variable fields should not have public accessibility,Make IDX_TREE_FACTORY a static final constant or non-public and provide accessors if needed.,"Why not ""final""?",    public static InlineIndexTreeFactory IDX_TREE_FACTORY = new InlineIndexTreeFactory();,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""startTime"" 13 times.",we may need to consider the potential merging gap between the parent and children anomaly.,"        Predicate.LE(""startTime"", entity.getStartTime()),",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,the same as above,        throw new Exception();,0
Class variable fields should not have public accessibility,Make TEXT_INDEX_DEFAULT_RAW_VALUE a static final constant or non-public and provide accessors if needed.,"Does it make sense to use a single character for this? This value is never used in processing, so it is a pure memory overhead, right?","  public static String TEXT_INDEX_DEFAULT_RAW_VALUE = ""null"";",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Same as above, do we really need whole epic to be implemented?","    // TODO: IGNITE-16923 Set ""pagememory"" after the ticket is resolved.",0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,static on both for constants,"    private final String    PHOTO_TITLE_FORBIDDEN_CHARACTERS    = ""~\""#%&*:<>?/\\{|}"";",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"If the executable is required, we should ""assume"" that it exists at the start of the test. Along the lines: https://github.com/apache/tika/blob/main/tika-parsers/tika-parsers-standard/tika-parsers-standard-modules/tika-parser-ocr-module/src/test/java/org/apache/tika/parser/ocr/TesseractOCRParserTest.java#L66",    public void testDWGRead() throws Exception {,0
Anonymous inner classes containing only one method should become lambdas,Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.),Maybe better to replace ThreadFactory with ThreadFactoryImpl.,            scheduledExecutorService = Executors.newSingleThreadScheduledExecutor(new ThreadFactory() {,0
Raw types should not be used,Provide the parametrized type for this generic.,Let's pass in config in here instead of individual values (it's not gonna scale well),"  public static Schema getAvroSchemaForMessageClass(Class clazz, boolean wrappedPrimitivesAsRecords, int maxRecursionDepth, boolean timestampsAsRecords) {",0
Field names should comply with a naming convention,"Rename this field ""SIMPLE_NAME"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",static,"  private final String SIMPLE_NAME = ""DefaultDateTypeAdapter"";",0
Field names should comply with a naming convention,"Rename this field ""_delimiter"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Change it to `String`,  private final CharSequence _delimiter;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove this code,//        },1
Local variables should not shadow class fields,"Rename ""maxMessageSize"" which hides the field declared at line 1486.","IMO, variable parameters, which is properties and topic name, is limited and properties before write into commitLog, if this two item length exceed limit, it won't reach here.

and I think it is a little weird to limit length base on an auto scalable ByteBuf.",            int maxMessageSize = maxMessageBodySize + 64 * 1024;,0
Field names should comply with a naming convention,"Rename this field ""_schema"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","For each instance variable, pls check whether it can be private and final.
",  Schema _schema;,0
Two branches in a conditional structure should not have exactly the same implementation,This branch's code block is the same as the block for the branch on line 48.,"You could use `Collections.max(routes, comparator)` instead.
",      if (result == null) {,0
Unnecessary imports should be removed,Remove this unused import 'org.apache.commons.collections.MultiMap'.,Redundant?,import org.apache.commons.collections.MultiMap;,1
"""@Deprecated"" code should not be used","Remove this use of ""removeOptionsFromSql""; it is deprecated.",Don't remove the if check to avoid overhead when there is no options,    sql = removeOptionsFromSql(sql);,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""getPackageOf()"" can return null.",More style than anything else but shouldn't a new variable and enclosing bracket makes the code more readable ?,        while ((el != null) && (el.getKind() != ElementKind.PACKAGE)) el = el.getEnclosingElement();,0
Lambdas should be replaced with method references,Replace this lambda with method reference 'ServerCall.class::isInstance'. (sonar.java.source not set. Assuming 8 or greater.),"The currentCall should always be a ServerCall I think, so no need the extra instanceof ?  It's also OK, if you think it's fine.",    ServerCall<?> rpcCall = RpcServer.getCurrentCall().filter(c -> c instanceof ServerCall),0
Lambdas containing only one statement should not nest this statement in a block,Remove useless curly braces around statement (sonar.java.source not set. Assuming 8 or greater.),"Could you please use a static import for `assertThrows`? We use static imports for other asserts, so would be nice to keep the code consistent. It applies to every file where we use static imports for assertion functions.","    Assertions.assertThrows(IllegalArgumentException.class, () -> {",0
Raw types should not be used,Provide the parametrized type for this generic.,"Please use ""// NOI18N"" comment for hard coded strings","                    Class swExprTreeClass = Class.forName(""com.sun.source.tree.SwitchExpressionTree"");",0
Field names should comply with a naming convention,"Rename this field ""onceRules_"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Add comment to explain what is `onceRules`,    private List<ExprRewriteRule> onceRules_ = Lists.newArrayList();,0
Using slow regular expressions is security-sensitive,"Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.",Let's not use regex to determine the format because it is too expensive. The simplest way I can think of is to check if the first character is a digit,    if (_format.matches(COLON_REGEX)) {,1
Multiple variables should not be declared on the same line,"Declare ""retEndTime"" on a separate line.",Coding style issue. Please do not define multiple variables in a single line.,"    long retStartTime, retEndTime;",1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.","Could also remove the method implementation. The superclass Reducer already implements already a do-nothing cleanup(context).

If you have time: there are a couple of other cleanup() methods without the context argument. Probably same mistake but harmless as they ""do nothing"". Need to check in detail but `git grep -A2 'cleanup()'` finds a couple of them. Thanks, @sju!",    public void cleanup(Context context) throws IOException {,1
Unused method parameters should be removed,Remove these unused method parameters.,These methods all have 'default' implementations but are then overridden in the existing concrete implementation. Probably makes more sense to just make them abstract?,"    protected int getBufferSize(final ProcessContext context, final ProcessSession session, final FlowFile flowFile) {
ReturnStmt         return getConfiguration().getInt(BUFFER_SIZE_KEY, BUFFER_SIZE_DEFAULT);
MethodDeclaration     }
MethodDeclaration     /**
MethodDeclaration      * Returns with the expected replication factor. Note: this might be overwritten by implementations.
MethodDeclaration      */
MethodDeclaration     protected short getReplication(final ProcessContext context, final ProcessSession session, final FlowFile flowFile) {
ExpressionStmt         final String dirValue = context.getProperty(DIRECTORY).evaluateAttributeExpressions(flowFile).getValue();
ExpressionStmt         final Path configuredRootDirPath = new Path(dirValue);
ReturnStmt         return getFileSystem().getDefaultReplication(configuredRootDirPath);
MethodDeclaration     }
MethodDeclaration     /**
MethodDeclaration      * Returns if file system should ignore location. Note: this might be overwritten by implementations.
MethodDeclaration      */
MethodDeclaration     protected boolean shouldIgnoreLocality(final ProcessContext context, final ProcessSession session) {
ReturnStmt         return false;
MethodDeclaration     }
MethodDeclaration     /**
MethodDeclaration      * I returns a non-null value, changes the owner of the uploaded file to this value after it is written. This only
MethodDeclaration      * works if NiFi is running as a user that has privilege to change owner. Note: this might be overwritten by implementations.
MethodDeclaration      */
MethodDeclaration     protected String getOwner(final ProcessContext context, final FlowFile flowFile) {
ReturnStmt         return null;
MethodDeclaration     }
MethodDeclaration     /**
MethodDeclaration      * I returns a non-null value, changes the group of the uploaded file to this value after it is written. This only
MethodDeclaration      * works if NiFi is running as a user that has privilege to change group. Note: this might be overwritten by implementations.
MethodDeclaration      */
MethodDeclaration     protected String getGroup(final ProcessContext context, final FlowFile flowFile) {",0
Field names should comply with a naming convention,"Rename this field ""_vip"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Rename to `_vipUrl`?,  private final String _vip;,1
Raw types should not be used,Provide the parametrized type for this generic.,"change to HashMap<String, Long> allMetrics = new HashMap<>(); ","    HashMap allMetrics = new HashMap<String, Long>();",1
Boolean literals should not be redundant,Remove the unnecessary boolean literals.,replaced with `Boolean.parseBoolean`,            fileCache = Boolean.TRUE.equals(application.get().getEnableFileCache()) ? true : false;,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"`static final` please to be consistent with everywhere else.
","  private final static String FINAL_CONSTRUCT_STATE_PREFIX = ""construct.final.state."";",1
Raw types should not be used,Provide the parametrized type for this generic.,"Map -> Map<String, String> ?",                Map tuple = new HashMap();,1
Static non-final field names should comply with a naming convention,"Rename this field ""yarn_client_path"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",@ConfField,"    public static String yarn_client_path = PaloFe.DORIS_HOME_DIR + ""/lib/yarn-client/hadoop/bin/yarn"";",0
Unused method parameters should be removed,"Remove this unused method parameter ""pluginName"".","not used in the AbstractSoulPlugin?
","    protected Mono<Void> handleSelectorIsNull(final String pluginName, final ServerWebExchange exchange, final SoulPluginChain chain) {",1
Unnecessary imports should be removed,Remove this unused import 'org.apache.doris.analysis.DistributionDesc'.,config `style` according to [doc](https://doris.apache.org/zh-CN/developer-guide/java-format-code.html#import-order),import org.apache.doris.analysis.DistributionDesc;,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""startOffset"" is nullable here.","This method is actually overriding the offset criteria and call `getNewPartitionGroupMetadataList()` to get all `PartitionGroupMetadata` but only return the offset for one partition. Handling it here is not efficient, and also not avoiding the problem of overriding the stream config. I slightly prefer the fix in #7743 ","      startOffset = getPartitionGroupSmallestOffset(streamConfig, partitionGroupId);",0
"""public static"" fields should be constant","Make this ""public static default_db_data_quota_bytes"" field final",Both config should be `masterOnly = true`,    public static long default_db_data_quota_bytes = 1024 * 1024 * 1024 * 1024L; // 1TB,0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,Any reason to remove all of these as well?,"  public static final String SOLR_PREFIX = ""solr."";",1
"Array designators ""[]"" should be on the type, not the variable",Move the array designator from the variable to the type.,Redundant collections.,"        LocalStatisticsGatheringContext ctxToSubmit[] = new LocalStatisticsGatheringContext[1];
ExpressionStmt         LocalStatisticsGatheringContext ctxToAwait[] = new LocalStatisticsGatheringContext[1];",1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","Nutch is designed to be scalable and should be able to handle CrawlDbs containing billions of items. Even, if the CrawlDb is split into many partitions, every task has to handle 100 million CrawlDb items. However, it's hardly possible to keep such a huge list in memory, resp. it would be a too expensive use of resources. So, it's mandatory to write each record directly to the output, Hadoop itself handles the large outputs efficiently by buffering parts in memory and spilling to disk if the buffers are full.

To simplify the process: why not use the [JSON lines format](http://jsonlines.org/)? Every line one JSON-formatted record: `{""url"": ""..."", ...}`
- makes it much easier to write the output because you need not to preserver state internally to properly open and close the list of records.
- JSON lines has several other advantages:
  - it's possible to grep for records
  - also [jq](https://stedolan.github.io/jq/) can process it
  - and again: any JSON parser needs to keep only a single line in memory",      private ArrayList<String> jsonString = new ArrayList<String>();,0
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),"Can we add empty line to split this definition?  Additionally, add some comments?",  SparkSupplier<Integer> PARTITION_SUPPLIER = () -> TaskContext.getPartitionId();,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""1:online,0:unkonwn"" 6 times.",status should be online or unknown? no need to public 1 or 0,"                      ""1:online,0:unkonwn"")",0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,put to a class field: private static final,    long MAX_WAITING_TIME = 120_000L;,0
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,Is `ThisT` name intentional? We used `THIS` in `SnapshotUpdate`,abstract class MergingSnapshotProducer<ThisT> extends SnapshotProducer<ThisT> {,0
"""java.nio.Files#delete"" should be preferred","Use ""java.nio.file.Files#delete"" here for better messages on error conditions.",Don't forget to close FileChannel in finally block~,"      try (FileOutputStream fileOutputStream = new FileOutputStream(tmpFile);
BlockStmt           FileChannel fileChannel = fileOutputStream.getChannel()) {
BlockStmt         fileChannel.write(byteBuffer);
BlockStmt       }
BlockStmt       // rename file
BlockStmt       return tmpFile.renameTo(snapshotFile);
BlockStmt     } finally {
ExpressionStmt       unlockAllRead();
ExpressionStmt       byteBuffer.clear();
ExpressionStmt       // with or without success, delete temporary files anyway
ExpressionStmt       tmpFile.delete();",1
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,[minor] we might need to add `@Deprecated` here as well.,  public static final boolean CLIENT_ENABLE_ETAG_CHECK_DEFAULT = false;,1
Try-with-resources should be used,"Change this ""try"" to a try-with-resources. (sonar.java.source not set. Assuming 7 or greater.)",Should this ObjectCreationExpr handler be closed after use?,            pw = new PrintWriter(new FileWriter(path));,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""file_path"" 6 times.","Isn't this going to cause Spark to use a nested loop join (full join) because there is no way to partition the data for this expression?

To fix it, what about using just the file name as well? File names should be unique because we embed the write UUID, partition, and task ID. And if we add both checks, filename could be used to distribute the data without many collisions and contains could be used for final correctness.
java
Column nameEqual = filename(actualFileDF.col(""file_path"")).equals(filename(validFileDF.col(""file_path"")));
Column actualContains = actualFileDF.col(""file_path"").contains(validFileDF.col(""file_path""));
Column joinCond = nameEqual.and(actualContains);

FYI @aokolnychyi.","    Column joinCond = actualFileDF.col(""file_path"").contains(validFileDF.col(""file_path""));",0
"Loops should not contain more than a single ""break"" or ""continue"" statement",Reduce the total number of break and continue statements in this loop to use at most one.,"Can break?
If break, is'nt that the codes below are valid?",        break;,1
Class variable fields should not have public accessibility,Make moduleInput a static final constant or non-public and provide accessors if needed.,use 1.7 type inference in generics,      public transient ProxyInputPort<Integer> moduleInput = new ProxyInputPort<Integer>();,0
Nested blocks of code should not be left empty,Either remove or fill this block of code.,"Please add some comments within this catch block on why this is ignored.
",    } catch(IOException ioe) {,1
Unused assignments should be removed,"Remove this useless assignment to local variable ""attributes"".",SimpleName seems unused,                        List<DocTree> attributes = TreeShims.getSnippetDocTreeAttributes(tag);,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,nit: unnecessary comment,    // String joined = NULL.join(namespace.levels());,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"IMO, sleep(0) will give CPU time to another thread. These codes should not be deleted to prevent high CPU usage of this warm-up loop.",            //         Thread.sleep(0);,0
Boolean literals should not be redundant,Remove the unnecessary boolean literal.,    return fieldSpec != null && fieldSpec.getDataType() == FieldSpec.DataType.STRING;,    return fieldSpec == null ? false : fieldSpec.getDataType() == FieldSpec.DataType.STRING;,1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,why var names in all caps?,"  SegmentSizeRecommendations estimate(long GSS, int DSS, int NRGS, long NRPP) {",1
"Unused ""private"" fields should be removed","Remove this unused ""logger"" private field.",static,  private final Logger logger = LoggerFactory.getLogger(GoogleContactsServiceTest.class);,0
"Unused ""private"" methods should be removed","Remove this unused private ""validateConfig"" method.","(minor)
  private String validateConfig(TableConfigs tableConfigs, @Nullable String typesToSkip) {","  private String validateConfig(TableConfigs tableConfigs, String typesToSkip) {",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""sequence"" 3 times.","Why do we need `||` here, the oldInfoString may contains both `true` or `sequence`?

If yes, let's also give a correct sample in the comment. Current comment is not very friendly for code reviewer","            || splittedFileInfo[SEQUENCE_OFFSET_IN_LOG + 4].equals(""sequence""),",0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".",Why did this change?,"            Math.floorMod(microsFromEpoch, 1_000_000) * 1_000",0
Boolean expressions should not be gratuitous,"Remove this expression which always evaluates to ""true""","I think this is not needed. If decode execute successfully, you can just use result.","                result = new IntLiteral(SqlModeHelper.encode(sqlMode).toString(), Type.BIGINT);",0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"Not sure if this check is correct:
-why look at the structure of the initializer when we have the variable type? If the variable type contains anonymous, that is a problem, if it does not, all is fine (i.e. why not simple look at variableTypeMirror?). What if the code is like:
var v1 = new Object() {};
var v2 = v1; //v2 is anonymous as well, right?
-what about cases like:
var v = List.of(new Object() {});
?",        } else if (initTreePath.getLeaf().getKind() == Tree.Kind.METHOD_INVOCATION) {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,can we remove this TODO now?,            // TODO(zc): type,1
Field names should comply with a naming convention,"Rename this field ""_lastResultsBlock"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",This shouldn't need to be changed,  private final IntermediateResultsBlock _lastResultsBlock;,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",why volatile? will multiple threads call this?,  private volatile Gmail gmail;,1
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".",We should log that this happened.,        initialCommitTimeMs = MAX_COMMIT_TIME_FOR_ALL_SEGMENTS_SEC * 1000;,0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,Does this method do anything different from GobblinHelixJobLauncher.addAdditionalMetadataTags() ?,"  public static List<? extends Tag<?>> addAdditionalMetadataTags(Properties jobProps,",0
"""Collections.EMPTY_LIST"", ""EMPTY_MAP"", and ""EMPTY_SET"" should not be used","Replace ""Collections.EMPTY_LIST"" by ""Collections.emptyList()"".",`Collections.emptyList()` is preferred over `Collections.EMPTY_LIST`,        a.setInheritedParameterContexts(Collections.EMPTY_LIST); // A now no longer includes 'def',1
"""ThreadLocal"" variables should be cleaned up when no longer used","Call ""remove()"" on ""queryStatus"".","Maybe a structure QueryContext could be used, which contains a query id, PhysicalPlan and QueryDataSet. If you put these fields here, it's better to add some comments. For example, queryStatus means a queryId -> PhysicalPlan. ","  private ThreadLocal<HashMap<Long, PhysicalPlan>> queryStatus = new ThreadLocal<>();",0
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,"Not sure that MonitoringList is good name since the interface does not extend List. It can mislead.
Maybe MonitoringData or MonitoringContainer are more suitable names
","public interface MonitoringList<Id, R extends MonitoringRow<Id>> extends Iterable<R> {",0
Field names should comply with a naming convention,"Rename this field ""_random"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Same here.,  private Random _random;,0
Throwable and Error should not be caught,Catch Exception instead of Throwable.,"All catches are not necessary in the interceptor scope, as the core has try/catch-log already.","            } catch (Throwable throwable) {
ExpressionStmt                 LOGGER.error(""Failed to resolve header or create EntrySpan."", throwable);",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","How about `BaseEqualityDeltaWriter`?

I think Spark `MERGE INTO` will likely use a delta writer that doesn't create the equality writer or use the `SortedPosDeleteWriter` because it will request that the rows are already ordered.",  protected abstract class BaseDeltaWriter implements Closeable {,0
Methods should not have too many parameters,"Constructor has 20 parameters, which is greater than 7 authorized.",Can you add a TODO here to clean this up with table config?,"  private RealtimeSegmentConfig(String segmentName, String streamName, Schema schema, String timeColumnName,",0
"""String#replace"" should be preferred to ""String#replaceAll""","Replace this call to ""replaceAll()"" by a call to the ""replace()"" method.","This works for escaped (double)quotes, but not for other escape characters. So for example
        String s = """"""   
            \\
            """""";
yields
String s = ""\\\\\n"" + """";
","                textBlockLines[i] = textBlockLines[i].replaceAll(""\\Q\\\""\\E"", ""\""""); // NOI18N",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"What do you mean?
The ticket has empty description.",// TODO: IGNITE-15480 Probably should be removed after index column mapping refactoring.,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","I believe that this field can only be updated in constructor or while holding a write lock. If we only read it holding a read lock, then Modifier can be removed, but I don't know for sure if that's the case. I'm leaving it for you to check.",    private volatile Path filePath;,1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","`SequentialAndTTLBasedBatchAccumulator` is too verbose. `SequentialBatchAccumulator` is good enough. Usually, asynchronization comes together with timeout. ",public abstract class SequentialAndTTLBasedBatchAccumulator<D> extends BatchAccumulator<D> {,0
"Unused ""private"" fields should be removed","Remove this unused ""LOGGER"" private field.",Remove the unused logger,  private static final Logger LOGGER = LoggerFactory.getLogger(BrokerReduceService.class);,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"That's OK, I'll fix it in next PR~","              // TODO: (xingtanzjr) We cannot get the dataNodeId here, use 0 as the placeholder",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Really minor, but could you please add a blank line between these methods.",    public void testSunMiscImportPackage() throws Exception {,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""span"" is nullable here.",This line maybe cause NullPointException when the `isConsumer` equals `true`. Or remove the judgment if you are sure this instrumentation only call by provide side.,        span.setComponent(ComponentsDefine.SOFARPC);,1
Lambdas should be replaced with method references,Replace this lambda with method reference 'SlotReference.class::cast'. (sonar.java.source not set. Assuming 8 or greater.),        return plan.getOutput().stream().map(SlotReference.class::cast),        return plan.getOutput().stream().map(slot -> (SlotReference) slot),1
Field names should comply with a naming convention,"Rename this field ""OpenApiPort"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",  private int openApiPort = 18080;,  private int OpenApiPort = 18080;,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Add unit test for this class,public class QueryDetailQueue {,0
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.db.engine.merge.manage.MergeManager'.,Remove the useless import,"import org.apache.iotdb.db.engine.merge.manage.MergeManager;
ImportDeclaration import org.apache.iotdb.db.engine.merge.manage.MergeResource;
ImportDeclaration import org.apache.iotdb.db.engine.merge.selector.IMergeFileSelector;
ImportDeclaration import org.apache.iotdb.db.engine.merge.task.MergeTask;
ImportDeclaration import org.apache.iotdb.db.engine.modification.ModificationFile;",1
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,Remove it :D,  private final String WRONG_TYPE_MESSAGE =,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,What do you mean TODO?,"        // TODO: It is hard to get arguments of method. So, currently, we don't do that. If you have a good idea, please fix it.",1
Throwable and Error should not be caught,Catch Exception instead of Throwable.,"catching Exception would be better, since Throwable includes Error too which is better not to be caught.

handle with `Exceptions.printStackTrace`?","        } catch (Throwable ex) {
ExpressionStmt             ex.printStackTrace();",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Should this be `UncheckedIOException` instead of generic `RuntimeException`?,"      throw new RuntimeException(""Failed to close table loader"", e);",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""[6:6]"" 3 times.","It is extremely hard to review and maintain this style of tests.

Could you please add relevant `enum` classes instead of booleans (e.g. the ones that are located inside `TestJMESPathAssertion`)?

Here's an example: https://github.com/apache/jmeter/pull/497/files#diff-52c1ed26a7856184c8efaa2a12116a69R44-R50

Enum like that make test code much simpler to read, then it produce meaningful `toString` when debugging, and it produce meaningful error messages should the test fail.","                    { Boolean.FALSE, ""[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"", ""[6:6]"", Boolean.TRUE, Boolean.FALSE,",0
Unused local variables should be removed,"Remove this unused ""originAggregation"" local variable.",this is never used,              String originAggregation = null;,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,use logger.log,      e.printStackTrace();,1
Static non-final field names should comply with a naming convention,"Rename this field ""DEFAULT_INITIAL_CONSISTENCY_CHECK_INTERVAL_MS"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Sounds good.,  private static long DEFAULT_INITIAL_CONSISTENCY_CHECK_INTERVAL_MS = 400L;,0
Static non-final field names should comply with a naming convention,"Rename this field ""rebalancer_type"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",tablet_rebalancer_type?,"    public static String rebalancer_type = ""BeLoad"";",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"See comment above re: TODOs.  I know you already created one, but could you please update the comment with the JIRA?", *     TODO: to run this tool please use 28.2-jre <guava.version> instead of 19.0 in main POM file,1
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""numOutputFiles"".",nit: just return?,    long numOutputFiles = (long) Math.ceil((double) groupSize / targetFileSize);,1
Unused assignments should be removed,"Remove this useless assignment to local variable ""yamlConfigMap"".","Looks like this yamlConfig is loaded and thrown away immediately. It should be fine to let the client code to do validate yaml syntax, cause it has to load the yaml anyways. ","      Map<String, Object> yamlConfigMap = (Map<String, Object>) YAML.load(yamlConfig);",1
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,?? Nicely documented.,public interface BinaryForSourceQueryImplementation2<Result> extends BinaryForSourceQueryImplementation {,0
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,"Single usage, can be inlined.",        boolean wrap = rnd.nextBoolean();,0
Lambdas should be replaced with method references,Replace this lambda with method reference 'Objects::isNull'. (sonar.java.source not set. Assuming 8 or greater.),"Can we roll back this change now, not sure if it is right.",    if (Arrays.stream(this.eventBuffer).allMatch(event -> event == null)) {,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,use logger if you want to print,        throwable.printStackTrace();,1
Static non-final field names should comply with a naming convention,"Rename this field ""MODE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",the `MODE` should have a init value. Perhaps it's `no-init`.,"    private static String MODE = """";",0
"Unused ""private"" fields should be removed","Remove this unused ""TYPE_REALTIME"" private field.",these two definitions are not used anywhere right?,"  private static final String TYPE_REALTIME = ""_REALTIME"";",1
Field names should comply with a naming convention,"Rename this field ""_segmentList"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",use Set?,  private final List<String> _segmentList;,0
Boolean expressions should not be gratuitous,"Remove this expression which always evaluates to ""true""",the workSequenceTsFileProcessors can not be null,      if (workSequenceTsFileProcessors != null) {,1
Anonymous inner classes containing only one method should become lambdas,Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.),Suggest not addressing this TODO in this PR. It can potentially make lots of calls (O(nlogn)) to the PinotFS and cause issues when it is remote. Recently we have encountered issues of hitting the request rate limit for S3.,"    Collections.sort(filteredFiles, new Comparator<String>() {",0
"Strings and Boxed types should be compared using ""equals()""","Use the ""equals"" method if value comparison was intended.",What's the difference?,"      if (operation == ""CREATE"" || operation == ""INSERT"") {",0
"""public static"" fields should be constant","Make this ""public static async_loading_load_task_pool_size"" field final",I think pending number should be larger loading number？,    public static int async_loading_load_task_pool_size = 20;,0
"Loops should not contain more than a single ""break"" or ""continue"" statement",Reduce the total number of break and continue statements in this loop to use at most one.,Why not move this `continue` to to above `if (tableRef instanceof InlineViewRef) {`?,                continue;,0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,`return msgValue != null;`?,              if (msgValue == null) {,1
Field names should comply with a naming convention,"Rename this field ""_intermediateCollection"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",  private Collection<TableResizer.IntermediateRecord> _intermediateRecords;,  private Collection<TableResizer.IntermediateRecord> _intermediateCollection;,0
Boolean literals should not be redundant,Remove the unnecessary boolean literal.,"`if (!this.shouldRemove(field))`.
",      if (this.shouldRemove(field) == false) {,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,use `Logger`  to replace `e.printStackTrace()`,            e.printStackTrace();,1
Local variables should not shadow class fields,"Rename ""sequenceFileFolders"" which hides the field declared at line 41.","Why not `List<String> sequenceFileFolders =
          Arrays.asList(IoTDBDescriptor.getInstance().getConfig().getDataDirs());`?","      List<String> sequenceFileFolders =
CatchClause           new ArrayList<>(Arrays.asList(IoTDBDescriptor.getInstance().getConfig().getDataDirs()));",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",java docs would be nice. ,public abstract class AsyncClusteringService extends HoodieAsyncService {,0
Unused method parameters should be removed,"Remove this unused method parameter ""runner"".",put into QuickStartBase?,  protected void waitForBootstrapToComplete(QuickstartRunner runner),0
"""@Deprecated"" code should not be used","Remove this use of ""complexWriters""; it is deprecated.",`(complexWriters != null && !complexWriters.isEmpty())` -> `!CollectionUtils.isEmpty(complexWriters)`,      if ((complexWriters != null && !complexWriters.isEmpty()) || rsLoader != null ) {,1
"""Map.get"" and value test should be replaced with single method call","Replace this ""Map.containsKey()"" with a call to ""Map.computeIfAbsent()"".",Doesn't this create default values?,"                values.put(newKey, creator.apply(keys, newKey));",0
Field names should comply with a naming convention,"Rename this field ""SOURCE_NAME"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",`public final static String `?,"  public String SOURCE_NAME = ""jvm"";",0
Methods should not have too many parameters,"Method has 8 parameters, which is greater than 7 authorized.",  public static String generateNewTsFilePathWithMkdir(,  public static String generateNewTsFilePatWithMkdir(,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",Ditto.,  protected static volatile Tick tick = nextTick();,0
"""public static"" fields should be constant","Make this ""public static DEFAULT_OVERWRITE_CONFIGS_IN_STATESTORE"" field final","Should this be final? If not final, don't use upper case.
",  public static boolean DEFAULT_OVERWRITE_CONFIGS_IN_STATESTORE = false;,1
"""StandardCharsets"" constants should be preferred",Replace Charset.forName() call with StandardCharsets.UTF_8,"Good catch
    int lengthOfLongestEntry = StringUtil.encodeUtf8(stringDefaultValue).length;","    int lengthOfLongestEntry = stringDefaultValue.getBytes(Charset.forName(""UTF-8"")).length;",0
Two branches in a conditional structure should not have exactly the same implementation,This branch's code block is the same as the block for the branch on line 173.,Nice comments!,        //      parent |-------------|,0
Field names should comply with a naming convention,"Rename this field ""_c3ScoreExponent"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",suggest calling something else or just exponent,  private final int _c3ScoreExponent;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Should we remove this?,,1
Raw types should not be used,Provide the parametrized type for this generic.,"Suggest directly comparing class instead of String comparison for both performance and readability:
if (paramType == Integer.class) {
  ...
} else if (paramType == Long.class) {
 ...",        Class paramType = _functionInvoker.getParameterTypes()[i];,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"wrap the comment, its too long in one line","        // TODO(wangbo): 2020/2/4 in the case that the [WaitingTxnJob|PendingJob] is checkpointed and replayMethod won't be called, make sure the tablet meta exists in olapTable and TabletInvertedIndex before doris run",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Please include a more precise message with the Exception. E.g. `Failed to start FsStateStoreFactory`.,      throw new RuntimeException(e);,1
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,It seems that we should update the JavaDoc.,"    public IgniteBiTuple<Map<Class<?>, Collection>, ? extends GridSpringResourceContext> loadBeans(",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Error StorageGroup name"" 12 times.","              .setMessage(""Error StorageGroup name: "" + e.getMessage()));","              .setMessage(""Error StorageGroup name"" + e.getMessage()));",0
"""public static"" fields should be constant","Make this ""public static default_db_replica_quota_bytes"" field final","The unit is wrong. This is not a ""byte size"", but a ""number of"" replicas.",    public static long default_db_replica_quota_bytes = 1024 * 1024 * 1024;,0
Unused method parameters should be removed,"Remove this unused method parameter ""request"".","Following above, this method should be moved into core too.",    private String generateSerialNumber(final ServiceInstancePingPkg request) {,0
Return values should not be ignored when they contain the operation status code,"Do something with the ""boolean"" value returned by ""delete"".","This is good, please add writeOnlyFile.delete() inside addShutDownHook() method as well.",          writeOnlyFile.delete();,0
Boolean literals should not be redundant,Remove the unnecessary boolean literal.,Let's change to `res == Boolean.FALSE` to avoid unboxing.,            if (byThisCall && (res == false || isFailed())),1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Did you consider straight out writing a bash script with variables and then using this class to just set those variables? 
",public class CloudInitScriptBuilder {,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","Just a casual comment here:- Volatile comes with a performance penalty because of the constraints the JVM optimizer has to follow and extra memory copy. But at the same time, I don't know if we can measure the impact yet.",  volatile MasterCoprocessorHost cpHost;,1
Field names should comply with a naming convention,"Rename this field ""_failOnEmptySegment"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",can you add a comment on this (similar to the other fields in this file)?,  private boolean _failOnEmptySegment = false;,0
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @deprecated Javadoc tag.,I like the idea of adding `DEPRECATED_` prefix to the ones that are about to deprecated in the next release. Maybe we should do that in this PR as well.,"    public static final String RETENTION_MANAGER_FREQUENCY_IN_SECONDS = ""controller.retention.frequencyInSeconds"";",1
"Unused ""private"" methods should be removed","Remove this unused private ""isCharInUTF16HighSurrogateRange"" method.","Here's an example, I think this was removed in a later version. Similarly, the extra newline on line 201 was fixed in another version.",    private boolean isCharInUTF16HighSurrogateRange(char c1) {,1
URIs should not be hardcoded,Refactor your code to get this URI from a customizable parameter.,"    String filename = ""test.tsfile"";","    String filename = ""C:\\Users\\MARKLAU\\Desktop\\0-0-1-0.tsfile"";",0
Unused method parameters should be removed,"Remove this unused method parameter ""t"".",Could you drop the unused `t` parameter?,"    private void visitDynamicImport(NodeTraversal t, Node dynamicImport) {",1
Static non-final field names should comply with a naming convention,"Rename this field ""_sslContext"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Just curious about the naming convention for static variables - I'd thought they were always upper-cased.,  private static SSLContext _sslContext = null;,1
"Loops should not contain more than a single ""break"" or ""continue"" statement",Reduce the total number of break and continue statements in this loop to use at most one.,romove it to above loop,"      if (count == CACHED_ENTRY_NUMBER) {
ExpressionStmt         enough = true;
BreakStmt         break;",1
Ternary operators should not be nested,Extract this nested ternary operation into an independent statement.,"What about a simpler method, `replaceNaN(double value, double replacement)`? Then you just need the ternary check here and you can customize with `Double.NEGATIVE_INFINITY` in the call rather than passing a `Bound`.

Also, you only need one since the bound is always a double to begin with. So you can replace the logic with:
java
  max = replaceNaN(((DoubleColumnStatistics) columnStats).getMaximum(), Double.POSITIVE_INFINITY);
  if (type.typeId() == Type.TypeID.FLOAT) {
    max = ((Double) value).floatValue;
  }",      return Double.isNaN(value) ? (bound == Bound.UPPER ? Double.POSITIVE_INFINITY : Double.NEGATIVE_INFINITY) : value;,1
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @deprecated Javadoc tag.,"Please notice, this class has been `Deprecated`, which means it is a shell only. The real codes are in `org.apache.skywalking.oap.query.graphql.resolver.MetricsQuery`","@Deprecated
ClassOrInterfaceType @Slf4j
ClassOrInterfaceType public class MetricQuery implements GraphQLQueryResolver {",0
Conditionally executed code should be reachable,"Change this condition so that it does not always evaluate to ""false""",tsFilesReader is always not null..,      if (tsFilesReader == null) {,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,nit: remove this line.,    //this.topology.getImportsRecursively(configKey);,1
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","volatile is not required - as far as I can see, the field will be processed only by discovery thread","    @Nullable private volatile MonitoringListImpl<Integer, CacheGroupView> cachesGrpMonList;",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"This should be `UnsupportedOperationException`. Also, the message could be a bit more clear. What about ""Cannot rename Hadoop tables.""","    throw new RuntimeException(""rename a hadoop table is not supported"");",1
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,The method name should be `camelCase`,"    private void AggregateUrlFromRegistry(Map<String, String> referenceParameters) {",1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"Are these `getOrCreate` plans judged below the consensus layer? And if so, how do we guarantee certainty?","  GetOrCreateSchemaPartition,",0
Class variable fields should not have public accessibility,Make INSTRUMENTATION a static final constant or non-public and provide accessors if needed.,Why this?,    public static Instrumentation INSTRUMENTATION;,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,What about `Mode.Xml.remove()`?,"    public final static boolean removeMode(WindowManager windowManager, Mode mode) {",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,pls throw specific compile time exception  instead of a generic one.,"  public PartitionAssignment generatePartitionAssignment(TableConfig tableConfig, int numPartitions) throws Exception {",1
Field names should comply with a naming convention,"Rename this field ""_excludeFields"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","would it make sense to add an ""_excludeTypes""? 
for example, if the node is an array i will not need to enumerate them all out

also good to add a javadoc to explain which overwrites which (e.g. in both include and exclude, etc)?",  private Set<String> _excludeFields;,0
Throwable and Error should not be caught,Catch Exception instead of Throwable.,"Is it better to catch Exception instead of Throwable here?
",      } catch (Throwable t) {,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"I think this partial success is seen frequently as well, worth to address. ",    // TODO: we should set job as partial success if there is a mix of allocated requests and rejections,0
Unused local variables should be removed,"Remove this unused ""copiedColumnExprs"" local variable.",seems that `copiedColumnExprs` is not used by anyone,        List<ImportColumnDesc> copiedColumnExprs = Lists.newArrayList(columnExprs);,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,nit: indent?,//  private final AtomicBoolean startupOngoing = new AtomicBoolean(false);,0
Anonymous inner classes containing only one method should become lambdas,Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.),I have a little suggestion. we could move Line 156-161 to Line-170.,"            Arrays.sort(pathArr, new Comparator<String>() {",0
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,Please use `Connection connection = EnvFactory.getEnv().getConnection();` instead.,"                Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");",1
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,Same comment regarding `HashMap`,"        IndexedRecord record = schemaOption.isPresent() ? HoodieAvroUtils.rewriteRecordWithNewSchema(currentRecord, schemaOption.get(), new HashMap<>()) : currentRecord;",0
"""switch"" statements should not have too many ""case"" clauses",Reduce the number of non-empty switch cases from 57 to at most 30.,Don't we add everything into V2 serializer now?,            case INDEX_ROOT_PAGE_RENAME_RECORD:,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,can we use timstamp (long)?,   // throw new SQLException(METHOD_NOT_SUPPORTED_STRING);,0
Unnecessary imports should be removed,Remove this unused import 'java.util.UUID'.,Do you still need these changes?,import java.util.UUID;,1
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",This change is not right. Please read my review more carefully.,    private volatile TraceServiceModuleConfig config;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Commented out code should be removed.,"            //buildExample(charClassList.get(rnd.nextInt(n)), sb);",1
Lambdas should be replaced with method references,Replace this lambda with method reference 'SlotReference.class::cast'. (sonar.java.source not set. Assuming 8 or greater.),output maybe Alias?,            List<SlotReference> aOutputSlots = a.getOutput().stream().map(slot -> (SlotReference) slot),0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""IGNITE_QUERY_CONTEXT"" 3 times.","Do you mean QCTX_VARIABLE_NAME here instead of ""IGNITE_QUERY_CONTEXT"" ?
BTW 'QCTX_VARIABLE_NAME' constant is not equals to ""IGNITE_QUERY_CONTEXT""
Is it a typo, I've missed smth?","        s.setVariable(""IGNITE_QUERY_CONTEXT"", new ValueRuntimeSimpleObject<>(qctx));",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Is it possible to pull the error message?,"      throw new Exception(""query to Couchbase failed"");",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""handler"" is nullable here.","        countDownLatch.await();
Since we generate a new CountDownLatch in each retry loop.",        handler.getCountDownLatch().await();,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","Some javadoc is needed for this class.
",public abstract class RecursiveScheduledReporter extends ScheduledReporter {,0
"Unused ""private"" fields should be removed","Remove this unused ""batchData"" private field.",remove,  private BatchData batchData;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""createMode cannot be null"" 3 times.",Can't this just call the newly overloaded withOptions and pass in a TTL of -1?,"                this.createMode = Objects.requireNonNull(createMode, ""createMode cannot be null"");",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Could add a comment to explain the usage of this class?,public class ThreadPoolManager {,0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,why is `CompletableFuture` `NotNull` while everything else is not?,"    @NotNull CompletableFuture<?> onRename(String oldName, String newName, ConfigurationNotificationEvent<VIEW> ctx);",0
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),I don't think you need to implement cleanAll to close the writers. This won't be called while apply is running and apply closes all of its writers.,    writers.values().stream().forEach(writer -> writer.close());,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Shouldn't this throw an exception? The Apple security docs state that extra keys in a keychain can cause lookup problems.,    },0
Static non-final field names should comply with a naming convention,"Rename this field ""max_backup_job_num_per_db"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","    public static int max_backup_restore_job_num_per_db = 100;
And I think 100 by default is too large. How about 10?",    public static int max_backup_job_num_per_db = 100;,0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""year"".","This isn't necessarily a year. It may be months, days, or hours. Can we return `intValue()` directly instead?","    Integer year = Long.valueOf(granularity.between(EPOCH, timestamp)).intValue();",1
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.tsfile.utils.ReadWriteIOUtils'.,"I think there has some useless import packages, please check.",import org.apache.iotdb.tsfile.utils.ReadWriteIOUtils;,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,should this be a 5xx return?,"      throw new RuntimeException(""Failed to convert task metadata to Json format"", e);",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""0.10.0"" 7 times.",Thanks for catching this,"      .sinceVersion(""0.10.0"")",0
"Inappropriate ""Collection"" calls should not be made","A ""Map<String, String>"" cannot contain a ""int"" in a ""String"" type.",Should it be `fileCurrentHash.get(fileName)`?,                        if (!newHash.equals(fileCurrentHash.get(i))) {,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Since `isFailure` is set and checked in `commit` phase, do you need to throw `RuntimException` here?
",      throw new RuntimeException(e);,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Why this is a TODO?,    //TODO: data-availability trigger is only enabled for detections running on PINOT only,1
"""Collections.EMPTY_LIST"", ""EMPTY_MAP"", and ""EMPTY_SET"" should not be used","Replace ""Collections.EMPTY_LIST"" by ""Collections.emptyList()"".",`Collections.EMPTY_LIST` is discouraged. We should instead use `Collections.emptyList()` as it adheres properly to generics,        return Collections.EMPTY_LIST;,1
"""public static"" fields should be constant","Make this ""public static EXCLUDE_HTTP_HEADERS"" field final","Use include, rather than exclude.","            public static List<String> EXCLUDE_HTTP_HEADERS = Arrays.asList(""cookie"");",0
Field names should comply with a naming convention,"Rename this field ""_inSegmentTrimLimit"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Change it to `_minSegmentTrimSize` and make it default to 5000, then we can pass it to `GroupByUtils` to calculate the actual trim size",  private final int _inSegmentTrimLimit;,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""table"".",table not used,                OlapTable table = (OlapTable) db.getTableNullable(tableId);,1
Static non-final field names should comply with a naming convention,"Rename this field ""TIMESTAMP_PRECISION"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Just use a local variable is good,"  public static String TIMESTAMP_PRECISION = ""ms"";",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Error in executing plan node: {}"" 6 times.","      LOGGER.warn(""Error in executing plan node: {}"", node, e);","      LOGGER.error(""Error in executing plan node: {}"", node, e);",0
Methods should not have too many parameters,"Constructor has 9 parameters, which is greater than 7 authorized.","Am I rihgt, when I expect that the localFile represnets the artefact file (jar for example)?","    ArtifactSpec(VersionKind kind, String groupId, String artifactId, String versionSpec, String type, String classifier, boolean optional, FileObject localFile, T impl) {",0
Local variables should not shadow class fields,"Rename ""takeLock"" which hides the field declared at line 55.",can we directly use (without local var) `this.takeLock`.lock() and .unlock() ? or assigning to local variable is for any extra level of thread safety purpose?,    final ReentrantLock takeLock = this.takeLock;,1
Unnecessary imports should be removed,Remove this unused import 'java.net.InetAddress'.,"nit: both `InetAddress` and `InetSocketAddress` are no longer in use, imports can be removed.","import java.net.InetAddress;
ImportDeclaration import java.net.InetSocketAddress;",1
Static non-final field names should comply with a naming convention,"Rename this field ""TIME_BUCKETS"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Where are these variables being used?,"  public static String TIME_BUCKETS = ""timeBuckets"";",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,didn't follow this TODO. why would we get info from `getTaskDebugInfo` that's not for this table?,            // TODO: we may want to filter out debug info that does not belong to the given table.,1
Field names should comply with a naming convention,"Rename this field ""_defaultQueriedTimeRangeMs"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",final,  private long _defaultQueriedTimeRangeMs;,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",Add javadoc for `D`,public abstract class Batch<D>{,0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,"  private static final String DOUBLE = ""Double"";","  private final String DOUBLE = ""Double"";",1
Unused method parameters should be removed,"Remove this unused method parameter ""checkpoint"".","What is the advantage of this over a console consumer?
","  public SimpleKafkaConsumer(Properties props, KafkaCheckpoint checkpoint)",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Missing private constructor.,public class ProjectActions {,1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,same as above,"  MasterRepair(""MasterRepair"", UDTFMasterRepair.class);",0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",Why this could be changed? And further as a `volatile`? What are the cases? ,"    private volatile Map<String, String> data;",0
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""key"" parameter (sonar.java.source not set. Assuming 8 or greater.)",nit: redundant brackets around `(key)` and `(userProject)`,        (key) -> writeOptions.add(BlobWriteOption.encryptionKey(key)));,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Correct me if I am wrong, but the earlier piece of code logs the actual exception encountered during attempts, whereas this one will only throw AttemptsExceededException ?","      throw new RuntimeException(""Caught exception while updating ideal state for resource: "" + resourceName, e);",0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".",nit: extract `1_000_000` and `1000` to be a constant with meaningful name or use predefined ones in java library.,"              Math.floorMod(timestampMicros, 1_000_000) * 1000)",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove them.,"  //  /**
FieldDeclaration   //   * a single thread pool, every ""REPORT_INTERVAL_SEC"" seconds, ""reportThread"" will print the
FieldDeclaration   // status
FieldDeclaration   //   * of all raft members in this node
FieldDeclaration   //   */
FieldDeclaration   //  private ScheduledExecutorService reportThread;",1
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,Same suggestion for CST,"class BatchDataReader<CST extends ContentScanTask<?>, G extends ScanTaskGroup<CST>>",0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,Quick comment on visibility purpose,"  final private Map<String, Serializable> knownValues = new HashMap<>();",1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,use camelCased function and parameters,    private void from_packed_datetime (long packed_time) {,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Whats the impact of this change? Does the calling code appropriately bracket this in try/catch? This shouldn't result in query time exceptions.,"    throw new RuntimeException(""Cannot get min value for no dictionary column "" + _operatorName);",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"what's the meaning of this comment?
Before checkpoint, we must replay the journal less than checkPointVersion","        // TODO(wangbo): 2020/2/4 in the case that the [WaitingTxnJob|PendingJob] is checkpointed and replayMethod won't be called, make sure the tablet meta exists in olapTable and TabletInvertedIndex before doris run",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,TODO without a ticket,                // TODO: sanpwc add todo for index integration ticket.,1
"Reflection should not be used to increase accessibility of classes, methods, or fields",This accessibility bypass should be removed.,Will this work on newer Java versions?,"        f.set( obj, v );",0
Unnecessary imports should be removed,Remove this unused import 'org.slf4j.LoggerFactory'.,Is this used?,import org.slf4j.LoggerFactory;,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,add javadoc for each public method,public class LastCacheManager {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,TODO without a ticket ,            // TODO: sanpwc Consider messaging and topology service aggregation.,1
Field names should comply with a naming convention,"Rename this field ""_values"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Are these the key parts? If so, can we name the member as `_keyParts`? `_values` gets confusing.",    private final Object[] _values;,1
Unused local variables should be removed,"Remove this unused ""size"" local variable.","*UnusedVariable:*  The local variable SimpleName is never read. [(details)](https://errorprone.info/bugpattern/UnusedVariable)
(at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)",            final int size = series.getValues().size();,1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",What's this for?,        LinkedList<List<Comparable>> infos = new LinkedList<List<Comparable>>();,0
Class variable fields should not have public accessibility,Make allRcvdMsgsMetricsByNodeId a static final constant or non-public and provide accessors if needed., Are we still need this factory?,"    public volatile Map<UUID, AtomicLong> allRcvdMsgsMetricsByNodeId = new HashMap<>();",0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""maxBalancingTime"".","This change is wrong right?  We no longer check any configured value for HBASE_BALANCER_PERIOD.
U wanted it like 
maxBalancingTime = getConfiguration().getInt(HConstants.HBASE_BALANCER_MAX_BALANCING,  getConfiguration().getInt(HConstants.HBASE_BALANCER_PERIOD,
        HConstants.DEFAULT_HBASE_BALANCER_PERIOD);",    int maxBalancingTime = getConfiguration(),0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"If a decimal scale is beyond our limit in BE, we should log a warning and just return NULL.",                //it will return a wrong num to backend;,0
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,"As this is a class variable, could you please put it up as a static final variable? It seems odd to me seeing it not as one.

Or potentially using a thread local random function as a private static final value instead would be the most performant as random vs thread local random can be somewhat noticeable in added test time over time across whole repos.",  private final Random random = new Random(1);,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,This class could be moved to http plugin instead of exec.,public class HttpUtils {,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Please be explicit about the condition. In the `List<EventQueryCondition>` case, should not have UUID. You should refactor to codes to make 2 `queryEvents` more clear.",    public Events queryEvents(final List<EventQueryCondition> conditions) throws Exception {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Is this talking about what this PR is trying to do?,"            // TODO logs will contend with each other here, replace with e.g. DelayedQueue",1
"Unused ""private"" fields should be removed","Remove this unused ""taskDAO"" private field.",are you using this?,  private TaskManager taskDAO;,1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",                    Set<TNetworkAddress> hostSet = Sets.newHashSet();,                    Set<TNetworkAddress> addresses = new HashSet<TNetworkAddress>();,1
"Track uses of ""FIXME"" tags",Take the required action to fix the issue indicated by this comment.,Check the TODOs.,"                  // TODO FIXME
IfStmt                   //                  if (clusterTSServiceImpl != null) {
IfStmt                   //                    clusterTSServiceImpl.stop();
IfStmt                   //                  }",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,moving in front of `parseMultiple` is better,    public LogicalPlan parseSingle(String sql) throws Exception {,0
Assignments should not be redundant,"Remove this useless assignment; ""memcachConnInfo"" already holds the assigned value along all execution paths.",Can you explain a little about when should use a Map as a memcached client parameters.,"            memcachConnInfo = append(memcachConnInfo, entry.getValue());",0
Printf-style format strings should be used correctly,String contains no format specifiers.,Why use `String.format` as you have no parameters....,"      ret.append(String.format(""host endpoint has not set.""));",1
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,Use `Connection connection = EnvFactory.getEnv().getConnection();`,"                Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");",1
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"Not sure why not just make this class concrete, rather than having a BuilderImpl class to extend it.
",  public static abstract class Builder<T extends Builder<T>> extends KafkaReporter.Builder<T> {,0
"""java.nio.Files#delete"" should be preferred","Use ""java.nio.file.Files#delete"" here for better messages on error conditions.","This is good, please add writeOnlyFile.delete() inside addShutDownHook() method as well.",          writeOnlyFile.delete();,1
"Unused ""private"" fields should be removed","Remove this unused ""loadBalance"" private field.",revert it. ,    private String loadBalance;,0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,Remove it since it is useless :D,  private final String WRONG_TYPE_MESSAGE =,1
Unused local variables should be removed,"Remove this unused ""version"" local variable.",Why do we read the version property here?,"        String version = p.getProperty(""version"");  // NOI18N",1
Unused assignments should be removed,"Remove this useless assignment to local variable ""!unknown!"".",should we use `element()` instead because `peek` may return `null`?,"                Serializable oldVal = oldInnerNodesStack.peek().traverseChild(key, leafNodeVisitor());",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Unexpected upload error"" 3 times.","this conversion doesn't seem in-line with the method signature; the method signature seems to be happy to have more highly specific exception types so perhaps instead of this exception-wrapping, just add `UploadErrorException` to the throws line on 108?","      throw new IOException(""Unexpected upload error"", e);",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"but is that a common scenario?  its probably ok to do this when misconfigured etc right? if you agree, we can remove this TODO",      // TODO : optimize this since throwing and catching exception is cpu intensive,1
"""public static"" fields should be constant","Make this ""public static TRACE_SQL_PARAMETERS"" field final","Add these configs to documentations, otherwise, nobody can find this feature until they read the source codes","            public static boolean TRACE_SQL_PARAMETERS = true;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, limit the max number of parameter
FieldDeclaration              */
FieldDeclaration             public static int SQL_PARAMETERS_MAX_COUNT = 20;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, SkyWalking won't save the entire parameters string into the tag, but only
FieldDeclaration              * the first {@code SQL_PARAMETERS_MAX_LENGTH} characters.
FieldDeclaration              *
FieldDeclaration              * Set a negative number to save the complete parameter string to the tag.
FieldDeclaration              */
FieldDeclaration             public static int SQL_PARAMETERS_MAX_LENGTH = 512;",0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.","We've already got a `serialize(ByteBuffer buffer)` method, why adding this new one?",  public void serialize(OutputStream baos) throws IOException {},1
Unused assignments should be removed,"Remove this useless assignment to local variable ""udafPlan"".",It may be useless?,        UDAFPlan udafPlan = (UDAFPlan) plan;,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Use logger.error rather than print stack trace,      e.printStackTrace();,1
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,Should this be `<=`?,      assert newLimit < limit;,1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,why var names in all caps?,"  SegmentSizeRecommendations estimate(long GSS, int DSS, int NRGS, long NRPP) {",1
"""public static"" fields should be constant","Make this ""public static MAX_DUMP_STACK_DEPTH"" field final",`MAX_DUMP_STACK_DEPTH` -> `DUMP_MAX_STACK_DEPTH`,        public static int MAX_DUMP_STACK_DEPTH = 500;,0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,Interface methods are always public.,    StructWriter<?> create(List<ParquetValueWriter<?>> writers);,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",        List<List<Comparable>> jobInfos = Lists.newArrayList();,        List<List<Comparable>> jobInfos = new ArrayList<List<Comparable>>();,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,lets answer this and either resolve and fix,        // TODO? are these sufficient?,1
Empty statements should be removed,Remove this empty statement.,Remove,    ;,1
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"What if source schema has ""source"" column name? Should we make this configurable?","  private final static String SOURCE_PROPERTY_COLUMN_NAME = ""source"";",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,same here,      e.printStackTrace();,1
Short-circuit logic should be used in boolean contexts,"Correct this ""|"" to ""||"".",            else {,            if (!(fragmentContainsColocateJoin | fragmentContainsBucketShuffleJoin)) {,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,remove `System.out.println`,"                System.out.println(""COPY"");",1
Overriding methods should do more than simply call the same method in the super class,Remove this method to simply inherit it.,Doesn't need to be clonable (nothing clones it).,        protected Object clone() throws CloneNotSupportedException {,1
Static non-final field names should comply with a naming convention,"Rename this field ""disable_storage_medium_check"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Better not changing the default value.
And why not using origin config name?",    public static boolean disable_storage_medium_check = false;,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","I don't get this class. PartitionStorage is deprecated, what's the point? Can you please explain?",abstract class AbstractPageMemoryPartitionStorage implements PartitionStorage {,0
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.db.engine.cache.RamUsageEstimator'.,"This import is added but I cannot find usages of it in this PR, so maybe it is unused?",import org.apache.iotdb.db.engine.cache.RamUsageEstimator;,1
Resources should be closed,"Use try-with-resources or close this """" in a ""finally"" clause.","To ensure absolute accuracy, just compare the writer index before and after",                return src.limit() - src.position();,0
Field names should comply with a naming convention,"Rename this field ""_offset"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Fields should be private,      long _offset;,0
Class names should not shadow interfaces or superclasses,Rename this class.,"I suggest you refactor the name of all ES7 DAO(s), to use `AggregationQueryEs7DAO`, in order to avoid full package name.",public class AggregationQueryEsDAO extends org.apache.skywalking.oap.server.storage.plugin.elasticsearch.query.AggregationQueryEsDAO {,1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,endMessageId can never be null here rt?,        if (endMessageId != null) {,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"All these should be used in `ProfileTaskCommandExecutor#execute`. Once check fails, warning logs should output and the task wouldn't add into the scheduler.",public class ProfileConstants {,0
"Unused ""private"" fields should be removed","Remove this unused ""sampleRate"" private field.","There is no need to use `AtomicXXXX`, primitives should be enough?","        private AtomicReference<Integer> sampleRate;
FieldDeclaration         private AtomicReference<Integer> duration;",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","For a balance, the core strategy is how to choose which tablet, choose src backend, choose dest backend. But I don't see the interface about how to choose dest backend.",public abstract class Rebalancer {,0
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @deprecated Javadoc tag.,return type should be String,"  public List<List<Map<String, Object>>> getSegmentMetadataDeprecated2(",0
"Declarations should use Java collection interfaces such as ""List"" rather than specific implementation classes such as ""LinkedList""","The return type of this method should be an interface such as ""Map"" rather than the implementation ""HashMap"".",UT cover this?,"  public static <K, V> HashMap<K, V> combine(Map<K, V> one, Map<K, V> another, BiFunction<V, V, V> merge) {",0
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,You misunderstand what I mean about this method. This method should be `#checkRegisterStatus` and return true/false. The method will make the codes more clear.,    private String AsserRegister(Invocation invocation) throws URISyntaxException {,0
Functional Interfaces should be as specialised as possible,Refactor this code to use the more specialised Functional Interface 'BinaryOperator<V>',UT cover this?,"  public static <K, V> HashMap<K, V> combine(Map<K, V> one, Map<K, V> another, BiFunction<V, V, V> merge) {",0
"Jump statements should not occur in ""finally"" blocks",Remove this throw statement from this finally block.,nit: the error message should be different if erroring out during renaming.  `fsout` can also be `tmpPath` instead of `fullPath`.,"        throw new HoodieIOException(""Failed to close file "" + fullPath, e);",0
Unnecessary imports should be removed,Remove this unused import 'java.lang.Character.UnicodeScript'.,This `import java.lang.Character.UnicodeScript` seems unnecessary. I think it should be removed.,import java.lang.Character.UnicodeScript;,1
"""InterruptedException"" should not be ignored","Either re-interrupt this method or rethrow the ""InterruptedException"" that can be caught here.",        } catch (Exception e) {,"        } catch (InterruptedException ignored) {
CatchClause         } catch (ExecutionException e) {",0
Field names should comply with a naming convention,"Rename this field ""WRONG_TYPE_MESSAGE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Remove it since it is useless :D,  private final String WRONG_TYPE_MESSAGE =,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Missing database in table identifier: %s"" 4 times.",Why restrict namespaces to 1 level?,"                ""Missing database in table identifier: %s"", identifier);",0
"Unused ""private"" methods should be removed","Remove this unused private ""getAllFiles"" method.","nit: no used function `getAllFiles`, could we remove it？ or Am I missing something？","  private List<Path> getAllFiles(HoodieSparkEngineContext engineContext, String basePath) throws IOException {",1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"Do not use sout, throw this exception and add throw declarations if necessary. But, I am curious why could not you use the datatypes in the QueryPlan, isn't this what this pr is for？",            System.out.println(e);,1
Unused assignments should be removed,"Remove this useless assignment to local variable ""dictionaryPageReadStore"".",Looks like this isn't used anymore.,        dictionaryPageReadStore = reader.getNextDictionaryReader();,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""localhost"" 5 times.","""http"" replace to pcTypeEnum.HTTP.getName()","        list.add(URIRegisterDTO.builder().appName(""test1"").rpcType(""http"").host(""localhost"").port(8090).build());",0
Unused local variables should be removed,"Remove this unused ""attributes"" local variable.",SimpleName seems unused,                        List<DocTree> attributes = TreeShims.getSnippetDocTreeAttributes(tag);,1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"Change it config, can be same as max_pending_load_jobs",    private static final int desiredMaxWaitingSize = 100;,0
"""catch"" clauses should do more than rethrow",Add logic to this catch clause or eliminate it and rethrow the exception automatically.,What is this? Please add a comment,            throw oom;,0
Static non-final field names should comply with a naming convention,"Rename this field ""CREATE_DOUBLE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",CREATE_DOUBLE -> createDoubleF,"    private static Function<Metric, Measure> CREATE_DOUBLE = m ->",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove it.,//    timeBuffer.clear();,1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",Have you checked the permissions for this operation?,    public void analyze(Analyzer analyzer) throws AnalysisException {,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,please be consistent with parameter names. Keep camel case for functionId also keep variable name same as parameter name.,"      @QueryParam(""endTime"") Long endTime) throws Exception {",0
Field names should comply with a naming convention,"Rename this field ""WRONG_OPERAND_MESSAGE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Remove it.,  private final String WRONG_OPERAND_MESSAGE =,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","Should return an `ImmutableList`.
",    return new ArrayList<WorkUnit>(this.weightedWorkUnitQueue);,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Could we test multiple operations and verify that after the first one fires the rest don't continue to sleep?,    public void testBackgroundLatencyUnSleep() throws Exception,0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".","I get the intention, but what makes 48h the right number? maybe 7 days? or 3?",  private long maxMergeDurationLength = 48 * 60 * 60 * 1000; // 48 hours,0
Redundant casts should not be used,"Remove this unnecessary cast to ""int"".",Thats ok ,"    final int idx = (int) Math.floorMod(hashOfKey, candidatePartitions.size());",0
Double Brace Initialization should not be used,Use another way to initialize this instance.,(minor) Add a new category for them as they are not tuple selection,"          put(canonicalize(TransformFunctionType.IS_NULL.getName().toLowerCase()), IsNullTransformFunction.class);",0
Field names should comply with a naming convention,"Rename this field ""_ingestionTimestamp"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",default to Long.MIN_VALUE?,  private long _ingestionTimestamp;,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"Constant member should have an all-capital name.
","  private static final String SchemaString = ""{\n""+",1
"""toString()"" should never be called on a String object","""originStmt"" is already a string, there's no need to call ""toString()"" on it.","                            + "" Nereids cannot process this statement: \""{}\""."", originStmt);","                            + "" Nereids cannot process this statement: \""{}\""."", originStmt.toString());",1
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,Do we have tickets for unsupported types?,        assert relType instanceof BasicSqlType,0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"Same here, we might want to check broker query for EXPLAIN",    if (serverPinotQuery.isExplain()) {,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"This should throw a more specific type of exception than `Exception` (eg. `AttemptsExceededException`, etc.).",  void attempt(Callable<Boolean> operation) throws Exception;,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Keep the underlying stack trace for debugging purpose
      throw new RuntimeException(e);",      throw new RuntimeException(e.getMessage());,1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"enum values are constants and should always be capitalized. If we need to use small letters, we can use enum with constructors.","    chaosagent,",0
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),Missed busylock?,            mgmtPool.submit(() -> updateFullCfg());,0
"Unused ""private"" methods should be removed","Remove this unused private ""getLatestCommitMetadata"" method.",this method still needed?,  private static Option<HoodieCommitMetadata> getLatestCommitMetadata(HoodieTableMetaClient metaClient) {,1
"Unused ""private"" fields should be removed","Remove this unused ""httpMaxRequestHeaderSize"" private field.",Is this the default value of Jetty?,    private int httpMaxRequestHeaderSize = 8192;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"Use `2 spaces` instead of `TAB` as indent characters.
Consider importing the code format  `$IoTDB_HOME/java-google-style.xml` into IDE.",   // throw new SQLException(METHOD_NOT_SUPPORTED_STRING);,0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,"If we change the boundary to `ScanTask`, then this method can accept `ContentScanTask<?>`.","  protected Map<Integer, ?> constantsMap(CST task, Schema readSchema) {",1
"""throws"" declarations should not be superfluous","Remove the declaration of thrown exception 'java.lang.Exception', as it cannot be thrown from method's body.",moving in front of `parseMultiple` is better,    public LogicalPlan parseSingle(String sql) throws Exception {,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""newKafkaOffsets"" is nullable here.","This will cause a NullPointerException on line 596.

","    Map<TopicPartition, OffsetAndMetadata> offsets = null;",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"What exception you see if when running with ORC? I would have thought that it should work fine.
Also I think it is  disabled for Avro also now. ",      //TODO: ORC file now not support target file size,0
Resources should be closed,"Use try-with-resources or close this ""FileInputStream"" in a ""finally"" clause.",close both and close in finally or try-with-resource,    InputStream is = new FileInputStream(inFile);,1
Redundant casts should not be used,"Remove this unnecessary cast to ""PropertyChangeListener"".",                PropertyChangeListener pcl = listeners.get(i);,"                PropertyChangeListener pcl = 
CastExpr                     (PropertyChangeListener)listeners.get(i);",1
Field names should comply with a naming convention,"Rename this field ""_currentBlockEndDocId"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",I would recommend making both endDocId and this exclusive. Currently the numDocsScanned value is incorrect.,      int _currentBlockEndDocId = -1;,0
Unused local variables should be removed,"Remove this unused ""influxDB1"" local variable.",```,"    InfluxDB influxDB1 = IoTDBInfluxDBFactory.connect(""http://127.0.0.1:6667"", ""root"", ""root"");",1
Unused assignments should be removed,"Remove this useless assignment to local variable ""headers"".","Hi, pls remove this line, the `header` is not used, right?","        Map<String, Object> headers = new HashMap<>(2, 1);",1
Package names should comply with a naming convention,Rename this package name to match the regular expression '^[a-z_]+(\.[a-z_][a-z0-9_]*)*$'.,"Please write few comments in your pull request to explain what you try to achieved here and how you do it. The commit 'title' sometimes is not sufficient, especially for this scale of code change (adding). ",package com.linkedin.thirdeye.anomalydetection.performanceEvaluation;,0
"""equals(Object obj)"" and ""hashCode()"" should be overridden in pairs","This class overrides ""equals()"" and should therefore also override ""hashCode()"".","What if obj is not an instance of  RoutineLoadTaskInfo?
You should check it first",    public boolean equals(Object obj) {,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,how about use log to replace system.out,"        System.out.println(""selector processing : name = "" + selectorData.getName());",1
Field names should comply with a naming convention,"Rename this field ""_sleepTimeInMilliseconds"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",We should stop the new thread when the broker is shutting down.,        private long _sleepTimeInMilliseconds;,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""type"" is nullable here.","Can you open a separate PR for Java fixes? This looks good to me, but we try not to mix changes like this into other PRs to avoid commit conflicts when cherry picking to maintain branches.

This also causes the full test suite to run for this PR, which I'm sure is annoying!","    Preconditions.checkArgument(type != null && type.isNestedType() && type.asNestedType().isStructType(),",0
"Unused ""private"" classes should be removed","Remove this unused private ""DecryptedFileScanTask"" class.",Is this still used?,    private final class DecryptedFileScanTask {,1
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","Do we set the config from multiple threads?
Do we set the config at all?

I think this could be `final` instead of `volatile`, as we so not set the conf, we create a new `NonSerializingConfig`",    private transient volatile Configuration conf;,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,(nit) might want to add it also derives CPS.,"    SegmentSizeRule, // This rule must be the first rule. It provides segment count, segment size, numRows in segments which are used in other rules",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"Can we only support Snippets in this API? One can simulate `PlainText` via `Snippet` with no parameters, right? ",        Snippet(2);,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,What about `Mode.Xml.updateConstraints(String)`?,"    public final static void updateModeConstraintsFromXml(WindowManager windowManager, String xml) {",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,remove this?,      e.printStackTrace();,0
Empty arrays and collections should be returned instead of null,Return an empty collection instead of null.,Let's throw not implemented exception in such cases.,        return null;,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Remember to add comments for these classes in the meter analyzer packages.,public final class DSL {,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"Sorry I did not make it clear, I mean COLUMN_TIMESERIES_DataType -> COLUMN_TIMESERIES_DATATYPE and
COLUMN_TIMESERIES_Encoding -> COLUMN_TIMESERIES_ENCODING since static final variables should be in the upper case. And please revert the strings because other column names are still in lower case.","  public static final String COLUMN_TIMESERIES_Encoding = ""ENCODING"";",1
"Unused ""private"" methods should be removed","Remove this unused private ""getFileReader"" method.",Will this unused method be used later?,  private TsFileSequenceReader getFileReader(TsFileResource tsFileResource) throws IOException {,1
Field names should comply with a naming convention,"Rename this field ""_hitCounterInSecond"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",  private HitCounter _qpsTracker;,  private HitCounter _hitCounterInSecond;,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,Let's remove the System.outs,"    System.out.println(""Blob name: "" + blobName);",1
Field names should comply with a naming convention,"Rename this field ""_buffer"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(nit) move this before `_bitmaps`,  private final PinotDataBuffer _buffer;,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,Change it to a configuration of frontend,    private static final int desiredMaxWaitingSize = 100;,0
Jump statements should not be redundant,Remove this redundant jump.,Should we throw exception when schema cannot be inferred?,      return;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove it,"        // return tableId == that.tableId && orderedShuffledColumns.equals(that.orderedShuffledColumns)
MethodDeclaration         //         && shuffleType == that.shuffleType && partitionIds.equals(that.partitionIds)
MethodDeclaration         //         && equivalenceExprIds.equals(that.equivalenceExprIds)
MethodDeclaration         //         && exprIdToEquivalenceSet.equals(that.exprIdToEquivalenceSet);",1
Local variables should not shadow class fields,"Rename ""pageMemory"" which hides the field declared at line 38.","Please assert that memory allocator configuration has type ""unsafe""","        PageMemory pageMemory = new PageMemoryNoStoreImpl(new UnsafeMemoryProvider(null), cfg, ioRegistry);",0
Short-circuit logic should be used in boolean contexts,"Correct this ""&"" to ""&&"".","No need (and should not) to check the boundary of values, same for other places
      for (int j = 0; j < numDocs; j++) {",      for (int j = 0; j < numDocs & j < values.length; j++) {,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""result"".",remove local variable assignment since it's not used?,"        Map<String, Boolean> result = deleteFilesParallelize(metaClient, skipped, context, true);",1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,      Assert.fail(e.getMessage());,      e.printStackTrace();,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Is it still actual?,            // H2Utils.resetSession(this);,0
"Unused ""private"" fields should be removed","Remove this unused ""mergeContext"" private field.",remove this? or rename it,  private QueryContext mergeContext = new QueryContext();,1
Unused local variables should be removed,"Remove this unused ""fieldCount"" local variable.",The value of the local variable `fieldCount` is not used,    int fieldCount = 0;,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"For refresh, there's no interface or class but for Google see data-transfer-project/extensions/data-transfer/portability-data-transfer-google/src/main/java/org/dataportabilityproject/datatransfer/google/common/GoogleCredentialFactory.java","          // TODO: I think the token/secret expire, we need to check into refreshing them",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,No longer needed ?,//        ArgumentAttr.LocalCacheContext cacheContext = argumentAttr.withLocalCacheContext();,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,add some context in exception ,        throw new Exception();,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Can you create a more specified exception class?,"  void consumeRecordStream(RecordStreamWithMetadata<D, S> stream) throws Exception;",1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""node"" is nullable here.","The String concat is an overhead in single node IoTDB, could we avoid this?","      IoTDB.metaManager.updateLastCache(node.getFullPath() + IoTDBConstant.PATH_SEPARATOR + measurementList[i],",0
Unnecessary imports should be removed,Remove this unused import 'java.util.function.Consumer'.,"Jackpot:
warning: Unused Import",import java.util.function.Consumer;,1
Using slow regular expressions is security-sensitive,"Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.","Could you put a benchmark test case about this REGEX? And put a result in comment? In our experiences, REGEX is powerful, but cause performance issues in many scenarios.","    private static final Pattern URL_REGEX = Pattern.compile(""(?<pref>http(s)?://)*(?<domain>[\\w_.\\-\\d]+(:\\d+)?)?/(?<path>solr/(?<collection>[\\w_]+))?(/.*)?"");",1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,add some annotations,"    NoPartition, InPartition, PrevPartition",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Maybe you can check metric module whether is used in this class, and not use `if (MetricConfigDescriptor.getInstance().getMetricConfig().getEnableMetric())` in other module",public class CompactionMetricsManager {,0
Boolean expressions should not be gratuitous,"Remove this expression which always evaluates to ""true""",children().size() - 1,        if (null == inPredicate || inPredicate.getChildren().size() * complex > Config.max_distribution_pruner_recursion_depth) {,0
Raw types should not be used,Provide the parametrized type for this generic.,"Please use `HashMap<>(2, 1)` here","        Map<String, Object> headers = new HashMap(2, 1);",1
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,Why these methods have first letter in upper case? ,        public GenerateAnalyzerSettingFunc GetGenerateFunc() {,1
Empty arrays and collections should be returned instead of null,Return an empty array instead of null.,"Hi @hddong, how about return an empty array here as before. it seems will cause an NPE in `org/apache/hudi/cli/HoodiePrintHelper.java:92`",      return null;,0
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @deprecated Javadoc tag.,You may just remove this method.,"  public void updateTime(String deviceId, long time) {",0
"""ThreadLocal"" variables should be cleaned up when no longer used","Call ""remove()"" on ""recursiveCall"".","Is a thread local really necessary to trigger this?
",      private static final ThreadLocal<Boolean> recursiveCall = new ThreadLocal<Boolean>();,1
"Nested ""enum""s should not be declared static","Remove this redundant ""static"" qualifier; nested enum types are implicitly static.","Suggestion for alternative way of doing this:
 java
  private static enum Command {
    JOBS(JobCommand.getClass()), 
    TASKS(TaskCommand.getClass());

    private Class<? extends Command> commandClass;

    Command(Class<? extends Command> commandClass) {
      this.commandClass = commandClass;
    }

    public Command getCommandObject(CommandLine parsedOpts) {
      return ConstructorUtils.invokeConstructor(this.commandClass, parsedOpts);
    }
  }

then in `execute()` you can do:

Command.valueOf(this.command.toUpperCase()).getCommandObject(parsedOpts).execute();

IMO it makes it easier to add more commands in the future.

I would also move `Command` enum to a separate top level class.
",  private static enum Command {,0
Raw types should not be used,Provide the parametrized type for this generic.,Can you check types? I think this should be `Iterator<T>`,  public Iterator iterator() {,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove commented-out codes,   // throw new SQLException(METHOD_NOT_SUPPORTED_STRING);,1
Unused local variables should be removed,"Remove this unused ""taskIds"" local variable.","Rename to CreateMonitorTaskId
",      List<Long> taskIds = createAnomalyTasks(anomalyJobSpecs);,0
Character classes in regular expressions should not contain the same character twice,Remove duplicates in this character class.,"Could you put a benchmark test case about this REGEX? And put a result in comment? In our experiences, REGEX is powerful, but cause performance issues in many scenarios.","    private static final Pattern URL_REGEX = Pattern.compile(""(?<pref>http(s)?://)*(?<domain>[\\w_.\\-\\d]+(:\\d+)?)?/(?<path>solr/(?<collection>[\\w_]+))?(/.*)?"");",0
"Mutable fields should not be ""public static""","Make this member ""protected"".",Not your fault but usually we capitalize static variable names. This is ok for now. We can change in another PR,"  public static final byte [] regexStringNoCaseType = new byte [] {'r','e','g','e','x',",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"I think we missed an annotation for this, this config would never be initialized. :)

Also, MySQL/POSTGRESQL/MARIADB seems the same, is there any reason to separate them? @ascrutae. I think the only case is, an app is using 2 kinds of DB, but wants to trace one but not for the other. Is this really reasonable?",        public static class MARIADB {,0
Loops should not be infinite,Add an end condition to this loop.,When and why this exception happens?,"                        log.error(""consume record error"", t);",0
Field names should comply with a naming convention,"Rename this field ""_tableNameWithType"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(minor) make them `final`,    String _tableNameWithType;,0
"Classes from ""sun.*"" packages should not be used",Use classes from the Java API instead of Sun classes.,Can not do this change and below in this file.  We dont want to directly refer Unsafe class.  This can cause ClassNotFoundError for some JVMs.  That is why we hide the usage under UnsafeAccess and there via reflection we load and catch Exception also.,import sun.misc.Unsafe;,1
Static non-final field names should comply with a naming convention,"Rename this field ""MAPPER"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",final,  private static ObjectMapper MAPPER =,0
Field names should comply with a naming convention,"Rename this field ""_tunerConfigs"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(nit) name it `_tunerConfigList`?,  private List<TunerConfig> _tunerConfigs;,1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"        if (functionCallExpr.isDistinct()) {
            return false;
        }",        if (functionName.toLowerCase().equals(AggregateType.SUM.name().toLowerCase()) || functionName.toLowerCase().equals(AggregateType.MAX.name().toLowerCase()) || functionName.toLowerCase().equals(AggregateType.MIN.name().toLowerCase()) || functionName.toLowerCase().equals(FunctionSet.COUNT)) {,1
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,"How about array of parameterized type?
",  public static TypeToken<?> getArray(Type componentType) {,1
"Unused ""private"" fields should be removed","Remove this unused ""_brokerMetrics"" private field.",Remove this line,  private BrokerMetrics _brokerMetrics;,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Why not put it under the test package?,public class ConfigNodeEnvironmentUtils {,0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".",add a parameter,  public static final long DELETE_WAL_FILES_DELAY_IN_MS = 10 * 60 * 1000;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"remame var from statsCollector to timeColStatsCollector. Also, add javadocs.","  String getSegmentName(AbstractColumnStatisticsCollector statsCollector, SegmentNameConfig segmentNameConfig) throws Exception;",0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","volatile is not required - as far as I can see, the field will be processed only by discovery thread","    @Nullable private volatile MonitoringListImpl<String, CacheView> cachesMonList;",1
"""public static"" fields should be constant","Make this ""public static rebalance_move_expire_after_access"" field final","If only valid for PartitionRebalancer, the name would better add a partition prefix.",    public static long rebalance_move_expire_after_access = 600; // 600s,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,TODO without a ticket,                // TODO: sanpwc is MvTableStorage mock really ok? - remove after all tests will become green.,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Might as well mark as @deprecated now,     * TODO: deprecate once all serviceProviders implement the above version of this method.,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"throwing `Error` is a bit too harsh, let's change it to `RuntimeException`",                    throw new Error(e);,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove,    // chunkWriter = null;,1
Unused method parameters should be removed,"Remove this unused method parameter ""columnArray"".","The name is too general, which makes it a function to build any kind of query. Some name like `buildExtractMetadataQuery` is better.  

It's also better to return the query string instead of setting `updatedQuery` inside the function. The value assignment can be done in `extractMetadata`.","  protected void buildQuery(String inputQuery, String entity, JsonArray columnArray) {",0
Jump statements should not be redundant,Remove this redundant jump.,What's this method for? ,  public default void initializeClient(String topic) { return; },0
Unused local variables should be removed,"Remove this unused ""javaPath"" local variable.","I wonder what is the point of ""//""?

Anyway, a better way may be JavaPlatformManager.getDefaultPlatform().findTool(""java"").","        String javaPath = javaBinPath.getAbsolutePath() + ""//java"";  //NOI18N",0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","`Lists.newArrayList` to be consistent.
",    List<Metric> metrics = new ArrayList<Metric>();,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"The check for `min > _max || max < _min` is critical and can only be performed here for raw columns. However, ranges with `min > max` making it down to this level is a problem with the query planner and should be fixed there (even on the broker)","    // TODO: Handle this before reading the range index
IfStmt     if (min > max || min > _max || max < _min) {
ReturnStmt       return 0;
ReturnStmt     }",0
"""@Deprecated"" code should not be used","Remove this use of ""newInstance""; it is deprecated.","It's better to use `T state = ...` so you don't need to add `SuppressWarnings(""unchecked"")`
",        State state = this.stateClass.newInstance();,0
Classes should not be empty,"Remove this empty class, write its code or make it an ""interface"".","why is this needed?
",class Dummy {,1
Field names should comply with a naming convention,"Rename this field ""_records"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",initialize in the constructor with maxCapacity to avoid resizes,  private List<TableRecord> _records = new ArrayList<>();,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","Can just use diamond operator on RHS
","    HashMap<String, String> hm = new HashMap<String, String>();",1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,I think `e.printStackTrace()` should be remove.,            e.printStackTrace();,1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"Here,do you mean that if namespace is empty,then return the value by parseInstanceIdFromEndpoint() method?",        if (StringUtils.isNotEmpty(this.namesrvAddr)) {,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""dataVersionList"".",It seems unnecessary to create a new ArrayList.,"        List<Map<String, Object>> dataVersionList = new ArrayList<Map<String, Object>>();",1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"I think we need to check `at most one` for `OnlyAdditional` and `OriginAndAdditional`.
Both existing seems a conflict in the following logic.","                if (field.isAnnotationPresent(SQLDatabase.AdditionalEntity.OnlyAdditional.class)
MethodCallExpr                     || field.isAnnotationPresent(SQLDatabase.AdditionalEntity.OriginAndAdditional.class)) {",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Maybe more direct naming as to what this is doing? e.g. `getListenerResponses` and add a javadoc as to which listeners its currently listening on.,"  private Map<String, AddSpecResponse> updateHelper(Spec spec, boolean triggerListener) throws Throwable {",0
"Unused ""private"" fields should be removed","Remove this unused ""LOG"" private field.",Should we extend from `FlinkSizeBasedClusteringPlanStrategy` instead ?,  private static final Logger LOG = LogManager.getLogger(FlinkRecentDaysClusteringPlanStrategy.class);,0
Unnecessary imports should be removed,Remove this unused import 'com.google.common.collect.Lists'.,Is this needed?,import com.google.common.collect.Lists;,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,add an empty method `processEntity(String)`,        // TODO process entityStr,0
Raw types should not be used,Provide the parametrized type for this generic.,"We used to add `// NOI18N` to mark strings that shouldn't be translated. Having them in some `static final String` constant would be even better, especially when used sever times.

`new HashSet(1)` seems strange. Such size cannot even access a single element (as the ratio is `0.75` by default and `1 * 0.75 < 1`), is that what you wanted?","        ModeParser modeParser = ModeParser.parseFromString(""NO_NAME_YET"", new HashSet(1));",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Please add a link to some issue," * TODO optimize: now we have slow {@link #removePage(long, long)}.",1
Field names should comply with a naming convention,"Rename this field ""MM2SourceAlias"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","I can't find the place using these, have you submitted all codes?","    private String MM2SourceAlias = """";
FieldDeclaration     private String MM2SourceSeparator = """";",0
Class variable fields should not have public accessibility,Make PEER_MAX_LENGTH a static final constant or non-public and provide accessors if needed.,"Move this to Plugin, this is not a part of core API, right? And don't put plugin name in comments, you wouldn't know when someone add it to somewhere else, considering `PeerUtil` is a core API",        public static int PEER_MAX_LENGTH = 200;,0
Anonymous inner classes containing only one method should become lambdas,Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.),Lambda?,"        addPropertyChangeListener(  DropDownButtonFactory.PROP_DROP_DOWN_MENU,new PropertyChangeListener() {",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""unable to initialize spark context "" 3 times.","IMO, this error description is not correct, right? The throwable not only covers the initialization of the spark context","      LOG.error(""unable to initialize spark context "", ex);",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""yyyyMMdd"" 3 times.","*[JodaConstructors](https://errorprone.info/bugpattern/JodaConstructors):*  Use of certain JodaTime constructors are not allowed.

---


        long timeFloor = Long.parseLong(DateTime.now().plusDays(1 - ttl).toString(""yyyyMMdd""));



---

<details><summary><b>ℹ️ Learn about @sonatype-lift commands</b></summary>

You can reply with the following commands. For example, reply with ***@sonatype-lift ignoreall*** to leave out all findings.
| **Command** | **Usage** |
| ------------- | ------------- |
| `@sonatype-lift ignore` | Leave out the above finding from this PR |
| `@sonatype-lift ignoreall` | Leave out all the existing findings from this PR |
| `@sonatype-lift exclude <file\|issue\|path\|tool>` | Exclude specified `file\|issue\|path\|tool` from Lift findings by updating your config.toml file |

**Note:** When talking to LiftBot, you need to **refresh** the page to see its response.
<sub>[Click here](https://github.com/apps/sonatype-lift/installations/new) to add LiftBot to another repo.</sub></details>



---

Was this a good recommendation?
[ [? Not relevant](https://www.sonatype.com/lift-comment-rating?comment=337688400&lift_comment_rating=1) ] - [ [? Won't fix](https://www.sonatype.com/lift-comment-rating?comment=337688400&lift_comment_rating=2) ] - [ [? Not critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=337688400&lift_comment_rating=3) ] - [ [? Critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=337688400&lift_comment_rating=4) ] - [ [? Critical, fixing now](https://www.sonatype.com/lift-comment-rating?comment=337688400&lift_comment_rating=5) ]","        long timeFloor = Long.parseLong(new DateTime().plusDays(1 - ttl).toString(""yyyyMMdd""));",0
Static non-final field names should comply with a naming convention,"Rename this field ""SNAPSHOT_SEND_BUFFER_SIZE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Same about the name. And is 50 enough? From my understanding, we do thread dump every 10ms, then we could have 100 in one second. I think as we could collect 5 parallel, you will highly trigger queue abandon mode easily. 
I suggest at least 5 * 500. @kezhenxu94 What do you think? ",        public static int SNAPSHOT_SEND_BUFFER_SIZE = 50;,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,We don't typically do `e.printStackTrace();`,      e.printStackTrace();,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Is it intentionally named with a `Service` suffix? Seems very different from others,public class PluginConfigService implements PluginConfig {,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",why size() + 3?,    List<TypeAdapterFactory> factories = new ArrayList<TypeAdapterFactory>(this.factories.size() + this.hierarchyFactories.size() + 3);,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Fail to find config file {}"" 3 times.","        logger.error(""Fail to find the engine config file"");","        logger.error(""Fail to find config file {}"");",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",Why do we need a separate reader. Does Flink have its own one for parquet?,public abstract class AbstractColumnReader<V extends WritableColumnVector>,0
Field names should comply with a naming convention,"Rename this field ""_log2M"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(nit) Rename to `_log2m`?,  protected final int _log2M;,1
Nested code blocks should not be used,Extract this nested code block into a method.,What are these brackets for?,                {,1
"Unused ""private"" fields should be removed","Remove this unused ""logger"" private field.",Looks like we can remove this logger as well.,  private static final Logger logger = LoggerFactory.getLogger(GoogleContactsServiceTest.class);,1
"Unused ""private"" fields should be removed","Remove this unused ""currentAttempts"" private field.","above, it looked like IntegerLiteralExpr is the default/fallback for both generation and attempts, but here and below it seems that attempts begins at 0, but generation begins as 1.
1. why a different starting value for each?
2. for whatever starting value we use, is there a discrepancy between the `getProp` fallback and here?","  private int currentGeneration = 1;
FieldDeclaration   private int currentAttempts = 0;",0
"Unused ""private"" fields should be removed","Remove this unused ""meterConvertWorker"" private field.","You will face a bug when `Runtime.getRuntime().availableProcessors()`=1, I think. 
And take a look at `BulkConsumePool`, this usually accepts a System ENV override.",    private int meterConvertWorker = Runtime.getRuntime().availableProcessors() / 2;,0
"Unused ""private"" methods should be removed","Remove this unused private ""setOptions"" method.",Is this still used?,"  private static void setOptions(PinotQuery pinotQuery, List<String> optionsStatements) {",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"            throw new Error(""[Bug warning]ElasticSearch client query template result is not consistent. Please file an issue to Apache SkyWalking.(https://github.com/apache/skywalking/issues)"");","            throw new Error(""Bug!!! ElasticSearch client query template result is not consistent"");",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","The number of devices in a system is rather limited and holding all in memory is not a burden, so I do not suggest making it an LRU cache for meaningless overhead. 
Nevertheless, I seriously doubt the performance of using a List, as the `contains()` method can be extremely slow even when there are only thousands of devices (not to mention you are using a COWList). I strongly recommend using a HashSet.",public abstract class DeviceIdCache {,0
Lambdas containing only one statement should not nest this statement in a block,Remove useless curly braces around statement and then remove useless return keyword (sonar.java.source not set. Assuming 8 or greater.),"I have several comments here:
1. `thenComposeAsync` is not needed here, since the lambda inside is already an async operation, `thenCompose` should be enough.
2. `thenCompose` enforces serialized reads from the vault, which we don't need. I think that `thenCombine` method is more effective here.
3. The big lambda inside should be extracted into a separate method (e.g. `readAll`).

Taking this into account, we can refactor the method using a following approach:
CompletableFuture<Data> future = vaultMgr.get(MetaStorageManager.APPLIED_REV)
        .thenCombineAsync(vaultMgr.get(CONFIGURATION_REVISIONS_KEY), this::readAll, threadPool);

return registerFuture(future);",                .thenComposeAsync(appliedRevEntry -> {,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""The environment variable SW_ENABLE_UPDATE_UI_TEMPLATE is false."" 3 times.","                                                 .message(""The dashboard creation has been disabled. Check SW_ENABLE_UPDATE_UI_TEMPLATE on xxx(doc URI) to activate it."")","                                                 .message(""The environment variable SW_ENABLE_UPDATE_UI_TEMPLATE is false."")",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"(nit) `SegmentLineageUtils`
Also add a private constructor",public class SegmentLineageUtil {,1
Field names should comply with a naming convention,"Rename this field ""REQUEST"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Move `REQUEST` and `STATUS_CODE` to `HttpConstants`. They may be used by other kinds of response handler, say `HttpResponseHandler`","  private final String REQUEST = ""request"";",0
"Mutable fields should not be ""public static""","Make this member ""protected"".","We should make default values smaller and fewer. Let's go with 100, 250, 500, 1000, 2500 milliseconds.","    public static final long[] HISTOGRAM_BUCKETS = new long[] {1_000, 50_000, 75_000, 100_000, 250_000, 500_000,",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Its ok not to get here but leave that to be decoded within SizeCachedKeyValue.  So we can remove this TODO  IMO,          // TODO : getRow len here.,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove unused comment,//              measurementSize);,1
Static non-final field names should comply with a naming convention,"Rename this field ""VALUE_LENGTH"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Should be renamed to `VALUE_MAX_LENGTH `.  ,        public static int VALUE_LENGTH = 128;,1
Unnecessary imports should be removed,Remove this unused import 'org.apache.rocketmq.common.protocol.body.ProducerInfo'.,Unused import ?,import org.apache.rocketmq.common.protocol.body.ProducerInfo;,1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"better to extract these complicate condition statements into a private method, since they appear not only once in this file (for example, in lines 395-398)","      if ((!seqPageReaders.isEmpty() && orderUtils
MethodCallExpr           .isOverlapped(firstPageReader.getStatistics(), seqPageReaders.get(0).getStatistics()))
EnclosedExpr           || (!unSeqPageReaders.isEmpty() && orderUtils
MethodCallExpr           .isOverlapped(firstPageReader.getStatistics(),
MethodCallExpr               unSeqPageReaders.peek().getStatistics()))) {",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""limit"" 3 times.",Same concern about performance when no need of debug logging.,"            Arrays.toString(parameter.get(""from"")), Arrays.toString(parameter.get(""limit"")));",0
Unused assignments should be removed,"Remove this useless assignment to local variable ""taskIds"".","s/Anomly/Anomaly/ and elsewhere (eg createAnomlyJob)
",    List<Long> taskIds = createAnomlyTasks(anomalyFunctionSpec);,0
Unnecessary imports should be removed,Remove this unused import 'java.net.InetAddress'.,"nit: same here, no longer in use.","import java.net.InetAddress;
ImportDeclaration import java.net.InetSocketAddress;",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove this comment,"        //        IoTDB.schemaProcessor.collectMeasurementSchema(prefixPath, results);",1
Unnecessary imports should be removed,Remove this unused import 'java.util.concurrent.atomic.AtomicInteger'.,leftover?,import java.util.concurrent.atomic.AtomicInteger;,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,dead code ?,//                            type.add(UseTypes.READ);,1
Methods should not have too many parameters,"Method has 8 parameters, which is greater than 7 authorized.",check who use this previous,  public static String generateNewTsFilePath(,0
"Fields in a ""Serializable"" class should either be transient or serializable","Make ""dataFileCommitTime"" transient or serializable.","Can you check if you can properly serialize/deserialize this object. AFAIK, Optional is not serializable ",  private Optional<String> dataFileCommitTime;,1
Raw types should not be used,Provide the parametrized type for this generic.,"if filter is null, jobInfos can be assigned with schemaChangeJobInfos without iterating schemaChangeJobInfos one by one",        for (List<Comparable> infoStr : schemaChangeJobInfos) {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,        // TODO: IGNITE-13668 decimal support,        // TODO: decimal support,0
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,"According to what we discussed before, in terms of expressions, try not to use the combination + inheritance method but directly use the inheritance method.
So I suggest that there should be `and`, `or` two separate expr classes and unified inheritance from `compoundpredicate`.","public class CompoundPredicate<LEFT_CHILD_TYPE extends Expression, RIGHT_CHILD_TYPE extends Expression>",0
Child class methods named for parent class methods should be overrides,"Rename this method; there is a ""private"" method in the parent class with the same name.",Should this be synchronized to avoid extra work?,    private void inferCaller() {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Does this TODO cover things like making CharSequences that have visually the same chars actually show up differently?

One of my _BIG_ issues with test frameworks is when they say:
Expected:
 foobar
got:
 foobar

And I need to work out wtf is wrong. Bear in mind that it not just class difference (String != StringBuilder) it can also be things like:
  ""é"" is not ""é""
where combining characters are used.
For example see: http://www.fileformat.info/info/unicode/char/0301/index.htm

Having at least the char index where they first differ would be an idea (something like ""H[é]llo"" is harder as you have identify grapheme-clusters to isolate the visual character and know where to add the [,]'s but it's doable or just dump the first differing char value in hex perhaps.

Not necessary in this CL, but food for thought.
",   * TODO(cgruber): Do something closer to what JUnit's {@code ComparisonFailure} does.,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,`e.printStackTrace()` can be replaced with logger,      e.printStackTrace();,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""http://"" 4 times.","Can we have a default implementation of this, it looks they're all the same except for the message type anyway.","      return ""http://"" + hostPort + getUri(MSG_TYPE_EXTEND_BUILD_TIME);",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove commented code.,"//                pageList.set(j, rewrite(pageList.get(j)));",1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",check priv ？,    public void analyze(Analyzer analyzer) {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Does it make sense to move this TODO to the build script? ,"  // TODO: build script, which should take cloud extension name and environment (e.g. local) as",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove the comment?,"//    return greatCircleDistance(leftPoint.getY(), leftPoint.getX(), rightPoint.getY(), rightPoint.getX());",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove,  // ReentrantReadWriteLock segWriteLock;,1
Class variable fields should not have public accessibility,Make EXCLUDED_CLIENT_TRACING_PEERS a static final constant or non-public and provide accessors if needed.,Do you forget to remove all these?,            public static List<String> EXCLUDED_CLIENT_TRACING_PEERS = new LinkedList<>();,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,The `System.err` should not be here.," 	      System.err.println(""codename="" + codename);",1
"Null checks should not be used with ""instanceof""","Remove this unnecessary null check; ""instanceof"" returns false for nulls.","the instanceof check includes a null check
",    if (obj == null || !(obj instanceof LazilyParsedNumber)) {,1
"""java.nio.Files#delete"" should be preferred","Use ""java.nio.file.Files#delete"" here for better messages on error conditions.","check the return value of all `delete` function, or use `FileUtils.delete` which throws exception if the deletion is failed. Here we can simply new a `TsFileResource` instance, and use the `remove` method to delete file, resourace file and modification.",              tmpTargetFile.delete();,1
Static non-final field names should comply with a naming convention,"Rename this field ""cbo_statistics_task_timeout"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",nit: add unit in config name,    public static int cbo_statistics_task_timeout = 60;,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""copyList()"" can return null.","Do we need to use `copyList`? What about using a Stream instead?
java
Streams.of(toCopy.partitions).map(PartitionFieldSummary::copy).toArray(PartitionFieldSummary[]::new);",          .toArray(new PartitionFieldSummary[0]);,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Looks like could be package private?,public class CatalogFamilyFormat {,1
Field names should comply with a naming convention,"Rename this field ""_buffers"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",private here and below,  volatile List<Buffer> _buffers = new ArrayList<Buffer>();,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"thanks for this comment, I was wondering why do we need another interface.",// TODO: Unify the interfaces for {@link org.apache.pinot.controller.helix.core.sharding.SegmentAssignmentStrategy} and {@link StreamPartitionAssignmentStrategy},0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,Remove this method and directly modify `getIntermediateRecord()`. The cached record can be used to simplify line 184: `recordsMap.get(recordToRetain._key)` -> `recordToRetain._record`,"  private IntermediateRecord getInSegmentIntermediateRecord(Key key, Record record) {",0
Unnecessary imports should be removed,Remove this unused import 'com.ibm.icu.util.TimeZone'.,Are we using this?,import com.ibm.icu.util.TimeZone;,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Is there a more specific exception here over and above merely RuntimeException? It would be nice to LOG and capture it such that it is maintained within application logs. Thanks
","            throw new RuntimeException(""No host and port specified"");",1
Unused method parameters should be removed,Remove these unused method parameters.,"As we've discussed, i'm going to rewrite this method as part of HUDI-3993, there's no point in changing this method","                                                               HoodieWriteConfig config, Dataset<Row> rows, String structName, String recordNamespace,",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove,"    // memChunkGroup.write(insertTime, objectValue, schemaList);",1
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,"probably you can separate out into two lines. 
val hudiDf = spark.sql(""SELECT begin_lat, begin_lon, driver, end_lat, end_lon, fare, partitionpath, rider, ts, uuid FROM hudi_ro_table"")
assert insertDf.except(hudiDf).count == 0","    assert insertQueryDataIn.except(spark.sql(""SELECT begin_lat, begin_lon, driver, end_lat, end_lon, fare, partitionpath, rider, ts, uuid FROM hudi_ro_table"")).count() == 0;",0
Boolean literals should not be redundant,Remove the unnecessary boolean literal.,"This solves indirect inheritance, I guess.","            return ""spock.lang.Specification"".equals(superClass.getName()) ? true : extendsSpecification(superClass);",0
"""public static"" fields should be constant","Make this ""public static IDX_TREE_FACTORY"" field final","Why not ""final""?",    public static InlineIndexTreeFactory IDX_TREE_FACTORY = new InlineIndexTreeFactory();,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,.. if token is present,    // TODO(olsona): get next page using pagination token,0
"Unused ""private"" fields should be removed","Remove this unused ""storageSessionTimeout"" private field.","    /**
     * The threshold of session time. Unit is ms. Default value is 70s.
     */
    private long storageSessionTimeout = 70_000;","    /**
FieldDeclaration      * The threshold of session time. Unit is ms. Default value is 2.5 min.
FieldDeclaration      */
FieldDeclaration     private long storageSessionTimeout = 70_000;",0
"Unused ""private"" fields should be removed","Remove this unused ""location"" private field.","It's hard to understand what these ""location"" and ""props"" are.
",  private final String location;,1
"Unused ""private"" methods should be removed","Remove this unused private ""unsubscribeFromAssignmentCalculation"" method.",unsubscribeFromAssignmentCalculation is never used.,    private void unsubscribeFromAssignmentCalculation() {,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,`No need to scan values when all values match the filter`,    // TODO explain why return 0.,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","Have we evaluated using the Jersey Client API library as the REST client? https://howtodoinjava.com/jersey/jersey-restful-client-examples/

We are already using it Jersy to write the service. It seems natural to use it on the client-side as well. It can help us abstract away the low-level details of the client-server communication and avoid potential bugs. ",public abstract class AbstractRestClient {,0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"s/ColNo/colNo

https://engdoc.corp.google.com/eng/doc/devguide/java/style/index.md?cl=head#s5.2.6-parameter-names","    private String getEncodedParam(String fileName, String functionName, Type type, int lineNo, int ColNo) {",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,+1,"    // TODO: move the logic to update flush thresholds (rows and time) into implementations such as segment size based, memory based, default, etc",0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,Same as the Flickr comment above,"    if (dataType.equals(""PHOTOS"")) {
IfStmt       if (step == OAuth1Step.AUTHORIZATION) {
IfStmt         if (mode == AuthMode.EXPORT) {
BlockStmt           return ImmutableMap.of(ACCESS, ""Full"", PERMISSIONS, ""Read"");
BlockStmt         } else {
ReturnStmt           return ImmutableMap.of(ACCESS, ""Full"", PERMISSIONS, ""Add"");
ReturnStmt         }
ReturnStmt       }
ReturnStmt     }",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,think we should? Otherwise on empty queue we get false alarms?,    // TODO: Should we handle the case where getOldestWalTimestamp returns Long.MAX_VALUE ?,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,obsolete,        // TODO: IGNITE-14118 iterate over data and fill Configurators,0
"Jump statements should not occur in ""finally"" blocks",Remove this return statement from this finally block.,"*Finally:*  If you return or throw from a finally, then values returned or thrown from the try-catch block will be ignored. Consider using try-with-resources instead.",                return readFieldBegin();,1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""node"" is nullable here.","Add a comment, `true` or `false` both ok here, because LastPointerReader will do itself sort logic instead of depending on `fillOrderIndex`.","                .getQueryDataSource(node.getPartialPath(), queryContext, null, false);",0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"if we use Class type to distinguish the types, this method could be removed",  abstract public boolean isNodeType(MNodeType nodeType);,0
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.tsfile.read.reader.IBatchReader'.,"delete this import, it isn't used.",import org.apache.iotdb.tsfile.read.reader.IBatchReader;,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,why do you need this class? It's only used in `ConfigurationRegistry`,public class ConfigurationNotificationsUtil {,0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,"For a future, I would advise using a constant like 20_000. Makes sense for visual clues in logs, makes sense for future improvements related to inlines.
You don't need to change anything right now, that's just the info to think about.",    short T_SORTED_INDEX_META_IO = 10_003;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal "", part="" 5 times.","""]"" can be replaced with ']'

","                    ""[grp="" + grpCtx.cacheOrGroupName() + "", part="" + p + ""]"");",0
Static non-final field names should comply with a naming convention,"Rename this field ""spark_dpp_version"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","    @ConfField
    public static String spark_dpp_version = ""1_0_0"";

All config must has `@ConfField` annotation.","    public static String spark_dpp_version = ""1_0_0"";",0
"""switch"" statements should have ""default"" clauses",Add a default case to this switch.,            switch (types.get(i)) {,            switch (types.get(i)){,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,is this our own class? i.e not re-used from another project?,public final class Base64CodecUtil {,0
Raw types should not be used,Provide the parametrized type for this generic.,Is this queue used by gRPC in default?,        ArrayBlockingQueue blockingQueue = new ArrayBlockingQueue(threadPoolQueueSize);,0
Boxing and unboxing should not be immediately reversed,"Remove the boxing to ""Double"".","Devision of these two long value `idleCpuTime` and `totalCpuTime` is either 0 or 1. If you want to get double result, you can try to first parse long values to double values.",				return Double.valueOf(100 * (1 - idleCpuTime / totalCpuTime)).doubleValue();,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Not sure if it would make sense for these converters, but you might be able to use Converter<A, B> with doForward and doBackward for a more consistent API. See LegacyPortabilityJobConverter",public class GoogleCalendarToModelConverter {,0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""schema"".","If this method is called by single thread, there is no reason to create ObjectMapper instance for every load call. 
If multiple threads are calling this method, keep ObjectMapper instance in threadlocal.
","      Schema schema = new ObjectMapper().readValue(content, Schema.class);",0
Unused assignments should be removed,"Remove this useless assignment to local variable ""empty"".","Please provide the `getElementMatcher()` method, don't access the fields of another class.",                        .filter(witnessMethod.elementMatcher),0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""NO_OP"" 3 times.",Why do we need this `NO_OP` metrics?,"            storageSize = new AtomicLongMetric(""NO_OP"", null);",0
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,Please use `Connection connection = EnvFactory.getEnv().getConnection();` instead.,"                Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");",1
"""public static"" fields should be constant","Make this ""public static max_dynamic_partition_num"" field final",新配置加个文档说明吧,    public static int max_dynamic_partition_num = 500;,0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""randomDistributionInfo"".","```
       RandomDistributionInfo randomDistributionInfo = new RandomDistributionInfo(bucketNum);
        return randomDistributionInfo;
==>
return new RandomDistributionInfo(bucketNum);",        RandomDistributionInfo randomDistributionInfo = new RandomDistributionInfo(bucketNum);,1
Field names should comply with a naming convention,"Rename this field ""enable_https"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",  private boolean enableHttps = false;,  private boolean enable_https = false;,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Should the class be renamed as it now works with `HybridTimestamp`s, not with `Timestamp`s?",public class Timestamps {,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,You should fail it if there does be an exception.,      e.printStackTrace();,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""endTime"" 12 times.",Normally the convention is left inclusive and right exclusive.,"        Predicate.AND(Predicate.LT(""startTime"", endTime), Predicate.GT(""endTime"", startTime),",0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,"Set `SINK_MAX_RETRIES_DEFAULT` to 1, same as flink connector.
And we also need to modify `DorisStreamLoadSink.scala`, because when `SINK_MAX_RETRIES_DEFAULT` is 1, there is no retry at all. We should keep it consistent with flink connector.",    int SINK_MAX_RETRIES_DEFAULT = 3;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Let's add ROLLBACK_ACTION in the HoodieActiveTimeline and see if there are any repurcussions ?,    // TODO: Handle ROLLBACK_ACTION in future,0
Field names should comply with a naming convention,"Rename this field ""_selections"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(nit) brief comment to explain what is _selections. I am guessing this is to track if a statement is selected or not ?,  private boolean[] _selections;,0
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.db.conf.adapter.IoTDBConfigDynamicAdapter'.,unused,import org.apache.iotdb.db.conf.adapter.IoTDBConfigDynamicAdapter;,1
Static non-final field names should comply with a naming convention,"Rename this field ""PROPERTIES"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","The properties should be instance level, according to your latest update. This should be named as `INSTANCE_PROPERTIES`, and documents is required to update.","        public static Map<String, String> PROPERTIES = new HashMap<String, String>();",0
Field names should comply with a naming convention,"Rename this field ""_nextDictId"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(minor) Move these 2 non-final values into a separate block for readability,"  private int _nextDocId = 0;
FieldDeclaration   private int _nextDictId = 0;",0
Unused local variables should be removed,"Remove this unused ""taskIds"" local variable.","s/Anomly/Anomaly/ and elsewhere (eg createAnomlyJob)
",    List<Long> taskIds = createAnomlyTasks(anomalyFunctionSpec);,0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""ret"".",if we have check the param . this will not happend?,"          LOG.info(""Running Mode: ["" + EXECUTE + ""]; Do cluster"");",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Could we log it so we know what's in there in the mean time?,"      // TODO(#258): Check job ID in state token, was broken during local demo",0
Field names should comply with a naming convention,"Rename this field ""SMUGMUG_KEY"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",these too,"  private final String SMUGMUG_KEY = ""SMUGMUG_KEY"";",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Let's throw IO exception instead here and below.,              e.printStackTrace();,0
Unnecessary imports should be removed,Remove this unused import 'org.openide.util.Exceptions'.,Unused import,import org.openide.util.Exceptions;,1
Empty statements should be removed,Remove this empty statement.,I'm confused about the purpose of the version parameter here. What's the intention of it if we set it as the max integer? ,"  default Spec updateSpec(Spec spec, long version) throws IOException, SpecNotFoundException {return updateSpec(spec);};",0
"Unused ""private"" classes should be removed","Remove this unused private ""CacheRebalanceOrderComparator"" class.","Yes, this is a common practice to implement `Serializable` interface by a comparator.
In this particular case, `assignsSet` is always a ""local map"" and will never be serialized/deserialized.
So, it is not required to implement `Serializable` ","    private static class CacheRebalanceOrderComparator implements Comparator<CacheGroupContext>, Serializable {",0
Static non-final field names should comply with a naming convention,"Rename this field ""SNAPSHOT_SEND_CHANNEL_SIZE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",`SEND` -> `TRANSPORT`,        public static int SNAPSHOT_SEND_CHANNEL_SIZE = 2;,1
Local variables should not shadow class fields,"Rename ""ipAndPort"" which hides the field declared at line 64.",It looks weird here. `ipAndPort` and `port`. Maybe `host` and `port` would be better. WDYT? @yu199195 @SaberSola ,"        String ipAndPort = props.getProperty(""ipAndPort"");
ExpressionStmt         String port = props.getProperty(""port"");",0
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,Missed space,                    if(threadIdx == srvIdx || ThreadLocalRandom.current().nextBoolean()),0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,This should be static?,"  private final String TIMESTAMP_STR = ""Time"";",1
Field names should comply with a naming convention,"Rename this field ""output_column"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",  private int outputColumn;,  private int output_column;,1
Field names should comply with a naming convention,"Rename this field ""_tableName"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",`_tableNameWithType`,  private final String _tableName;,1
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","These are not necessary, all values have been in `SamplePolicySetting`. Please use it directly. You need an `AtomicRef<SamplePolicySetting>` field.","    private AtomicInteger sampleRate;
FieldDeclaration     private AtomicInteger slowTraceSegmentThreshold;
FieldDeclaration     private volatile Map<String, ServiceSampleConfig> serviceSampleRates = Collections.emptyMap();",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""result"" is nullable here.","        LOG.debug(""rewrite ors: "" + result.toSql());","        LOG.info(""rewrite ors: "" + result.toSql());",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"It looks like you can pass the 'pageToken' query param. Do you want to convert this to a TODO to use that?
See:
https://developers.google.com/people/api/rest/v1/people.connections/list","    // TODO(olsona): what about the next page?  We get the token, but how do we use it?",1
Static non-final field names should comply with a naming convention,"Rename this field ""PROFILE_TASK_READY_SCHEDULE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Make it “final” and remove “volatile”,"    private static volatile ScheduledExecutorService PROFILE_TASK_READY_SCHEDULE = Executors.newScheduledThreadPool(15, new DefaultNamedThreadFactory(""PROFILE-TASK-READY-SCHEDULE""));",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Wrong "" 4 times.","      logger.error(""Wrong {}, please set as: {} !"", TSFILE_FILE_SYSTEM_STRING, properties
          .getProperty(TSFILE_FILE_SYSTEM_STRING));","      logger.error(""Wrong "" + TSFILE_FILE_SYSTEM_STRING + "", please set as: "" + properties
NameExpr           .getProperty(TSFILE_FILE_SYSTEM_STRING) + "" !"");",0
"Strings and Boxed types should be compared using ""equals()""","Use the ""equals"" method if value comparison was intended.",Use `equals()` to compare strings. And better to put the constants as the left operands.,"    else if(prefix.fullPath == """") {",1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Make this class final and add a private constructor.,public class MetricsExportHelper {,1
"Synchronized classes Vector, Hashtable, Stack and StringBuffer should not be used","Replace the synchronized class ""StringBuffer"" by an unsynchronized one such as ""StringBuilder"".",*JdkObsolete:*  StringBuffer performs synchronization that is usually unnecessary; prefer StringBuilder.,"        StringBuffer buffer = new StringBuffer(method).append(""("");",1
"""private"" methods called only by inner classes should be moved to those classes","Move this method into ""ConvertFilterToParquet"".","`FilterPredicate` can't be on the new line? I think I liked the formatting better before, but it's fine if there's a checkstyle problem with it.","      pred(Operation op, COL col, C value) {",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",Why is this public?,public abstract class AggregatedMetadataTableScan extends BaseTableScan {,1
"""public static"" fields should be constant","Make this ""public static spark_dpp_version"" field final",Better to move it to the Config.java,"    public static String spark_dpp_version = ""1_0_0"";",0
Raw types should not be used,Provide the parametrized type for this generic.,"Javadoc.
","  public static MetricContext getMetricContext(State state, Class klazz) {",0
Class variable fields should not have public accessibility,Make event a static final constant or non-public and provide accessors if needed.,"Sorry, but no public member variable please. BTW: this should be final.
",  public GobblinTrackingEvent event;,1
Field names should comply with a naming convention,"Rename this field ""_expression"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Should this be expression or query string?,  private String _expression;,0
"Unused ""private"" fields should be removed","Remove this unused ""dataRegionGroupDataNodesMap"" private field.","  private final Map<Integer, List<Integer>> dataRegionDataNodesMap;","  private final Map<Integer, List<Integer>> dataRegionGroupDataNodesMap;",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove the commented code?,//          targetRatio = 1d;,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"The purged segments should have a purge timestamp in the segment ZK metadata custom fields. We should rely on that to order the purged segments, and add a threshold and not purge the recently purged segments again and again",        // TODO: Pick lastly purged segment first to avoid looping again and again on the same segment,0
"Unused ""private"" fields should be removed","Remove this unused ""MM2SourceAlias"" private field.","I can't find the place using these, have you submitted all codes?","    private String MM2SourceAlias = """";
FieldDeclaration     private String MM2SourceSeparator = """";",0
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,Are there threads that are unsafe?,    private static final Random RANDOM = new Random();,0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"follow one convention for time, use long as you would not have to worry about TZ. 
also please be consistent with parameter naming camelCase vs under_score.","  public String getEvalStatsAlertFilter(String function_id, String startTimeIso, String endTimeIso) throws Exception{",1
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""manifestDF"".",nit: do we need this extra variable? My IDE always highlights such cases.,"    Dataset<Row> manifestDF = spark.read().format(""iceberg"")",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Remove this comment.  One Olap table always has one base index.,            // TODO(wangbo): 2020/2/3 doris auto select base rollup,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Why not make this an IllegalStateException or IllegalArgumentException
","        throw new RuntimeException(""KafkaReportingFormat not recognized."");",1
Unused method parameters should be removed,"Remove this unused method parameter ""cancelReason"".",This cancelReason is not used?,"            TNetworkAddress address, TUniqueId finstId, CancelReason cancelReason) throws RpcException {",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,I'll create a follow-up PR.,        // TODO: response.setBreakpoints(...);,0
"""public static"" fields should be constant","Make this ""public static VALUE_LENGTH"" field final",Should be renamed to `VALUE_MAX_LENGTH `.  ,        public static int VALUE_LENGTH = 128;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Prompt the user to download manually when the download fails, and put it in the specified directory.","            throw new RuntimeException(String.format(""Download zookeeper binary archive failed, download url:%s, file path:%s"",",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,it seems to me that the input: monitoringWindow is not used in your function,"      @QueryParam(""monitoringWindow"") String monitoringWindow) throws Exception {",0
Class variable fields should not have public accessibility,Make mergeStartTime a static final constant or non-public and provide accessors if needed.,"Please check the accessibility of **all new** fields ... Class variable fields should not have public accessibility
  private long mergeStartTime;",  public long mergeStartTime;,1
Private fields only used as local variables in methods should become local variables,"Remove the ""minNumInputFiles"" field and declare it as a local variable in the relevant methods.","nit: I think we should group `public static final` variables together and then all the private variables, based on what the other files are doing right now.",  private int minNumInputFiles;,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"You are creating a big thread pool here, could you share why? Is 15 really necessary?","    private final static ScheduledExecutorService PROFILE_TASK_READY_SCHEDULE = Executors.newScheduledThreadPool(15, new DefaultNamedThreadFactory(""PROFILE-TASK-READY-SCHEDULE""));",0
Field names should comply with a naming convention,"Rename this field ""_channelLock"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(minor) `private` is redundant as the whole class is private,    private final ReentrantLock _channelLock = new ReentrantLock();,0
Raw types should not be used,Provide the parametrized type for this generic.,What is calc? Don't think this is a term.,    private static void classResCalc(Class c) {,0
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @deprecated Javadoc tag.,are we flipping the default here intentionally ? ,  public Boolean useJdbc;,0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,"Please notice, this class has been `Deprecated`, which means it is a shell only. The real codes are in `org.apache.skywalking.oap.query.graphql.resolver.MetricsQuery`","@Deprecated
ClassOrInterfaceType @Slf4j
ClassOrInterfaceType public class MetricQuery implements GraphQLQueryResolver {",1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""props"" is nullable here.",Did you check the NPE here ?,"            props.getProperty(HoodieTableConfig.DATABASE_NAME.key()), props.getProperty(HoodieTableConfig.NAME.key()), metastoreConfig)",1
"Unused ""private"" fields should be removed","Remove this unused ""newValue"" private field.",        private final String newValue;,        private String newValue;,0
"""ThreadLocal"" variables should be cleaned up when no longer used","Call ""remove()"" on ""treeTrace"".",Why use ```ThreadLocal```? Shall we eliminate it by using ```Command Pattern```?,"  private ThreadLocal<int[]>
VariableDeclarator       treeTrace; // a trace of b+tree index since no upward pointer within segments",1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""setPayloadMethod"" is nullable here.",hmm... we can't set this till setter time I suppose? Could we do it at static class loading time?,"            setPayloadMethod = builderClass.getMethod(""setPayload"", byteStringClass);",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove this?,//      buffer.flip();,1
"Unused ""private"" fields should be removed","Remove this unused ""stacksBinary"" private field.",I think you should change this field name too?,    private byte[] stacksBinary;,0
Field names should comply with a naming convention,"Rename this field ""MAX_INITIAL_CAPACITY"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Use `DistinctExecutor.MAX_INITIAL_CAPACITY`,    int MAX_INITIAL_CAPACITY = 10000;,0
Class variable fields should not have public accessibility,Make DEFAULT_PREAGGREGATED_KEYWORD a static final constant or non-public and provide accessors if needed.,"KEYWORD --> DIMENSION_VALUE. Add java doc for these constants
","  public static String DEFAULT_PREAGGREGATED_KEYWORD = ""all"";",0
Unnecessary imports should be removed,Remove this unused import 'java.math.BigInteger'.,？,import java.math.BigInteger;,0
Raw types should not be used,Provide the parametrized type for this generic.,solt --> slot,            for (Comparable solt : row) {,0
Static non-final field names should comply with a naming convention,"Rename this field ""PACKAGE_MATCH_REGEX_EXPRESSION"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","1. I think this is the Class Name match? Not a package name?
1. The default value should be empty, which is more high-efficiency.","            public static String PACKAGE_MATCH_REGEX_EXPRESSION = "".*"";",0
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,"More clear approach would be

if (!aff.assignments(aff.lastVersion()).equals(aff.idealAssignmentRaw()))
    throw new AssertionError(....); // This is should never happen on ideal switch and must trigger FH.

aff.initialize(..);","                            "", lastAffinity="" + aff.lastVersion() + "", cacheAffinity="" + aff.cachedVersions() + ""]"";",0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,Can we use the logging library and include enough context to make a meaning full message or just dump this line?,"    System.out.println(""Tries: "" + tries);",1
Static non-final field names should comply with a naming convention,"Rename this field ""SQL_PARAMETERS_MAX_LENGTH"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Add these configs to documentations, otherwise, nobody can find this feature until they read the source codes","            public static boolean TRACE_SQL_PARAMETERS = true;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, limit the max number of parameter
FieldDeclaration              */
FieldDeclaration             public static int SQL_PARAMETERS_MAX_COUNT = 20;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, SkyWalking won't save the entire parameters string into the tag, but only
FieldDeclaration              * the first {@code SQL_PARAMETERS_MAX_LENGTH} characters.
FieldDeclaration              *
FieldDeclaration              * Set a negative number to save the complete parameter string to the tag.
FieldDeclaration              */
FieldDeclaration             public static int SQL_PARAMETERS_MAX_LENGTH = 512;",0
Lambdas containing only one statement should not nest this statement in a block,Remove useless curly braces around statement and then remove useless return keyword (sonar.java.source not set. Assuming 8 or greater.),I see similar code in `KafkaOffsetGen::excludeHoodieConfigs()`.  Could you keep one of them?,"    connectConfigs.getProps().keySet().stream().filter(prop -> {
LambdaExpr       // In order to prevent printing unnecessary warn logs, here filter out the hoodie
LambdaExpr       // configuration items before passing to hadoop/hive configs
LambdaExpr       return !prop.toString().startsWith(HOODIE_CONF_PREFIX);
LambdaExpr     }).forEach(prop -> {
ExpressionStmt       hadoopConf.set(prop.toString(), connectConfigs.getProps().get(prop.toString()).toString());
ReturnStmt     });",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Rename start and end time variable.,"  public String getEvalStatsAlertFilter(Long functionId, Long startTimeIso, Long endTimeIso) throws Exception{",0
Class variable fields should not have public accessibility,Make VALUE_LENGTH a static final constant or non-public and provide accessors if needed.,Should be renamed to `VALUE_MAX_LENGTH `.  ,        public static int VALUE_LENGTH = 128;,0
Field names should comply with a naming convention,"Rename this field ""_maxRows"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",primitive `int`,  private Integer _maxRows = Integer.MAX_VALUE;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Check the TODOs.,"                  // TODO FIXME
IfStmt                   //                  if (clusterTSServiceImpl != null) {
IfStmt                   //                    clusterTSServiceImpl.stop();
IfStmt                   //                  }",1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",Great that the backward compatibility is considered :),public abstract class AbstractUserDefinedMetricsReporter extends CustomizableMetricsReporter {,0
"Boxed ""Boolean"" should be avoided in boolean expressions",Use the primitive boolean expression here.,"```
if (!disableAcl) {
    copyReqBuilder.acl(ObjectCannedACL.BUCKET_OWNER_FULL_CONTROL);
} 
CopyObjectRequest copyReq = copyReqBuilder.build();",      if (!disableAcl) {,1
"""InterruptedException"" should not be ignored","Either re-interrupt this method or rethrow the ""InterruptedException"" that can be caught here.","        futureList.get(i).get();
Handle the exception here :D",        futureList.get(i).get();,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,LOGGER instead of sout?,    System.out.println(builder.toString());,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,CI failed due to the stylecheck,public class TablePathUtils {,0
Field names should comply with a naming convention,"Rename this field ""_isStarting"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",They might need to be `volatile` as they can be accessed from a different thread,  private boolean _isStarting = false;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Mapping for a column already exists: "" 3 times.",Is there any disadvantage if we allow the user to overwrite previous mappings?,"                throw new IllegalArgumentException(""Mapping for a column already exists: "" + columnName);",1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,minor nit: why does this param name starts with a capital letter?,  public AlertGroupRecipientProviderFactory(String AlertGroupRecipientProviderConfigPath) {,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""MONTHS"" 3 times.","Should we define `""MONTHS""` and `""WEEKS""` as constants?","    if (this.monitoringGranularity.endsWith(""MONTHS"") || this.monitoringGranularity.endsWith(""WEEKS"")) {",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""\"" not found."" 5 times.","`""\"""" + registry + ""\"" not found.""` will be evaluated in any way for exception argument. So it make sense to introduce variable (DRY). Also it is good practice to use `'\""'` for concatenation of strings with chars.","                log.info(""\"""" + registry + ""\"" not found."");",1
Raw types should not be used,Provide the parametrized type for this generic.,"Can you write Class<?> here to avoid the compilation warning?
",    Class testClass() default TestEnum.class;,1
"""public static"" fields should be constant","Make this ""public static CONTEXT"" field final","The reason you put the CONTEXT here, is this for avoiding classloader isolation issue? If SO, add this to comments.","        public static Map<String, Object> CONTEXT = new HashMap<String, Object>();",0
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,Please use `Connection connection = EnvFactory.getEnv().getConnection();` instead.,"                Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");",1
Unnecessary imports should be removed,Remove this unused import 'java.util.Optional'.,"use Guava's Optional
",import java.util.Optional;,1
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""manifestListDF"".",nit: same here,    Dataset<Row> manifestListDF = spark,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,there already is an enable/disable endpoint in AlertJobResource.,"      @QueryParam(""cron"") String cron, @QueryParam(""isActive"") Boolean isActive) throws Exception {",0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.","better to change to `public void report() {}`, and no need to add an empty line?","  public void report() {
MethodDeclaration   }",1
"Mutable fields should not be ""public static""","Make this member ""protected"".",Same performance concern. Prefer `LinkedList`.,        public static List DISABLED_PLUGINS = new ArrayList();,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Please add javadoc
",public class HiveConfigClientUtils {,0
"""public static"" fields should be constant","Make this ""public static TEXT_INDEX_DEFAULT_RAW_VALUE"" field final","Does it make sense to use a single character for this? This value is never used in processing, so it is a pure memory overhead, right?","  public static String TEXT_INDEX_DEFAULT_RAW_VALUE = ""null"";",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"if schema remains backwards compatible with increasing instant times, would this happen? ",  // TODO (NA) - Perform a schema check of current input record with the last schema on log file,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Please put message in exception.,      throw new RuntimeException(e);,0
"""public static"" fields should be constant","Make this ""public static PROPERTIES"" field final","The properties should be instance level, according to your latest update. This should be named as `INSTANCE_PROPERTIES`, and documents is required to update.","        public static Map<String, String> PROPERTIES = new HashMap<String, String>();",0
Class variable fields should not have public accessibility,Make DEFAULT_DAG_NAME a static final constant or non-public and provide accessors if needed.,"The name can be in caps (TestDagName), no need for camecasing..","  public static String DEFAULT_DAG_NAME = ""testDagName"";",0
"Unused ""private"" methods should be removed","Remove this unused private ""getAllRegionForOneSg"" method.",unused method,  private List<DataRegionId> getAllRegionForOneSg(PartialPath storageGroup) {,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Just a question org.openide.LifecycleManager.getDefault().saveAll() might make this class obsolete.,class AutoSaveCommand {,0
Unnecessary imports should be removed,Remove this unused import 'javafx.concurrent.Task'.,I don't think that this package is available for higher jdk versions! This might create an issue!,import javafx.concurrent.Task;,0
String literals should not be duplicated,Use already-defined constant 'RECORD' instead of duplicating its value here.,Please use TreeShims.RECORD,"        return node != null && ""RECORD"".equals(node.getKind().name());",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"What are your plans with these TODOs, @jglick?","            // TODO should be patched, along with other uses of Artifact.getFile among nodes",1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Do not printStackTrace，just ignored,            e.printStackTrace();,1
"""equals(Object obj)"" and ""hashCode()"" should be overridden in pairs","This class overrides ""equals()"" and should therefore also override ""hashCode()"".",Thanks!,  public boolean equals(Object o) {,0
"""public static"" fields should be constant","Make this ""public static MAX_WAIT_CHANNEL_AUTO_CONNECT_COUNT"" field final",Default should be 10.,        public static long MAX_WAIT_CHANNEL_AUTO_CONNECT_COUNT = 1;,0
Package names should comply with a naming convention,Rename this package name to match the regular expression '^[a-z_]+(\.[a-z_][a-z0-9_]*)*$'.,"I did not see a reason why we need this AlertFilterAutotuneFactory. Thirdeye only call autotune from anomaly-detection lib, how we tune it is determined in anomaly-detection lib. On thirdeye, we at most need a interface and a dummyAutoTune as the base class. We do not need a factory. ",package com.linkedin.thirdeye.anomalydetection.alertFilterAutotune;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,remove it.,    // todo,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""plugin "" 3 times.","                throw new UserException(""plugin "" + info.getName() + "" has already been installed."");","                throw new UserException(""plugin "" + info.getName() + "" has install."");",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Failed to connect to config node."" 11 times.","      LOGGER.error(""Failed to connect to ConfigNode {} from DataNode {}."", ip+port, ip+port);","      LOGGER.error(""Failed to connect to config node."");",0
Field names should comply with a naming convention,"Rename this field ""_maxTimeRangeMs"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",final,  private long _maxTimeRangeMs;,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,And do we really need a default mode?,    public final static Long MODE_DEFAULT = 1L << 32; //4294967296L;,0
"""public static"" fields should be constant","Make this ""public static default_db_replica_quota_size"" field final","The 1000000 is too small.  In meituan.com, the replica number for one database has exceeded 1000000. I think your initial value 1024 * 1024 * 1024 is OK.",    public static long default_db_replica_quota_size = 1000000;,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""logger"".",Make the logger a static final field.,    Logger logger = Logger.getLogger(getClass());,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",public abstract class TemplateNode {,public abstract class Node {,1
Field names should comply with a naming convention,"Rename this field ""_groupKeysWithNonNullValue"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",This shouldn't be needed since the result holder can already track null values,  private final Set<Integer> _groupKeysWithNonNullValue;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"message?
",      throw new RuntimeException(e);,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,Static fields go at the top above instance fields.,"  private final static String SIMPLE_NAME = ""DefaultDateTypeAdapter"";",1
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @deprecated Javadoc tag.,Remove it,    private long versionHash = 0L;,0
Two branches in a conditional structure should not have exactly the same implementation,This branch's code block is the same as the block for the branch on line 79.,"This part can be simplified
      } else {
        byteBuffer.putInt(cache[i].length);
        byteBuffer.put(cache[i]);
      }","      } else if (value instanceof String) {
IfStmt         byteBuffer.putInt(cache[i].length);
IfStmt         byteBuffer.put(cache[i]);
IfStmt       } else if (value instanceof BigDecimal) {
IfStmt         byteBuffer.putInt(cache[i].length);
IfStmt         byteBuffer.put(cache[i]);
IfStmt       } else if (value instanceof byte[]) {
BlockStmt         byteBuffer.putInt(cache[i].length);
BlockStmt         byteBuffer.put(cache[i]);
BlockStmt       } else {
ThrowStmt         throw new IllegalStateException(""Data type not supported for serializing Primary Key"");
ReturnStmt       }",1
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,"Can this class and `KafkaSimpleJsonExtractor` be deprecated now that there is `KafkaDeserializerExtractor`?
","public class KafkaSimpleExtractor extends KafkaExtractor<String, byte[]> {",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"They could be combined as throw new RuntimeException(""xxx"", e)``` ? ",          throw new RuntimeException(e);,0
"Fields in non-serializable classes should not be ""transient""","Remove the ""transient"" modifier from this field.",@bvaradar Any reason this needs to be transient ? Are we serializing this ?,  private transient Thread shutdownThread = null;,1
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,"Move `REQUEST` and `STATUS_CODE` to `HttpConstants`. They may be used by other kinds of response handler, say `HttpResponseHandler`","  private final String REQUEST = ""request"";",0
Class variable fields should not have public accessibility,Make IS_GRPC_CHANNEL_TLS_FORCED a static final constant or non-public and provide accessors if needed.,Change this name to `FORCE_TLS`. There is only gRPC transport.,        public static boolean IS_GRPC_CHANNEL_TLS_FORCED = true;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""hello world"" 4 times.",donot modify this ,"        userDTO.setUserName(""hello world"" + name);",0
"Unused ""private"" fields should be removed","Remove this unused ""logger"" private field.",We probably don't need to keep a logger in the test.,  private static final Logger logger = LoggerFactory.getLogger(GoogleContactToVCardTest.class);,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"don't comment this
        schemaChangeMatrix[PrimitiveType.DATE.ordinal()][PrimitiveType.DATETIME.ordinal()] = true;",        //schemaChangeMatrix[PrimitiveType.DATE.ordinal()][PrimitiveType.DATETIME.ordinal()] = true;,1
Field names should comply with a naming convention,"Rename this field ""EMAIL_FORMATTER_CONFIG"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","please use camelCase for variables, UPPER_CASE for constants only.",  protected EmailContentFormatterConfiguration EMAIL_FORMATTER_CONFIG;,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,*CatchAndPrintStackTrace:*  Logging or rethrowing exceptions should usually be preferred to catching and calling printStackTrace,                    e.printStackTrace();,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Logger,      e.printStackTrace();,1
Field names should comply with a naming convention,"Rename this field ""_segmentTrimSize"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","No need to use object
  private final boolean _enableSegmentTrim;
  private final int _minSegmentTrimSize;","  private final Boolean _enableSegmentTrim;
FieldDeclaration   private final Integer _segmentTrimSize;",0
Encryption algorithms should be used with secure mode and padding scheme,Use secure mode and padding scheme.,"## Use of a broken or risky cryptographic algorithm

Cryptographic algorithm [AES/ECB/PKCS5Padding](1) is weak and should not be used.

[Show more details](https://github.com/apache/drill/security/code-scanning/35)","        javax.crypto.Cipher cipher = javax.crypto.Cipher.getInstance(""AES/ECB/PKCS5Padding"");",1
Static non-final field names should comply with a naming convention,"Rename this field ""SERVICE_PROPERTIES"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",You miss this name. ,    private static List<KeyStringValuePair> SERVICE_PROPERTIES;,0
Unused local variables should be removed,"Remove this unused ""chunkSize"" local variable.",remove,    long chunkSize = getChunkSize(chunk);,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"It will be nice if you also add here 
(1) an example of the use case in time-field-spec that needs bucketing in order to be backward compatible. 
(2) A comment that use of these bucket functions is discouraged unless you know what you are doing (e.g. 5-minutes-since-epoch does not make sense to someone looking at the timestamp, or writing queries. instead, Millis-since-epoch rounded to 5 minutes makes a lot more sense).",  // TODO: toEpochXXXBucket methods are only needed to convert from TimeFieldSpec to DateTimeFieldSpec.,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"        System.out.println(""Starting a server node... Logging to file: example-node.log"");","        System.out.println(""Starting a server node... Logging to file: ignite.log"");",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""java.specification.version"" 3 times.",Why not just use the above JVM_SPEC_VERSION_STRING? And let's use substring and then parse 1.8 to 8? Or use float and multiply 10 and then minus 10 to get 8? It is a bit strange that we return 1 for 1.8...,"    (int) Float.parseFloat(System.getProperty(""java.specification.version"")) :",1
Empty arrays and collections should be returned instead of null,Return an empty collection instead of null.,    return  Collections.singletonList(sgPath);,    return null;,1
"Classes from ""sun.*"" packages should not be used",Use classes from the Java API instead of Sun classes.,Use MemberReferenceTree here? ,import com.sun.tools.javac.tree.JCTree.JCMemberReference;,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,Forgotten `println`.,"                System.err.println(""computing diags for: "" + uri + "", errors"");",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Why the BOOT cp is not registered and unregistered?,"        // GlobalPathRegistry.getDefault().register(ClassPath.BOOT, new ClassPath[] {bootCP});",0
Class variable fields should not have public accessibility,Make typeSet a static final constant or non-public and provide accessors if needed.,nit typeSet -> VALID_TYPE_PAIR_SET. pls fix it in next PR,"    public static Set<Pair<JoinType, JoinType>> typeSet = ImmutableSet.of(",0
Field names should comply with a naming convention,"Rename this field ""_blockingQueue"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Looks like only StreamingSelectionOnlyCombineOperator use `LinkedBlockingQueue`, all other combine operators use `ArrayBlockingQueue` since the number of blocks can be determined . Since variable `_blockingQueue` is  protected, how about make it as `ArrayBlockingQueue` by default here and in constructor of StreamingSelectionOnlyCombineOperator, override `_blockingQueue` as `LinkedBlockingQueue`?",  protected final BlockingQueue<IntermediateResultsBlock> _blockingQueue = new LinkedBlockingQueue<>();,0
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""r"" parameter (sonar.java.source not set. Assuming 8 or greater.)",I think this anonymous variable `r` should be changed to `response` for readability,                        responseFuture.thenAccept((r) -> {,0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,"Can be simplified by just:
`return Objects.equals(this.name, other.name)`","        if (!Objects.equals(this.name, other.name)) {",1
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,why do you need these generics?,"    StorageCfg extends DataStorageConfiguration,",0
Static non-final field names should comply with a naming convention,"Rename this field ""TRACE_SQL_PARAMETERS"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Add these configs to documentations, otherwise, nobody can find this feature until they read the source codes","            public static boolean TRACE_SQL_PARAMETERS = true;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, limit the max number of parameter
FieldDeclaration              */
FieldDeclaration             public static int SQL_PARAMETERS_MAX_COUNT = 20;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, SkyWalking won't save the entire parameters string into the tag, but only
FieldDeclaration              * the first {@code SQL_PARAMETERS_MAX_LENGTH} characters.
FieldDeclaration              *
FieldDeclaration              * Set a negative number to save the complete parameter string to the tag.
FieldDeclaration              */
FieldDeclaration             public static int SQL_PARAMETERS_MAX_LENGTH = 512;",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""file_path"" 3 times.",Let's add a manual repartition step to avoid surprises with adaptive execution.,"    return allManifests.flatMap(new ReadManifest(ioBroadcast), Encoders.STRING()).toDF(""file_path"");",0
Static non-final field names should comply with a naming convention,"Rename this field ""enable_odbc_table"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Add this config to FE config doc.,    public static boolean enable_odbc_table = false;,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,nit: rename the splitter to SPLIT_BY_COMMA,"  private final static Splitter splitter = Splitter.on("","").omitEmptyStrings().trimResults();",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""field"" is nullable here.",minor: can we reuse `expressionFieldPath` instead of obtaining `ref().name()` again? ,      caseSensitive ? struct.field(ref().name()) : struct.caseInsensitiveField(ref().name());,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""brokerName"" 3 times.",What is the purpose of map defined in this loop?,"                Map<String, Properties> map = new HashMap<>();
CatchClause                 Properties masterProperties = defaultMQAdminExt.getBrokerConfig(masterAddr);
CatchClause                 map.put(""master"", needBrokerProprties(masterProperties));
CatchClause                 masterBrokerSize++;
CatchClause                 slaveBrokerSize += masterAndSlaveMap.get(masterAddr).size();
CatchClause                 brokerConfigs.put(masterProperties.getProperty(""brokerName""), needBrokerProprties(masterProperties));",0
"Instance methods should not write to ""static"" fields","Make the enclosing method ""static"" or remove this set.","This method may be called many times before the cachedChunkMetadata is all consumed. You can put this tracing in unpackOneTimeSeriesMetadata, i.e., when we call FileLoaderUtils.",      totalChunkNum += cachedChunkMetadata.size();,0
"""equals(Object obj)"" and ""hashCode()"" should be overridden in pairs","This class overrides ""equals()"" and should therefore also override ""hashCode()"".","Add `if (!(obj instanceof WeightedMultiWorkUnit) {return false;}` before doing the casting.
",    public boolean equals(Object obj) {,0
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,"        Set<String> colNames = columns.stream().map(Column::name).collect(Collectors.toSet());
        
        assert indices.stream()","        Set<String> colNames = columns.stream().map(Column::name).collect(Collectors.toSet());
AssertStmt         assert indices.stream()",0
Class variable fields should not have public accessibility,Make DEFAULT_OVERWRITE_CONFIGS_IN_STATESTORE a static final constant or non-public and provide accessors if needed.,"Should this be final? If not final, don't use upper case.
",  public static boolean DEFAULT_OVERWRITE_CONFIGS_IN_STATESTORE = false;,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"I think we should handle this in this pull request also.
",        // TODO add support for MultiWorkUnits,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Remove the +1, as version numbers are zero-based, as described in section 4.1 of http://www.ietf.org/rfc/rfc3280.txt.
",    return tbsCert.getVersion() + 1; // TODO determine why +1,0
Class variable fields should not have public accessibility,Make tsFileManagement a static final constant or non-public and provide accessors if needed.,Why public?,  public TsFileManagement tsFileManagement;,1
"""for"" loop stop conditions should be invariant",Refactor the code in order to not assign to this loop counter from within the loop body.,"In this case, shall we check if there is already something in rangeMembers and add it to the plan?","          rangeStart = Math.max(current, rangeStart + 1);",0
Private fields only used as local variables in methods should become local variables,"Remove the ""functionName"" field and declare it as a local variable in the relevant methods.",Don't need this class member. It can be method-local.,"  private String functionName = ""Anonymous"";",1
Field names should comply with a naming convention,"Rename this field ""_controllerLeaderHostPortNotUsed"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Please remove this variable,  private volatile String _controllerLeaderHostPortNotUsed = null;,0
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,I like the addition of `SplittableScanTask`. This looks pretty good.,public interface SplittableScanTask<ThisT> extends ScanTask {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""PHOTOS"" 3 times.","nit: I think it would be cleaner if you combined the step and mode conditions in the same if statement instead of nesting them 

OR the other thing you could do is create a static multimap, then you could do something like urlparams.get(datatype).get(mode).get(step) here -- this might be overkill for these two configs since they only support 1 datatype each but just a thought. ","    if (dataType.equals(""PHOTOS"")) {
IfStmt       if (step == OAuth1Step.AUTHORIZATION) {
IfStmt         if (mode == AuthMode.EXPORT) {
BlockStmt           return ImmutableMap.of(PERMS, ""read"");
BlockStmt         } else {
ReturnStmt           return ImmutableMap.of(PERMS, ""write"");
ReturnStmt         }
ReturnStmt       }",0
Raw types should not be used,Provide the parametrized type for this generic.,`List.clear` should be enough here.,            executeList = new ArrayList();,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""FetcherStatus"" 9 times.",Same with this one https://cwiki.apache.org/confluence/display/NUTCH/Metrics,"      context.getCounter(""FetcherStatus"", ""hitByTimeLimit"").increment(1);",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"It would be nice if we remove this reference as well - ""It should be removed starting from next Drill 1.15.0 release"" here and below.",  @Deprecated // TODO: DRILL-6527. It should be removed starting from next Drill 1.15.0 release,0
"""switch"" statements should have at least 3 ""case"" clauses","Replace this ""switch"" statement by ""if"" statements to increase readability.",ArrayBlockingQueueBuffer is only used to `BLOCKING` strategy. ,"        switch (strategy) {
SwitchEntry             case IF_POSSIBLE:
ReturnStmt                 return queue.offer(data);
SwitchEntry             default:
TryStmt                 try {
CatchClause                     queue.put(data);
CatchClause                 } catch (InterruptedException e) {
ReturnStmt                     // Ignore the error
ReturnStmt                     return false;
ReturnStmt                 }
ReturnStmt         }
ReturnStmt         return true;",0
Field names should comply with a naming convention,"Rename this field ""_logger"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",I think that we should pick either `LOGGER` or `_logger` and make them consistent. I think that we have both. ,  protected final Logger _logger = LoggerFactory.getLogger(getClass());,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,may be keep a empty line,public class ThreadLocalUtil {,0
"""String#replace"" should be preferred to ""String#replaceAll""","Replace this call to ""replaceAll()"" by a call to the ""replace()"" method.","Please set UUID the first it is used, don't init here to avoid `Config.Agent.INSTANCE_UUID` doesn't init in time. In the old day, we didn't need to worry about this. So please move the initialization codes.","    private static final String INSTANCE_UUID = Config.Agent.INSTANCE_UUID.equals("""") ? UUID.randomUUID().toString().replaceAll(""-"", """") : Config.Agent.INSTANCE_UUID;",0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"add some javadoc for this field..

You could separate the time bytes from this record. This record could rename to values",  private byte[][] record;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""/test"" 61 times.","i'd like to see a test that exercises max depth from a starting point deeper than the root or first node in the tree to ensure the null parent logic plays correctly there.
","        cache = buildWithListeners(TreeCache.newBuilder(client, ""/test"").setMaxDepth(1));",0
Abstract classes without fields should be converted to interfaces,"Convert the abstract class ""PlanOperatorVisitor"" into an interface. (sonar.java.source not set. Assuming 8 or greater.)","Is this class a generic visitor for all the operators, i.e., both logical and physical, or it's a dedicated visitor only for physical operators?","public abstract class PlanOperatorVisitor<R, C> {",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,TODO without a ticket,                // TODO: sanpwc is MvTableStorage mock really ok? - remove after all tests will become green.,1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"  public static final String FUNCTION_NAME = ""extract"";","  public static final String _name = ""extract"";",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal "", retries="" 3 times.",It seems that `e.getCause()`may not always contain expected exception (TransmissionCancelException).,"                        "", retries="" + retries + "", cause='"" + e.getCause().getMessage() + ""']"");",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Include class name in the exception string,"      throw new RuntimeException(""Caught exception while creating new AccessControlFactory instance"", e);",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,```,"          //  handleWithAllSourceFilesExist(targetFileIdentifier, sourceFileIdentifiers);",1
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,This is the first place in the `spi.navigator` API where `FileObject` is exposed. Until now the navigator API (not implementation) was FileSystem API free.,        public @CheckForNull Collection<? extends NavigatorPanel> panelsFor(@NonNull FileObject file);,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,Use a logger ?,"                System.out.println(""Could not get InputStream of Run Process"");",1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,Better add them in the tail of ConfigPhysicalPlanType,"  AddTriggerInTable,
EnumConstantDeclaration   DeleteTriggerInTable,
EnumConstantDeclaration   GetTriggerTable,
EnumConstantDeclaration   UpdateTriggerStateInTable,",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Remove //TODO,    // TODO: deprecate ALERT task type,1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""span"" is nullable here.",This line maybe cause NullPointException when the isConsumer equals false. Or remove the judgment if you are sure this instrumentation only call by consumer side,        span.setComponent(ComponentsDefine.SOFARPC);,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,It's better to change these to Logger.error() level too.,"        System.out.println(""[ERROR] Close file error ! "" + e.getMessage());",1
Raw types should not be used,Provide the parametrized type for this generic.,not required in this patch. but we should think if we can decide whether to read entire set and filter or just do random seeks based on candidate set size to be filtered for.,  public Set<String> filterRowKeys(Set candidateRowKeys) {,0
Unused method parameters should be removed,"Remove this unused method parameter ""externalTable"".","    private void processAddCol{Alter}Operation(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {","    private void processAddColumn(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {",0
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""d"" parameter (sonar.java.source not set. Assuming 8 or greater.)",can be this part of condition part of the `anyMatch` clause ?,                -> ((d.getStartPosition() >= startPos) && (d.getEndPosition() <= endPos))).anyMatch((d),0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,    return !isUDAFExpression();,"    if (isUDAFExpression()) {
ReturnStmt       return false;
ReturnStmt     }
ReturnStmt     return true;",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""tempMailData"" 3 times.",use createCacheKey() instead? ,"      jobStore.update(id, ""tempMailData"", tempMailData);",1
Field names should comply with a naming convention,"Rename this field ""_bootstrapJob"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Change this variable to `_useRelativePath`,  protected boolean _bootstrapJob = false;,1
"""ThreadLocal"" variables should be cleaned up when no longer used","Call ""remove()"" on ""wrappers"".",is ThreadLocal serializable? Should StructLikeMap be?,  private final ThreadLocal<StructLikeWrapper> wrappers;,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"seems weird that this would be called maxRetries""Init"" when it never changes",  private static final int maxRetriesInit = 5;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"follow one convention for time, use long as you would not have to worry about TZ. 
also please be consistent with parameter naming camelCase vs under_score.","  public String getEvalStatsAlertFilter(String function_id, String startTimeIso, String endTimeIso) throws Exception{",0
"Unused ""private"" fields should be removed","Remove this unused ""MM2SourceSeparator"" private field.","I can't find the place using these, have you submitted all codes?","    private String MM2SourceAlias = """";
FieldDeclaration     private String MM2SourceSeparator = """";",1
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,nit: order should be static final. line break should also be by the = operator,"  private final static Map<PortableDataType, Map<ServiceMode, GoogleAuth>> DATA_TYPE_AUTHS = new",1
Anonymous inner classes containing only one method should become lambdas,Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.),is this executor necessary?,                executorRepository.getPoolRouterExecutor().execute(new Runnable() {,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""18init_zero_not_nullIN9doris_udf9BigIntValEEEvPNS2_15FunctionContextEPT_"" 5 times.",changed?,"            prefix + ""18init_zero_not_nullIN9doris_udf9BigIntValEEEvPNS2_15FunctionContextEPT_"",",0
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,Use `Connection connection = EnvFactory.getEnv().getConnection();`,"                Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");",1
Field names should comply with a naming convention,"Rename this field ""_upperLimit"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Suggest renaming `_upperLimit` to `_nextNonMatchingDocId`,  private int _upperLimit;,1
"""ThreadLocal"" variables should be cleaned up when no longer used","Call ""remove()"" on ""DATE_FORMATTER"".",Let's use DateTimeFormatter from Java Time API instead. ,"    private static final ThreadLocal<SimpleDateFormat> DATE_FORMATTER = new ThreadLocal<SimpleDateFormat>() {
MethodDeclaration         /** {@inheritDoc} */
MethodDeclaration         @Override protected SimpleDateFormat initialValue() {
ReturnStmt             return new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss:SSS Z"");
MethodDeclaration         }
MethodDeclaration     };",0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",Why change this to ThreadPoolExecutor? Because MetricsConnection need this?,  private volatile ThreadPoolExecutor batchPool = null;,0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".",Sync timer checkpoint every 3 seconds and syncAll every 60 seconds?,"                }, 1000 * 10, 3 * 1000, TimeUnit.MILLISECONDS);",0
Raw types should not be used,Provide the parametrized type for this generic.,Raw use of parameterized class SimpleName ,"                    stack.add(new Pair(combinedNode, needCombineChildren.childes));",1
"""public static"" fields should be constant","Make this ""public static ACTIVE_PROFILE"" field final","As a key feature of 7.0.0, this flag should be `true` as default. @arugal Could you share your concern?",        public static boolean ACTIVE_PROFILE = false;,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",Maybe we do not need to break the lines here?,"      return new ProducerRecord<String, String>(topic,",0
Methods should not have too many parameters,"Constructor has 8 parameters, which is greater than 7 authorized.",Can you fix indentation on the next line as well?,"  private OutputFileFactory(PartitionSpec spec, FileFormat format, LocationProvider locations, FileIO io,",0
Unused local variables should be removed,"Remove this unused ""count"" local variable.",Remove this.,    int count = batchIterator.totalLength();,1
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""url"".",Please check why existing code works for our SQLServer use cases and whether this change could break them.,"    String url = ""jdbc:sqlserver://"" + host.trim() + "":"" + port + "";databaseName="" + database.trim();",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"We will have a checkpoint marker on disk, don't we?",    // TODO: IGNITE-16898 It will most likely need to be removed,0
Class variable fields should not have public accessibility,Make CONFLICT_MATRIX a static final constant or non-public and provide accessors if needed.,If true means 2 operations have no conflict. which should be `compatibilityMatrix`.,    public static Boolean[][] CONFLICT_MATRIX;,0
"Unused ""private"" fields should be removed","Remove this unused ""logger"" private field.",Looks like we can remove this logger.,  private static final Logger logger = LoggerFactory,1
Raw types should not be used,Provide the parametrized type for this generic.,"Let's annotate the nullable parameter as `Nullable`, same for other annotated functions",  public static String toJsonMapStr(Map map),0
Class variable fields should not have public accessibility,Make FILENAME_METADATA_FIELD_POS a static final constant or non-public and provide accessors if needed.,this could be a separate cleanup task: make constants for all meta fields and adopt them across codebase,  public static int FILENAME_METADATA_FIELD_POS = 4;,1
"Unused ""private"" fields should be removed","Remove this unused ""_controllerLeaderHostPortNotUsed"" private field.",Please remove this variable,  private volatile String _controllerLeaderHostPortNotUsed = null;,1
"Unused ""private"" fields should be removed","Remove this unused ""jobStore"" private field.",Does this comment still apply?,  private JobStore jobStore;  // TODO(olsona): use jobStore,0
Field names should comply with a naming convention,"Rename this field ""_offlineBrokerTenant"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","  private String _offlineServerTenant;
Same foe the realtime part",  private String _offlineBrokerTenant;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Why not replace above two lines with:

`throw new RuntimException(""Failed to setup the mapper task"", ioe);`
",        throw new RuntimeException(ioe);,0
"Synchronized classes Vector, Hashtable, Stack and StringBuffer should not be used","Replace the synchronized class ""StringBuffer"" by an unsynchronized one such as ""StringBuilder"".","It's not really just the constructor here ... maybe change method name.
","  private static void appendConstructor(String name, Class<?> targetType, StringBuffer code) {",0
"Unused ""private"" fields should be removed","Remove this unused ""timeBucket"" private field.",`abstract class Source` includes this already.,    private long timeBucket;,1
String literals should not be duplicated,Use already-defined constant 'PARTIAL_TYPE' instead of duplicating its value here.,Let's rewrite to 'else-if',"        else if (type.equals(""SORTED"") || type.equals(""PARTIAL"") || type.equals(""PK"")) {
ThrowStmt             if (type.equals(""PARTIAL"")) {",0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,It's best to keep the format consistent. rt=%sms,"                System.out.printf(""rt:%sms, SendResult=%s%n"", System.currentTimeMillis() - begin, result);",0
Throwable and Error should not be caught,Catch Exception instead of Throwable.,"Do you also need to log the `Throwable`?
",    } catch (Throwable t) {,0
Field names should comply with a naming convention,"Rename this field ""_dataOffset"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Add another `final int _headerEntryChunkOffsetSize` here, determined based on version",  protected long _dataOffset;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""SELECT begin_lat, begin_lon, driver, end_lat, end_lon, fare, partitionpath, rider, ts, uuid FROM hudi_ro_table"" 7 times.","probably you can separate out into two lines. 
val hudiDf = spark.sql(""SELECT begin_lat, begin_lon, driver, end_lat, end_lon, fare, partitionpath, rider, ts, uuid FROM hudi_ro_table"")
assert insertDf.except(hudiDf).count == 0","    assert insertQueryDataIn.except(spark.sql(""SELECT begin_lat, begin_lon, driver, end_lat, end_lon, fare, partitionpath, rider, ts, uuid FROM hudi_ro_table"")).count() == 0;",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Yes, we should use the one from `TableScanIterable`. That conversion is from internal representations (e.g., long for timestamps) to Iceberg generics (`LocalDateTime` or `OffsetDateTime` for timestamps) so it is the right one to use here. When we add support for Pig or Hive objects, we would need to convert differently for those.",        //TODO: seems like we have to specify a converter to convert the partition values,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""chunkSize"".",remove,    long chunkSize = getChunkSize(chunk);,1
Class variable fields should not have public accessibility,Make PROPERTIES a static final constant or non-public and provide accessors if needed.,"The properties should be instance level, according to your latest update. This should be named as `INSTANCE_PROPERTIES`, and documents is required to update.","        public static Map<String, String> PROPERTIES = new HashMap<String, String>();",1
Methods should not return constants,Remove this method and declare a constant for this value.,"Since the `getExplainString` function only needs to use the fragments variable, the `getExplainString` implementation of the old and new optimizers can be unified in the abstract class","        return ""Not implemented yet"";",0
Static non-final field names should comply with a naming convention,"Rename this field ""PEER_MAX_LENGTH"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Move this to Plugin, this is not a part of core API, right? And don't put plugin name in comments, you wouldn't know when someone add it to somewhere else, considering `PeerUtil` is a core API",        public static int PEER_MAX_LENGTH = 200;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,?,        //TODO: add idxs to SqlIndexView here!!!,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""org.apache.parquet.hadoop.ColumnChunkPageWriteStore"" 3 times.","These can be added to the same builder to avoid the need for a `static` block like this.
java
  private static DynConstructors.Ctor<PageWriteStore> ctor = DynConstructors.builder(PageWriteStore.class)
      .hiddenImpl(...) // 1.11
      .hiddenImpl(...) // 1.10
      .build()","          .hiddenImpl(""org.apache.parquet.hadoop.ColumnChunkPageWriteStore"",",0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,Can you comment the time unit for these time setting?,    int DORIS_REQUEST_CONNECT_TIMEOUT_DEFAULT = 30 * 1000;,0
Class variable fields should not have public accessibility,Make content a static final constant or non-public and provide accessors if needed.,No need `@SerializedName`?,        public BackupContent content;,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,logger?,        e.printStackTrace();,1
Static non-final field names should comply with a naming convention,"Rename this field ""BASE_URL"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",final,"  private static String BASE_URL = ""https://api.deezer.com"";",0
"""public static"" fields should be constant","Make this ""public static TIMESTAMP_PRECISION"" field final",Just use a local variable is good,"  public static String TIMESTAMP_PRECISION = ""ms"";",0
Raw types should not be used,Provide the parametrized type for this generic.,"huh?
",      @Inject AbstractList abstractList;,0
Field names should comply with a naming convention,"Rename this field ""_brokerMetrics"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Remove this line,  private BrokerMetrics _brokerMetrics;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Default value cannot be null"" 4 times.",We can always do that later.,"      Preconditions.checkArgument(defaultValue != null, ""Default value cannot be null"");",0
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @deprecated Javadoc tag.,"(optional, code format) keep parameters in the same line. Same for the other constructor","  public FieldConfig(String name,",0
Printf-style format strings should be used correctly,%n should be used in place of \n to produce the platform-specific line separator.,"keyEntry could be renamed to entry, and so is the obove","            System.out.printf(""%-50s=  %s\n"", keyEntry.getKey(), keyEntry.getValue());",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Replace  e.printStackTrace(); with a log.,      e.printStackTrace();,1
Unused local variables should be removed,"Remove this unused ""service"" local variable.","`service` not used here, why rewrite `#handle`?",        MotanService service = clazz.getAnnotation(MotanService.class);,1
"Unused ""private"" fields should be removed","Remove this unused ""retryWaitTimeMs"" private field.",So what is the meaning of these two variables (and the config items) in your implementation?,"  private final int retryMaxCount;
FieldDeclaration   private final int retryWaitTimeMs;",0
Methods should not have too many parameters,"Constructor has 8 parameters, which is greater than 7 authorized.",Does `Schema` need to be fully qualified?,"  AvroFileAppender(org.apache.iceberg.Schema icebergSchema, Schema schema, OutputFile file,",0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,Nit:   Maybe we could remove this method now because the `InternalRowWriter` don't need this any more if we plan to address this comment: https://github.com/apache/iceberg/pull/3248/files#diff-d3255f1d9dad8c538687fe8a94d585736b565cccb0952a9a5595d1ef9b952b93R144,    public List<OrcValueWriter<?>> writers() {,0
"Unused ""private"" fields should be removed","Remove this unused ""compositeRules"" private field.",This should move to the last field of the class.,    private List<CompositeAlarmRule> compositeRules;,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""parameterContext"" is nullable here.",It should also be invalid if it references a sensitive parameter.,                if (!parameterContext.getParameter(paramRef.getParameterName()).isPresent() ) {,0
Raw types should not be used,Provide the parametrized type for this generic.,It seems that we should update the JavaDoc.,"    public IgniteBiTuple<Map<Class<?>, Collection>, ? extends GridSpringResourceContext> loadBeans(",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,there is no `ClusterDecommission` now. So I think we should remove it too.,"    ClusterDecommission // after finished cluster decommission, the backend will be removed from cluster.",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""exception"" 3 times.", Replace with `ShenyuException`,"            throw new RuntimeException(""exception"");",0
Empty statements should be removed,Remove this empty statement.,Remove the semicolon,            ;,1
Throwable and Error should not be caught,Catch Exception instead of Throwable.,`finally`?,"        } catch (Throwable t) {
ExpressionStmt             buf.release();
ThrowStmt             throw t;
MethodDeclaration         }",0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.","Try to override these two methods, you can refer to `LastValueAggrResult`","  protected void deserializeSpecificFields(ByteBuffer buffer) {}
MethodDeclaration   @Override
BlockStmt   protected void serializeSpecificFields(OutputStream outputStream) {}",0
"""switch"" statements should have ""default"" clauses",Add a default case to this switch.,"*[MissingCasesInEnumSwitch](https://errorprone.info/bugpattern/MissingCasesInEnumSwitch):*  Non-exhaustive switch; either add a default or handle the remaining cases: SERVICE, ENDPOINT, SERVICE_RELATION

Reply with *""**@sonatype-lift help**""* for info about LiftBot commands.
Reply with *""**@sonatype-lift ignore**""* to tell LiftBot to leave out the above finding from this PR.
Reply with *""**@sonatype-lift ignoreall**""* to tell LiftBot to leave out all the findings from this PR and from the status bar in Github.

When talking to LiftBot, you need to **refresh** the page to see its response. [Click here](https://help.sonatype.com/lift/talking-to-lift) to get to know more about LiftBot commands.

---

Was this a good recommendation?
[ [? Not relevant](https://www.sonatype.com/lift-comment-rating?comment=290183795&lift_comment_rating=1) ] - [ [? Won't fix](https://www.sonatype.com/lift-comment-rating?comment=290183795&lift_comment_rating=2) ] - [ [? Not critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=290183795&lift_comment_rating=3) ] - [ [? Critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=290183795&lift_comment_rating=4) ] - [ [? Critical, fixing now](https://www.sonatype.com/lift-comment-rating?comment=290183795&lift_comment_rating=5) ]",            switch (entity.getScopeType()) {,1
Jump statements should not be redundant,Remove this redundant jump.,"With this, do we even need the DefaultCrypter?",    return;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Can you create & reference an issue for this?,  // TODO: the delay should be more easily configurable,1
"""Collections.EMPTY_LIST"", ""EMPTY_MAP"", and ""EMPTY_SET"" should not be used","Replace ""Collections.EMPTY_LIST"" by ""Collections.emptyList()"".",`Collections.emptyList()`,        return Collections.EMPTY_LIST;,1
Boolean literals should not be redundant,Remove the unnecessary boolean literal.,"This can be simplified to:
this.fileSystemMetadata = fileSystemMetadata == null || fileSystemMetadata;",    this.fileSystemMetadata = fileSystemMetadata == null ? true : fileSystemMetadata;,1
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,Move this to WriteHandle ?,  public boolean canWrite(HoodieRecord record) {,0
Field names should comply with a naming convention,"Rename this field ""LOOP_THREAD_POOL"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",    private final ExecutorService  loopPool;,    private final ExecutorService LOOP_THREAD_POOL;,1
Boolean expressions should not be gratuitous,"Remove this expression which always evaluates to ""true""","Why do we change this part? If current watermark is 09am, does that mean data for 09 has completed? And then if we see dat for 09am, is that a late data? ",    if(partitionEpochTime >= previousWatermark) {,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""setPayloadMethod"" is nullable here.","This a byte array copy? If we wanted to wrap w/o copy, could we do that?","          byteStringObject = copyFromMethod.invoke(null, payload);",0
Raw types should not be used,Provide the parametrized type for this generic.,    for (Future future : futureList) {,    for (Future future: futureList) {,0
Unused method parameters should be removed,"Remove this unused method parameter ""path"".",remove,  public boolean createHardLink(String path) {,1
Unused assignments should be removed,"Remove this useless assignment to local variable ""topicMetric"".",just use getSpec().getMetric().. I dont see a reason to overrider plain simple getters/setters.,    String topicMetric = getSpec().getTopicMetric();,0
Abstract classes without fields should be converted to interfaces,"Convert the abstract class ""JobLock"" into an interface. (sonar.java.source not set. Assuming 8 or greater.)","can this be an interface instead of an abstract class?
",public abstract class JobLock implements Closeable {,1
Empty arrays and collections should be returned instead of null,Return an empty collection instead of null.,Should we throw some kind of unimplemented exception in such places instead of just returning null?,        return null;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Is this right?,,0
Static non-final field names should comply with a naming convention,"Rename this field ""DEFAULT_PREAGGREGATED_KEYWORD"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","KEYWORD --> DIMENSION_VALUE. Add java doc for these constants
","  public static String DEFAULT_PREAGGREGATED_KEYWORD = ""all"";",0
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,"it is recommended to throw specific exceptions instead of using ```assert```, because assertions can be disabled at runtime in the JVM and they throw AssertionErrors, which is usually not expected in normal programs.",    assert minA <= maxA;,1
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""r"" parameter (sonar.java.source not set. Assuming 8 or greater.)",I think this anonymous variable `r` should be changed to `putMessageResult` for readability,        return putMessageResult.thenApply((r) ->,0
"""public static"" fields should be constant","Make this ""public static max_running_rollup_job_num"" field final",`max_running_rollup_job_num_per_table` ? ,    public static int max_running_rollup_job_num = 1;,0
Field names should comply with a naming convention,"Rename this field ""_numTasks"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Can you add a comment on what the `task` would mean in this context? (e.g. the unit of parallelism),  protected final int _numTasks;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,How are the db and table name passed?,        //TODO Implement HiveCatalog,0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""future"".","KVInt is the pair, I think?","                CompletableFuture<Pair<String, Long>> future = CompletableFuture.supplyAsync(() -> {",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,delete this.,"//      throw new UnsupportedOperationException(""Transforms not supported in selection queries."");",1
"Unused ""private"" fields should be removed","Remove this unused ""segmentId"" private field.","*SameNameButDifferent:*  The name `segmentId;` refers to [java.lang.SuppressWarnings, lombok.Generated, org.apache.skywalking.generator.Generator, java.lang.String] within this file. It may be confusing to have the same name refer to multiple types. Consider qualifying them for clarity. [(details)](https://errorprone.info/bugpattern/SameNameButDifferent)

(at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)",    private Generator<String> segmentId;,0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,Can we put this in a class that isn't IA.Public?,  int DEFAULT_HTTP_MAX_HEADER_SIZE = 64 * 1024; // 64k,1
"Reflection should not be used to increase accessibility of classes, methods, or fields",This accessibility update should be removed.,"Whilst this is common in the pinot codebase, doing things like this prevents use on JDK16+, creating obstacles to adoption of highly relevant JDK innovations (Vector API, foreign memory access, foreign function interface and so on).  ",      _addUrlMethod.setAccessible(true);,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""message"" 18 times.","Should be detection pipeline, not subscription group. And this error checking logic is missing in the /create-alert endpoint.","      responseMessage.put(""message"", ""Failed to create the subscription group. Reach out to the ThirdEye team."");",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"To be honest, there is no need to create more than one selector. One thread for processing IO event 
is more than enough",                    .selectorCount(1) // TODO: Get from settings,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Wrong "" 4 times.","      logger.error(""Wrong {}, please set as: {} !"", TIMESTAMP_PRECISION_STRING, properties
          .getProperty(TIMESTAMP_PRECISION_STRING));","      logger.error(""Wrong "" + TIMESTAMP_PRECISION_STRING + "", please set as: "" + properties
NameExpr           .getProperty(TIMESTAMP_PRECISION_STRING) + "" !"");",0
Static non-final field names should comply with a naming convention,"Rename this field ""KEY_COUNT"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Should be renamed to `ELEMENT_MAX_NUMBER`.,        public static int KEY_COUNT = 3;,1
Raw types should not be used,Provide the parametrized type for this generic.,We should check for errors only in the selected lambda expr.,        for (Diagnostic d : ctx.getInfo().getDiagnostics()) {,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""jsonNode"" is nullable here.","this is already handled in `JsonUtil.getString(ERROR, jsonNode);`","    Preconditions.checkArgument(jsonNode.has(ERROR), ""Cannot parse missing field: error"");",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Excellent work !  While it might be better with commented codes removed.,    // showNodesInSchemaTemplateStatement.setTemplateName(ctx.templateName.);,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,remove e.printStackTrace(),            e.printStackTrace();,1
Classes should not be empty,"Remove this empty class, write its code or make it an ""interface"".",remove version,    static class Version{,1
"""Collections.EMPTY_LIST"", ""EMPTY_MAP"", and ""EMPTY_SET"" should not be used","Replace ""Collections.EMPTY_MAP"" by ""Collections.emptyMap()"".","this means, nothing is getting added back to the properties right. ",    return Collections.EMPTY_MAP;,0
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,Math.random()? ,"    builder.append(""\""values_"" + Math.random() + ""_"" + values.length + ""\"": {"");",1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"        System.out.println(""Starting a server node... Logging to file: example-node.log"");","        System.out.println(""Starting a server node... Logging to file: ignite.log"");",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Code style: add space after `//`,        } else { //IPv4 || IPv6 without port || empty host,0
Boolean checks should not be inverted,"Use the opposite operator (""!="") instead.","    if (Long.parseLong(properties.getProperty(PARTITION_INTERVAL_STRING))
        != partitionInterval) {","    if (!(Long.parseLong(properties.getProperty(PARTITION_INTERVAL_STRING))
NameExpr         == partitionInterval)) {",0
Unused local variables should be removed,"Remove this unused ""albumUri"" local variable.",Where does albumUri get used? ,        String albumUri =,1
Static non-final field names should comply with a naming convention,"Rename this field ""max_dynamic_partition_num"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",新配置加个文档说明吧,    public static int max_dynamic_partition_num = 500;,0
Collection.isEmpty() should be used to test for emptiness,Use isEmpty() to check whether the collection is empty or not.,` _helixAdmin.addInstanceTag()` can be simplified to `instanceTags.add()`,    if (instanceTags == null || instanceTags.size() == 0) {,0
Field names should comply with a naming convention,"Rename this field ""_enableSegmentTrim"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","No need to use object
  private final boolean _enableSegmentTrim;
  private final int _minSegmentTrimSize;","  private final Boolean _enableSegmentTrim;
FieldDeclaration   private final Integer _segmentTrimSize;",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,the same as above...,"              throw new Exception(e + "" "" + Arrays.toString(e.getStackTrace()) + "" "" + m);",0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"I am not able to follow the need for this new boolean. It looks like this method is called from only one place. If thats the case, why don't we remove the isLeader check completely",    if (!isNewTableSetup) {,0
Local variables should not shadow class fields,"Rename ""headerBuffer"" which hides the field declared at line 95.","foreach header{Reader, Writer} call close()  (which may be no-op given we close buffers but to stick to abstractions)",    for (PinotDataBuffer headerBuffer : headerBuffers) {,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,can we UT this?,public class ReflectUtil {,0
Field names should comply with a naming convention,"Rename this field ""_numberOfPartitions"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","(nit) rename to `_numPartitions`, same for `_numOutputFiles`",  private int _numberOfPartitions;,1
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"If my data source is kafka, does it mean that the list of partitions to delete should be received from kafka? If answer is yes, it maybe cumbersome to combine ingestion workflow with the data and partition deletion.",        List<String> partitions = records.map(record -> record.getPartitionPath()).distinct().collect();,0
"""public static"" fields should be constant","Make this ""public static DEFAULT_DAG_NAME"" field final","The name can be in caps (TestDagName), no need for camecasing..","  public static String DEFAULT_DAG_NAME = ""testDagName"";",0
Raw types should not be used,Provide the parametrized type for this generic.,      List<Integer> sortedArray = new ArrayList<>();,      List<Integer> sortedArray = new ArrayList();,1
Static non-final field names should comply with a naming convention,"Rename this field ""DEBUG_SENDER_MANAGER"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Make DEBUG_SENDER_MANAGER to extend SenderManager and change use a faked implementation of SenderManager in test.,  private static SenderManager DEBUG_SENDER_MANAGER = null; // test only,0
Return values should not be ignored when they contain the operation status code,"Do something with the ""boolean"" value returned by ""createNewFile"".",I don't think this is necessary. moveFiles will throw an error if dest file already exists.,      dstFile.createNewFile();,0
"Blocks should be synchronized on ""private final"" fields","""chore"" is a method parameter, and should not be used for synchronization.","Other than here, do we have synchronization on `ScheduledChore` elsewhere? I think all other methods themselves are synchronized which is good but how do we prevent anyone from synchronizing on `ScheduledChore` instance in future? Perhaps for now, we can write a Javadoc comment on `ScheduledChore` providing this info?",    synchronized (chore) {,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove this.,      // e.printStackTrace();,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal "", please set as: "" 3 times.","      logger.error(""Wrong {}, please set as: {} !"", TIMESTAMP_PRECISION_STRING, properties
          .getProperty(TIMESTAMP_PRECISION_STRING));","      logger.error(""Wrong "" + TIMESTAMP_PRECISION_STRING + "", please set as: "" + properties
NameExpr           .getProperty(TIMESTAMP_PRECISION_STRING) + "" !"");",0
Static non-final field names should comply with a naming convention,"Rename this field ""MAX_WAIT_CHANNEL_AUTO_CONNECT_COUNT"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Default should be 10.,        public static long MAX_WAIT_CHANNEL_AUTO_CONNECT_COUNT = 1;,0
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,Let's rename it to `isMixNodes` or something more clear then just `random` ,        boolean random = ThreadLocalRandom.current().nextBoolean();,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""false"" 5 times.","for scheduled AND runImmediately flows, seems we would only `scheduleJob()` when quota finds it permitted to run immediately (right now).  are those semantics intended?","    if (!jobConfig.containsKey(ConfigurationKeys.JOB_SCHEDULE_KEY) || PropertiesUtils.getPropAsBoolean(jobConfig, ConfigurationKeys.FLOW_RUN_IMMEDIATELY, ""false"")) {",0
Class variable fields should not have public accessibility,Make TIME_BUCKETS a static final constant or non-public and provide accessors if needed.,Where are these variables being used?,"  public static String TIME_BUCKETS = ""timeBuckets"";",0
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,"Bytes is marked as IA.Public, so is it OK to change from SecureRandom to normal Random here?
I'm not saying we can not do this, as there is no change on the method signatures, just asking.",  private static final Random RNG = new Random();,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,how about use log to replace system.out,"        System.out.println(""selector removed : name = "" + pluginData.getName());",1
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,"(optional, code format) keep parameters in the same line. Same for the other constructor","  public FieldConfig(String name,",0
Raw types should not be used,Provide the parametrized type for this generic.,"I think this is making the API more complicated for the convenience of developers, so I don't think that we should expose it.",    public Builder caseSensitive(boolean newCaseSensitive) {,0
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,this is covered by the next assertion,        assert relType != null;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""IGNITE_QUERY_CONTEXT"" 3 times.",QCTX_VARIABLE_NAME ?,"        s.setVariable(""IGNITE_QUERY_CONTEXT"", ValueNull.INSTANCE);",0
"Unused ""private"" fields should be removed","Remove this unused ""driver"" private field.",FragmentInstanceExecution 和 ExecFragmentInstance 命名有点冲突，把 ExecFragmentInstance 改成 Driver 如何？,  private final ExecFragmentInstance driver;,0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"@bschell : The only difference between GlobalDeleteKeyGenerator and ComplexKeyGenerator is that the former always creates an empty-partition path. right ? In that case, can we simply refactor the getKey() method in ComplexKeyGenerator and have GlobalDeleteKeyGenerator extend ComplexKeyGenerator with necessary changes to make it to work for empty partition-path. The advantage is we use all the logic related  to nested fields handling in one place ? Let me know your thoughts.",  public HoodieKey getKey(GenericRecord record) {,0
"""ThreadLocal"" variables should be cleaned up when no longer used","Call ""remove()"" on ""lookupWrapper"".",Do we need `ThreadLocal` as we plan jobs using multiple threads?,  private final ThreadLocal<StructLikeWrapper> lookupWrapper = ThreadLocal.withInitial(,1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""existingPath"" is nullable here.",This logic is now incorrect. When it's first run the existingPath will be null.,                    createPath += existingPath.substring(existingPath.length()-SEQUENTIAL_SUFFIX_DIGITS);,0
Local variables should not shadow class fields,"Rename ""port"" which hides the field declared at line 68.",It looks weird here. `ipAndPort` and `port`. Maybe `host` and `port` would be better. WDYT? @yu199195 @SaberSola ,"        String ipAndPort = props.getProperty(""ipAndPort"");
ExpressionStmt         String port = props.getProperty(""port"");",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,TODO to the ticket being resolved.,    //TODO: IGNITE-14501: shrink IdentityHashMap when empty and capacity is larger than default.,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Why not let the `NoSuchTableException` propagate?,"      throw new RuntimeException(String.format(""Couldn't load table '%s' in catalog '%s'"", ident, catalog.name()), e);",0
"Unused ""private"" fields should be removed","Remove this unused ""showClusterStatement"" private field.",Unused local variable,  private ShowClusterStatement showClusterStatement;,1
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""double"".","Hi,

I have checked the failed tests in [CompressionRatioTest.java, IoTDBConfigDynamicAdapterTest.java](https://travis-ci.org/apache/incubator-iotdb/jobs/577722148), and it is caused by "" / by zero"" when initializing. Maybe a judgement needs to be added here?",				return Double.valueOf(100 * (1 - idleCpuTime / totalCpuTime)).doubleValue();,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,need to add some meaningful message in exception,"        throw new RuntimeException("""");",1
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @deprecated Javadoc tag.,Because PQL endpoint has been deprecated right?,"  public static Serializable getFormattedValue(Object value, ColumnDataType dataType) {",1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Use logger.,                                    e.printStackTrace();,1
Methods and field names should not be the same or differ only by capitalization,"Rename method ""content"" to prevent any misunderstanding/clash with field ""CONTENT"" defined on line 42.",Will `DeleteFile` extend this or will it be totally separate?,  default FileContent content() {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""SELECT begin_lat, begin_lon, driver, end_lat, end_lon, fare, partitionpath, rider, ts, uuid FROM hudi_ro_table"" 7 times.","lets ensure we don't delete all partition paths, but just 1 or 2. ","    assert spark.sql(""SELECT begin_lat, begin_lon, driver, end_lat, end_lon, fare, partitionpath, rider, ts, uuid FROM hudi_ro_table"").except(beforeDeleteByPartition).count() == 0;",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"I believe the write can only come from org.apache.orc.storage.ql.exec.vector.BytesColumnVector, which would be heap array backed. Unless there is another implementation I don't know about.

See
https://orc.apache.org/api/hive-storage-api/index.html?org/apache/hadoop/hive/ql/exec/vector/BytesColumnVector.html
and
https://github.com/apache/hive/blob/master/storage-api/src/java/org/apache/hadoop/hive/ql/exec/vector/BytesColumnVector.java","      // TODO - This copy slows it down, perhap unnecessarily. Is there any other way to tell, or no?",0
"""static"" members should be accessed statically",Change this instance-reference to a static reference.,"Isn't this essentially a local variable at this point? You're not reusing it within the thread, every `WorkUnitCreator` creates a new one.",          KafkaSource.this.kafkaConsumerClient.set(,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",You can use a static immutable map to avoid new a map for every statement,"    private HashMap<String, Long> validUnitMultiplier = new HashMap<String, Long>();",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Does this class need to be `public`? Could it be made package-private?

I have concerns around the usage of `ThreadLocal` for things that most cases don't need to be thread local. I don't want to give users too much room to hurt themselves because they don't consider that `CommitMetadata` is _only_ threadlocal and then their writes not working properly in the common case of writes without user-side multithreading (e.g. it gets set in one thread somewhere, but another thread is used for commit).

EDIT - Since this takes a `Callable`, it's less of a concern. I would still name it in a way that's a bit more reflective of the thread local nature (especially if we wanted a `CommitMetadata` class one day that doens't require a callable and is persistent). That and I always prefer things be package-private if possible.",public class CommitMetadata {,1
Unnecessary imports should be removed,Remove this unused import 'lombok.extern.slf4j.Slf4j'.,Remove?,import lombok.extern.slf4j.Slf4j;,1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",This method does nothing. I suggest this method cloud be remove,    private void quietStop() {,1
"Unused ""private"" fields should be removed","Remove this unused ""type"" private field.",如果是用数字就不用用字符串类型了吧？,    private String type;,0
"Unused ""private"" fields should be removed","Remove this unused ""startLatch"" private field.","What's this for?
",    private CountDownLatch startLatch;,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,is these needed by TPC-H?,        // TODO: process in/is null expression,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",Let's rename it to `ValueLongPair` so that its more generic and can be reused in the future,public abstract class ValueTimePair<V extends Comparable<V>> implements Comparable<ValueTimePair<V>> {,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,e.printStackTrace();,            e.printStackTrace();,0
"Nested ""enum""s should not be declared static","Remove this redundant ""static"" qualifier; nested enum types are implicitly static.",  public enum SettleCheckStatus {,  public static enum SettleCheckStatus {,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"i thought default tenant name was just ""default"", how is this different?","  public final static String DEFAULT_TENANT_NAME = ""DefaultTenant"";",0
Empty statements should be removed,Remove this empty statement.,this EmptyStmt ？,    ;,1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,The first letter of variable should be lowercase,"      AbstractChunkReader AbstractChunkReader = new ChunkReader(chunk, null);",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,nitpick: is this line supposed to stay? the vertical version is right below.,"//        return getDisco().getPkgs(distribution, versionNumber, latest, operatingSystem, LibCType.NONE, architecture, Bitness.NONE, archiveType, packageType, javafxBundled, /*directlyDownloadable*/ true, ReleaseStatus.NONE, TermOfSupport.NONE, Scope.PUBLIC);",1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",getFilteredTopics() should be movable to this class. Same applies for some of the metadata handling. The actual read of the topics metadata should be implementation-specific but there is additional post-processing that should be shareable.,public abstract class AbstractBaseKafkaConsumerClient implements GobblinKafkaConsumerClient {,0
Unused method parameters should be removed,Remove these unused method parameters.,nit : could we store schema in a variable?,"                                           Path hdfsAvroPath, File dataPath) {",0
"Mutable fields should not be ""public static""","Make this member ""protected"".",Is it possible to configure those bounds?,    public static final long[] DEFAULT_INVOCATION_BOUNDS = new long[] {,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Use logger.error  rather than print stack trace,      e.printStackTrace();,1
"Unused ""private"" fields should be removed","Remove this unused ""logger"" private field.",It seems that you never use this logger.,  private static final Logger logger = LoggerFactory.getLogger(AlignedReadOnlyMemChunk.class);,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""contacts"" 3 times.","This is not strictly necessary but would be easy-ish and nice to do. Can be a TODO if you want:

We're using Guice for the Google CloudExtension and would be cool to do for our transfer extension as well. You'd need to annotate GoogleContactsImporter and Exporter's constructors with @Inject, and include a GoogleTransferExtensionModule in this directory, which would @Provide a PeopleService. (Actually I think the no-arg constructors you're calling will initialize the peopleService and calendarInterface's to null and not work, maybe we should get rid of those actually)

You can look in GoogleCloudExtension as an example, I think it'd be pretty easy but it's fine with me to leave as is too.","    importerBuilder.put(""contacts"", new GoogleContactsImporter());",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Does this comment still apply?,  private JobStore jobStore;  // TODO(olsona): use jobStore,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""metrics"" 3 times.",`String METRICS_SERVLETS_DEFAULT[]` -> `String[] METRICS_SERVLETS_DEFAULT`,"  public static final String METRICS_SERVLETS_DEFAULT[] = { ""jmx"", ""metrics"", ""prometheus"" };",0
Unused assignments should be removed,"Remove this useless assignment to local variable ""configService"".","*[UnusedVariable](https://errorprone.info/bugpattern/UnusedVariable):*  The local variable SimpleName is never read.

---

<details><summary><b>ℹ️ Learn about @sonatype-lift commands</b></summary>

You can reply with the following commands. For example, reply with ***@sonatype-lift ignoreall*** to leave out all findings.
| **Command** | **Usage** |
| ------------- | ------------- |
| `@sonatype-lift ignore` | Leave out the above finding from this PR |
| `@sonatype-lift ignoreall` | Leave out all the existing findings from this PR |
| `@sonatype-lift exclude <file\|issue\|path\|tool>` | Exclude specified `file\|issue\|path\|tool` from Lift findings by updating your config.toml file |

**Note:** When talking to LiftBot, you need to **refresh** the page to see its response.
<sub>[Click here](https://github.com/apps/sonatype-lift/installations/new) to add LiftBot to another repo.</sub></details>



---

Was this a good recommendation?
[ [? Not relevant](https://www.sonatype.com/lift-comment-rating?comment=337688261&lift_comment_rating=1) ] - [ [? Won't fix](https://www.sonatype.com/lift-comment-rating?comment=337688261&lift_comment_rating=2) ] - [ [? Not critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=337688261&lift_comment_rating=3) ] - [ [? Critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=337688261&lift_comment_rating=4) ] - [ [? Critical, fixing now](https://www.sonatype.com/lift-comment-rating?comment=337688261&lift_comment_rating=5) ]",        final ConfigService configService = getManager().find(CoreModule.NAME),1
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,is 0 a valid mode?,        if ((sqlMode & ~MODE_ALLOWED_MASK) != 0) {,0
Methods should not have too many parameters,"Method has 17 parameters, which is greater than 7 authorized.","The original parameter list is not very graceful. I suggest we can only receive `args`, then use a builder to build(extract) the metadata of the bootstrap action. wdyt?","  private static int doBootstrap(JavaSparkContext jsc, String tableName, String tableType, String basePath,",1
Unused method parameters should be removed,Remove these unused method parameters.,"I am a little surprised this compiles, but should be safe at runtime.

Should these new methods eventually have an implementation that would produce the expected type?","    public List<? extends TypeMirror> visitBindingPattern(BindingPatternTree bpt, Object p) {",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","Have we evaluated using the Jersey Client API library as the REST client? https://howtodoinjava.com/jersey/jersey-restful-client-examples/

We are already using it Jersy to write the service. It seems natural to use it on the client-side as well. It can help us abstract away the low-level details of the client-server communication and avoid potential bugs. ",public abstract class AbstractRestClient {,0
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"Can you simply synchronize on serializeValue()?
If you must have serializeValue() call this method, you can rename it ""threadSafeSerializeValue"", since we don't use underscore in method names in Gobblin.
","  protected synchronized byte[] _serializeValue(String name, Object value, String... path) {",1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"Please use LOG here.
","      System.out.println(""Checking: "" + jobInputDir);",1
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,setThriftClass also change the method param name  to thriftClass,    public void set_thriftClass(String _thriftClass) {,1
Redundant casts should not be used,"Remove this unnecessary cast to ""int"".",I am a little confused about this. What does this calculate for?,        score = (int)(value * 10000 / t);,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Why doesn't this invoke the `close` method of the write client?,      // this.writeClient.close();,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Doesnt need to be abstract. You can implement a method here that returns the configured decoder class.,  public abstract KafkaMessageDecoder getDecoder(KafkaLowLevelStreamProviderConfig kafkaStreamProviderConfig) throws Exception;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove,"    //    memChunkGroup.write(insertTime, objectValue, schemaList);",1
Field names should comply with a naming convention,"Rename this field ""_bigDecimalLiteral"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Here we should introduce `byte[] _bytesLiteral`, and store the serialized big decimal",  private final BigDecimal _bigDecimalLiteral;,1
Field names should comply with a naming convention,"Rename this field ""_useDefaultValueOnError"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Let's make 2 configs for these 2 things: `continueOnError` and `validateTimeValue`

Suggest changing `useDefaultValueOnError` to `continueOnError` because it can be used for other ingestion errors, and we don't want to tie it to the implementation",  private boolean _useDefaultValueOnError;,0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,nit: May be rename this to `populateFieldWithDefaultValue` as that seems to be the intent of this function.,"  private static void populateNewRecordAsPerDataType(GenericRecord record, Field field) {",0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","Use a short name? 
 `private volatile BootstrapTakeoverState takeoverState = BootstrapTakeoverState.AUTO;`",    private volatile BootstrapTakeoverState bootstrapTakeoverState = BootstrapTakeoverState.AUTO;,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,use logger,      e.printStackTrace();,1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,    return Math.sqrt(popVariance(data));,"    double std_dev;
ExpressionStmt     std_dev = Math.sqrt(popVariance(data));
ReturnStmt     return std_dev;",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,Strange formatting. Space vs. tab? Using 8 spaces would be more consistent.,"	Module,",0
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""v"" parameter (sonar.java.source not set. Assuming 8 or greater.)",        return cur.closeAsync().thenRun(closeRun);,        return cur.closeAsync().thenAccept((v) -> closeRun.run());,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,This is not SkyWalking util. It is an agent util. Please move it into your plugin,public class MethodUtil {,0
Raw types should not be used,Provide the parametrized type for this generic.,"You can avoid some raw type warnings by using `Class<?>` here too.
",        Class rawTypeAsClass = (Class) rawType;,1
Arrays should not be created for varargs parameters,Remove this array creation and simply pass the elements.,":+1: 
There might be other things that belong in this list but none come to mind immediately.
","      new HashSet<String>(Arrays.asList(new String[] { ""reportUnknownTypes"" }));",0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"confusing..
how about if the measurements.length >1?
e.g., `insert into (time,  time) values ...  `
how to understand the second `time`?
",    if (this.measurements.length == 1) {,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"Should these constants be public / externalized as types?
Something like MetadataName(String)? 

and then MetadataNames.DATASET_URN would be a static ref to MetadataName(""Dataset-URN"")","  private final static String DATASET_URN_KEY = ""Dataset-URN"";",1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,        String sparkHome = Config.spark_home_default_dir;,        String spark_home = Config.spark_home_default_dir;,1
Unnecessary imports should be removed,Remove this unused import 'org.apache.curator.framework.api.CreateBackgroundModeACLable'.,"nit: unused import?
",import org.apache.curator.framework.api.CreateBackgroundModeACLable;,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Use `Do not implement this method` as a comment. For the exception message, I think it is better to use another description.","        throw  new RuntimeException(""Do not implement this method"");",0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,"Maybe a silly question, do we need to do this?  Will it be backward compatible if we just have everything go to ContentScanTask version given its a supertype?","  public static Map<Integer, ?> constantsMap(FileScanTask task, BiFunction<Type, Object, Object> convertConstant) {",1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""client"" is nullable here.","may need some synchronization and double check here? `readConfig` is invoked in a scheduled executor at fixed rate (`org.apache.skywalking.oap.server.configuration.api.ConfigWatcherRegister#start`), in an extreme situation, there may be two or more threads that run into this piece of code simultaneously. I'm not sure whether it's worthy to lazy initialize the `EtcdClient` or not.",                client = new EtcdClient(EtcdUtils.parse(settings).toArray(new URI[] {}));,0
Field names should comply with a naming convention,"Rename this field ""_maxByteSize"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Should this be initialized to 0 ?,  private int _maxByteSize;,0
Field names should comply with a naming convention,"Rename this field ""_results"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",You may directly use the `_intValuesSV` from the `BaseTransformFunction` without creating another member variable,  private int[] _results;,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,nit: (not a strong opinion) shall this be simply names as `ColumnStatsHelper`?,public class ColumnStatsIndexHelper {,0
Field names should comply with a naming convention,"Rename this field ""_controllerDefaultDeletedSegmentsRetentionInDays"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","(minor) 
  private final int _defaultDeletedSegmentsRetentionInDays;",  private final int _controllerDefaultDeletedSegmentsRetentionInDays;,0
"Null checks should not be used with ""instanceof""","Remove this unnecessary null check; ""instanceof"" returns false for nulls.",nit: `if (!(that instanceof BlockBucket))` this is enough,      if (that == null || !(that instanceof BlockBucket)) {,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,thanks for implementing. please move this to AlertJobResource.,"      @QueryParam(""cron"") String cron) throws Exception {",0
"""private"" methods called only by inner classes should be moved to those classes","Move this method into ""RegionTask"".",Add function annotations to show the difference between getLeaderDataNodeRegionGroupMap.,"  private Map<TDataNodeLocation, List<TConsensusGroupId>> getAllReplicaDataNodeRegionGroupMap(",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Better to use LOGGER.error() instead of e.printStackTrace(),      e.printStackTrace();,1
Using publicly writable directories is security-sensitive,Make sure publicly writable directories are used safely here.,"Nit:  Could we import this as a package, instead of using the full qualifier name here ? ","    testFile = java.nio.file.Files.createTempFile(""perf-bench"", null).toFile();",0
"""String#replace"" should be preferred to ""String#replaceAll""","Replace this call to ""replaceAll()"" by a call to the ""replace()"" method.","Please inject ` `(whitespace), rather than this strange `replaceAll`.","        String[] extensionParts = value.replaceAll(""-"", ""- "").split(""-"");",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,why change to `Exception`?,  public void releaseQueryResource(TSCloseOperationReq req) throws Exception {,1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"  LEVEL_STRATEGY,
  NORMAL_STRATEGY;","  LevelStrategy,
EnumConstantDeclaration   NormalStrategy;",0
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.db.engine.tsfilemanagement.level.LevelTsFileManagement'.,Remove unused import,import org.apache.iotdb.db.engine.tsfilemanagement.level.LevelTsFileManagement;,1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",Can assume that table still exists if we got here?,  protected void preCheck(TableDescriptor current) {,0
"Unused ""private"" fields should be removed","Remove this unused ""enableUpdateUITemplate"" private field.","*SameNameButDifferent:*  The name `enableUpdateUITemplate = false;` refers to [java.lang.SuppressWarnings, lombok.Generated] within this file. It may be confusing to have the same name refer to multiple types. Consider qualifying them for clarity. [(details)](https://errorprone.info/bugpattern/SameNameButDifferent)

(at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)",    private boolean enableUpdateUITemplate = false;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove commented code,        // },1
Two branches in a conditional structure should not have exactly the same implementation,This branch's code block is the same as the block for the branch on line 191.,Use `or` instead of else if,"    if (!hasCandidateResult()) {
IfStmt       setValue(extVal);
IfStmt     } else if (absExtVal.compareTo(absCandidateResult) > 0) {
IfStmt       setValue(extVal);
IfStmt     } else if (absExtVal.compareTo(absCandidateResult) == 0
BinaryExpr         && extVal.compareTo(candidateResult) > 0) {
ExpressionStmt       setValue(extVal);",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""false"" 4 times.",Use PropertiesUtils.getPropAsBoolean() here and check for the boolean instead of the string value.,"            .getProperty(ConfigurationKeys.FLOW_RUN_IMMEDIATELY, ""false"").equals(""true"")) {",0
Unnecessary imports should be removed,Remove this unused import 'io.netty.util.internal.StringUtil'.,Invalid imports need to be removed,import io.netty.util.internal.StringUtil;,1
Lambdas containing only one statement should not nest this statement in a block,Remove useless curly braces around statement (sonar.java.source not set. Assuming 8 or greater.),We will both touch flushedSequenceIdByRegion and storeFlushedSequenceIdsByRegion in persistRegionLastFlushedSequenceIds and removeDeletedRegionFromLoadedFlushedSequenceIds? Possible data race if we run removeDeletedRegionFromLoadedFlushedSequenceIds in background?,      new Thread(() -> {,0
"""equals(Object obj)"" and ""hashCode()"" should be overridden in pairs","This class overrides ""equals()"" and should therefore also override ""hashCode()"".","    @Override
    public boolean equals(Object obj) {",    public boolean equals(Object obj) {,1
"Array designators ""[]"" should be on the type, not the variable",Move the array designator from the variable to the type.,`String METRICS_SERVLETS_DEFAULT[]` -> `String[] METRICS_SERVLETS_DEFAULT`,"  public static final String METRICS_SERVLETS_DEFAULT[] = { ""jmx"", ""metrics"", ""prometheus"" };",1
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.jdbc.IoTDBStatement'.,This import is unused. Maybe you can remove it.,import org.apache.iotdb.jdbc.IoTDBStatement;,1
"""public static"" fields should be constant","Make this ""public static default_db_replica_quota_size"" field final","Add this new config in
docs/zh-CN/administrator-guide/config/fe_config.md
docs/en/administrator-guide/config/fe_config.md",    public static long default_db_replica_quota_size = 1024 * 1024 * 1024;,0
Anonymous inner classes containing only one method should become lambdas,Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.),Use `RunnableWithExceptionProtection` for all thread executor.,        executorService.submit(new Runnable() {,0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""double"".","These are not really min & max allowed, right? They are limits below and above which we ascend or descend rapidly? Also, you should derive these numbers from IDEAL_SSEGMENT_SIZE_BYTES",  private static final double MIN_ALLOWED_SEGMENT_SIZE_BYTES = 250 * 1024 * 1024;,0
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @Deprecated annotation.,Please prepare a Jackpot hint that would rewrite to `ProgressHandle.createSystemHandle`.,"    public static ProgressHandle createSystemHandle(String displayName, Cancellable allowToCancel, Action linkOutput) {",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"I'm sorry, this signature makes no sense. What's supposed to be the result of the method?
First of all, you forgot to mention ""& PolymorphicInstance"" here and above. Second, user doesn't expect any specific subclass, given that they only know string representation of the type. And base ""change"" class itself does not extend ""PolymorphicInstance"".",            // Method like: <T extends SimpleChange> T convert(String polymorphicId);,0
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""configNodeInfo"" parameter (sonar.java.source not set. Assuming 8 or greater.)",          (configNodeLocation) -> {,          (configNodeInfo) -> {,0
URIs should not be hardcoded,Refactor your code to get this URI from a customizable parameter.,/tmp --> System.gettemp dir or something like that,"    File tempDir = new File(""/tmp"", String.valueOf(System.currentTimeMillis()));",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,When will this be done?,    // TODO: add response to the output record,1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""committingSegmentDescriptor"" is nullable here.","we dont need to check the peer download scheme here, since we check and put the right value while committing metadata in PinotLLCRealtimeSegmentManager. We can always set the segment location. The if condition can be as before",      if (isSplitCommit && !isPeerSegmentDownloadScheme(committingSegmentDescriptor)) {,0
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""e"" parameter (sonar.java.source not set. Assuming 8 or greater.)",              .filter((e) -> req.dataNodeId == e.getKey()),              .filter((e) -> 1 == e.getKey()),0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"not sure if this will be too much. but do you think we can introduce an interface for keyGenFactory and have 2 impls for it. I see both of these factories have similar public apis, but down the line, each could potentially diverge. So, having a common interface might be good to hold the parity in place. ",public class HoodieAvroKeyGeneratorFactory {,0
"Unused ""private"" fields should be removed","Remove this unused ""hadoopConf"" private field.",Those two seems don't have to be private members because I did not see anywhere accessing them except the constructor.  ,"  private final CatalogLoader catalogLoader;
FieldDeclaration   private final Configuration hadoopConf;",1
Methods should not have too many parameters,"Method has 8 parameters, which is greater than 7 authorized.",should we think of introducing a builder pattern since we have too many overloaded constructors/initTableTypes? ,"  public static HoodieTableMetaClient initTableType(Configuration hadoopConf, String basePath, HoodieTableType tableType,",0
"""java.nio.Files#delete"" should be preferred","Use ""java.nio.file.Files#delete"" here for better messages on error conditions.",renameTo actually does the move. What are we deleting?,    return srcFile.renameTo(dstFile) && srcFile.delete();,1
"Declarations should use Java collection interfaces such as ""List"" rather than specific implementation classes such as ""LinkedList""","The return type of this method should be an interface such as ""Map"" rather than the implementation ""HashMap"".","We have to consider renaming/refactoring this class later. I find the naming rather misleading. Further, it seems to be tied to the query-based extractor yet it has a generic name and namespace.
","  public HashMap<Long, Long> getPartitions(long previousWatermark) {",0
"Strings and Boxed types should be compared using ""equals()""","Use the ""equals"" method if value comparison was intended.","Maybe this is better. Put it at the beginning.
if (!ctx.getCatalog().isReady()) {
    thrown new Exception(""Node catalog is not ready, please wait for a while"");
}","        if (masterHost == """" || masterRpcPort == 0) {",0
Field names should comply with a naming convention,"Rename this field ""_availableToClean"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","I feel that we can remove the synchronization logic by using (1) use `ConcurrentLinkedList`, and (2) run clean up periodically (since the clean up time does not need to be accurate).","  private final Queue<EndedTask> _endedTaskQueue = new LinkedList<>();
FieldDeclaration   private final ReentrantLock _queueLock = new ReentrantLock();
FieldDeclaration   private final Condition _availableToClean = _queueLock.newCondition();",0
Raw types should not be used,Provide the parametrized type for this generic.,You can do `getRecordStats().getOrElse(() -> new HashMap())`,"      Map<String, HoodieColumnRangeMetadata<Comparable>> columnRangeMap = stat.getRecordsStats().isPresent()",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,can we use timstamp (long)?,   // throw new SQLException(METHOD_NOT_SUPPORTED_STRING);,0
Class variable fields should not have public accessibility,Make TRACE_SQL_PARAMETERS a static final constant or non-public and provide accessors if needed.,Default to `false`,            public static boolean TRACE_SQL_PARAMETERS = true;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove,"        //        LOGGER.error(
ExpressionStmt         //            ""{} [Compaction] Meet errors in inner space compaction."",
ExpressionStmt         // fullStorageGroupName);",1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,"Can you actually LOG the stacktrace instead of printing it?
LOG.error(""Error detected whilst... blah blah blah"", e).
Thank you
",            e.printStackTrace();,1
Abstract classes without fields should be converted to interfaces,"Convert the abstract class ""HoodieBloomIndexHelper"" into an interface. (sonar.java.source not set. Assuming 8 or greater.)",should we name this base since this is abstract,public abstract class HoodieBloomIndexHelper implements Serializable {,0
"Unused ""private"" fields should be removed","Remove this unused ""maxSizeOfBatchSql"" private field.","No configuration requires `@since 8.8.0`

The storage doc and configuration-vocabulary.md should be updated accordingly.","    /**
FieldDeclaration      * max size per batch execute sql
FieldDeclaration      */
FieldDeclaration     private int maxSizeOfBatchSql = 2000;",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"I missed to save this comment:
enum values should be all caps.
Also you can staticly import them so no longer needs to dereference them with TrustLevel","        Permanent,",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Why does this not support retry?,    // Todo: Need to add retry,0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""ret"".",""""" -> can  we use Optional to check null?  """"  is confused","      String runningMode = cfg.runningMode == null ? """" : cfg.runningMode.toLowerCase();",0
"Mutable fields should not be ""public static""","Make this member ""protected"".",Would be better to use the three letter codes in the variable name. It was decided to drop two letter codes from OpenNLP.,"  public static final char[] jaEosCharacters = new char[] {'。', '！', '？'};",0
Raw types should not be used,Provide the parametrized type for this generic.,What's this for?,        LinkedList<List<Comparable>> infos = new LinkedList<List<Comparable>>();,0
Methods and field names should not be the same or differ only by capitalization,"Rename field ""label"" to prevent any misunderstanding/clash with field ""LABEL"" defined on line 57.",label or labels?,    private String label;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""tenants"" 10 times.",Use the Constant `TABLES` you created here.,"    return StringUtil.join(""/"", StringUtils.chomp(_baseUrl, ""/""), ""tenants"", tenantName, ""tables"");",1
"""public static"" fields should be constant","Make this ""public static isSetDefaultRowsetToBeta"" field final","If this flag is set here, when there are multiple frontends, user should set all of them?",    public static boolean isSetDefaultRowsetToBeta = false;,0
"Mutable fields should not be ""public static""","Make this member ""protected"".",  public static final String[][] TIMESERIESLIST = {,  public static final String[][] CREATE_TIMESERIES = {,0
Unnecessary imports should be removed,Remove this unused import 'java.util.List'.,Remove unused imports,import java.util.List;,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"I think it just needs to return here, and you can make clear in the Javadoc that it will be a no-op if it has already been stopped.
","      throw new RuntimeException(""Timer has already been stopped."");",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Remove this comment ~,    // todo: Why define checkValueValid() in Expr that are only implemented in IntLiteral？,1
Unused method parameters should be removed,"Remove this unused method parameter ""evt"".","since there are only whitespace changes here, I was wondering if you wanted to call the utility getters you made from here but you forgot?","    private void versionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_versionComboBoxActionPerformed
ExpressionStmt         filterChanged();
MethodDeclaration     }//GEN-LAST:event_versionComboBoxActionPerformed
MethodDeclaration     private void packageTypeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_packageTypeComboBoxActionPerformed
ExpressionStmt         filterChanged();
MethodDeclaration     }//GEN-LAST:event_packageTypeComboBoxActionPerformed
MethodDeclaration     private void architectureComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_architectureComboBoxActionPerformed
ExpressionStmt         filterChanged();
MethodDeclaration     }//GEN-LAST:event_architectureComboBoxActionPerformed
MethodDeclaration     private void eaCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eaCheckBoxActionPerformed
ExpressionStmt         filterChanged();
MethodDeclaration     }//GEN-LAST:event_eaCheckBoxActionPerformed
MethodDeclaration     private void filterChanged() {
ExpressionStmt         updateData((Distribution) distributionComboBox.getSelectedItem(),
CastExpr                 (Integer) versionComboBox.getSelectedItem(),
CastExpr                 (Architecture) architectureComboBox.getSelectedItem(),
ConditionalExpr                 latestCheckBox.isSelected() ? Latest.OVERALL : Latest.ALL_OF_VERSION,
CastExpr                 (PackageType) packageTypeComboBox.getSelectedItem(),
MethodCallExpr                 eaCheckBox.isSelected());",0
URIs should not be hardcoded,Remove this hard-coded path-delimiter.,"Would be good to use utility methods for those, I'm pretty sure there's a method that builds a property store znode path given a table and segment name.
","    final String oldZnodePath = PinotRealtimeSegmentManager.getSegmentsPath() + ""/"" + realtimeTableName + ""/"" + committingSegmentNameStr;",0
Using hardcoded IP addresses is security-sensitive,Make sure using this hardcoded IP address is safe here.,"There is an assumption here, that is, the user does not have a customized retry topic usage mode,  Of course, this is not the focus of our concern.","            PlainAccessResource accessResource = (PlainAccessResource) plainAccessValidator.parse(RemotingCommand.decode(buf), ""123.4.5.6"");",0
Static non-final field names should comply with a naming convention,"Rename this field ""ACTIVE_PROFILE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","As a key feature of 7.0.0, this flag should be `true` as default. @arugal Could you share your concern?",        public static boolean ACTIVE_PROFILE = false;,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"Can you put the configuration key in `CopyConfiguration`? Also, a more descriptive and less specific key might be better. A suggestion might be `gobblin.copy.abortOnSingleDatasetFailure`.","  private final static String CONF_PREFIX = CopyConfiguration.COPY_PREFIX + ""."" + CopyableDatasetRequestor.class.getSimpleName();",0
Unused method parameters should be removed,"Remove this unused method parameter ""tableName"".","  public void execute(String periodicTaskName, @Nullable String tableName) {
Also, suggest rename method to `scheduleNow()` ?","  public void execute(String periodicTaskName, String tableName) {",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"" 3 times.","It is extremely hard to review and maintain this style of tests.

Could you please add relevant `enum` classes instead of booleans (e.g. the ones that are located inside `TestJMESPathAssertion`)?

Here's an example: https://github.com/apache/jmeter/pull/497/files#diff-52c1ed26a7856184c8efaa2a12116a69R44-R50

Enum like that make test code much simpler to read, then it produce meaningful `toString` when debugging, and it produce meaningful error messages should the test fail.","                    { Boolean.FALSE, ""[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"", ""[6:6]"", Boolean.TRUE, Boolean.FALSE,",0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",need add serialize and deserialize,  protected void serializeImpl(ByteBuffer buffer) {},0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Unable to create index [schemaName={}, tableName={}, indexName={}]"" 4 times.",invalid params count ?,"                        LOG.info(""Unable to create index [schemaName={}, tableName={}, indexName={}]"",",0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,"IDEA tells me that this method is never used, which means it is not covered by tests","    CompletableFuture<?> cleanup(int from, int to, Timestamp timestamp);",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"        if (logger.isDebugEnabled()) {
          logger.debug(time[j - 1] + "","" + ps + "","" + original[j - 1]);
        }","        // logger.debug(time[j - 1] + "","" + ps + "","" + original[j - 1]);",0
"""switch"" statements should have at least 3 ""case"" clauses","Replace this ""switch"" statement by ""if"" statements to increase readability.",Is there any place where users can set what consensus algorithm to use for DataRegion? ,"              switch (id.getType()) {
SwitchEntry                 case SchemaRegion:
ReturnStmt                   return new RatisSchemaRegionStateMachine();
SwitchEntry                 case DataRegion:
ReturnStmt                   return new RatisDataRegionStateMachine();
ReturnStmt               }
ReturnStmt               return new EmptyStateMachine();",0
"Unused ""private"" methods should be removed","Remove this unused private ""createCacheKey"" method.",Does this get used elsewhere?,  private String createCacheKey() {,1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","It should not be a `XXXQueue`, you should rename it to `XXXPreExecutor` or something else. And don't forget to add some java doc for this class to explain the functionality of this class and its sub class.",public abstract class SlidingWindowAggrQueue {,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"Please do not remove the usage if `firstInit` parameters, if you user startService of MetricService at first time, you can call `startAllReporter()` external.","//        if (!firstInit.getAndSet(false)) {
ExpressionStmt     startAllReporter();
ExpressionStmt //        }",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Timeout of "" 4 times.",same,"        throw new TimeoutException(""Timeout of "" + timeout + "" sec reached. Aborting"");",0
Field names should comply with a naming convention,"Rename this field ""INSTRUMENTATION_ARRAY_NAME"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Can this be private?,  public final String INSTRUMENTATION_ARRAY_NAME;,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,"If there does exist any exceptions, the test should be failed.",      e.printStackTrace();,0
Field names should comply with a naming convention,"Rename this field ""AbstractChunkReader"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",The first letter of variable should be lowercase,  private AbstractChunkReader AbstractChunkReader;,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,I don't think we need MV support for JSON as it can hold array,"   * TODO: Add MV support for BOOLEAN, TIMESTAMP, BYTES, JSON",0
Restricted Identifiers should not be used as Identifiers,Rename this method to not match a restricted identifier.,Consider moving this to `TextMatchFilterOperator`,"  private void record(InvocationRecording recording, ImmutableRoaringBitmap matches) {",0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"Please remove the `System.err` calls - I understand why they are there, but I think they should not be in the final commit.","            System.err.println(""alwaysCreateNBM="" + alwaysCreateNBM);",1
"Unused ""private"" fields should be removed","Remove this unused ""logger"" private field.",private static final Logger LOGGER = LoggerFactory.getLogger(ImportCsv.class);,  private Logger logger = LoggerFactory.getLogger(ImportCsv.class);,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Use logger.,        e.printStackTrace();,1
"Strings and Boxed types should be compared using ""equals()""","Use the ""equals"" method if value comparison was intended.",What's the difference?,"      if (operation == ""CREATE"" || operation == ""INSERT"") {",0
Field names should comply with a naming convention,"Rename this field ""_hasOrderBy"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",We should only use `TableResizer` when the query has order-by. Please check it on the caller side before creating the `TableResizer`,  private final boolean _hasOrderBy;,0
Try-catch blocks should not be nested,Extract this nested try block into a separate method.,"        if (nodes.isEmpty())
            return;
            
        try {
            final GridCacheQueryRequest req = new GridCacheQueryRequest(cctx.cacheId(),
                reqId,
                fieldsQry,
                cctx.startTopologyVersion(),
                cctx.deploymentEnabled());

            // Process cancel query directly (without sending) for local node.
            sendLocal(req);

            for (ClusterNode node : nodes) {
                try {
                    cctx.io().send(node, req, cctx.ioPolicy());
                }
                catch (IgniteCheckedException e) {
                    if (cctx.io().checkNodeLeft(node.id(), e, false)) {
                        if (log.isDebugEnabled())
                            log.debug(""Failed to send cancel request, node failed: "" + node);
                     }
                    else
                        U.error(log, ""Failed to send cancel request [node="" + node + ']', e);
                }
            }
        }","        try {
CatchClause             final GridCacheQueryRequest req = new GridCacheQueryRequest(cctx.cacheId(),
CatchClause                 reqId,
CatchClause                 fieldsQry,
CatchClause                 cctx.startTopologyVersion(),
CatchClause                 cctx.deploymentEnabled());
CatchClause             // Process cancel query directly (without sending) for local node.
CatchClause             sendLocal(req);
CatchClause             if (!nodes.isEmpty()) {
CatchClause                 for (ClusterNode node : nodes) {
CatchClause                     try {
CatchClause                         cctx.io().send(node, req, cctx.ioPolicy());
CatchClause                     }
CatchClause                     catch (IgniteCheckedException e) {
CatchClause                         if (cctx.io().checkNodeLeft(node.id(), e, false)) {
CatchClause                             if (log.isDebugEnabled())
CatchClause                                 log.debug(""Failed to send cancel request, node failed: "" + node);
CatchClause                         }
CatchClause                         else
CatchClause                             U.error(log, ""Failed to send cancel request [node="" + node + ']', e);
CatchClause                     }
CatchClause                 }
CatchClause             }
CatchClause         }",0
Unused assignments should be removed,"Remove this useless assignment to local variable ""currentTime"".",currentTime is not being used in anywhere this endpoint?,    long currentTime = System.currentTimeMillis();,1
"""Map.get"" and value test should be replaced with single method call","Replace this ""Map.containsKey()"" with a call to ""Map.computeIfAbsent()"".","can we use treemap to store output, so that the order of dimensions is alphabetical",      if (!output.containsKey(dimName)) {,0
"Mutable fields should not be ""public static""","Make this member ""protected"".","nit: space between comma and `""STRING""`","  public static final String[] TABLE_COLUMNS_DTYPES = {""STRING"", ""STRING"",""STRING"", ""STRING"",""STRING"", ""STRING"",""STRING"", ""STRING"",""STRING"",""STRING""};",0
Hard-coded credentials are security-sensitive,"'PASSWORD' detected in this expression, review this potentially hard-coded credential.","Why are we setting a default password here? Having `null` as password was possible before, but now it's not.","    static final char[] DEFAULT_PASSWORD = ""changeit"".toCharArray();",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Path: \"""" 3 times.",It will be nicer if you can extract this kind of exception into a separate Exception class.,"                  ""Path: \"""" + path + ""\"" doesn't correspond to any known time series"");",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Is this an old issue or a new one?,                    // TODO: IGNITE-16899 Should reset the timeout and try again,0
Class variable fields should not have public accessibility,Make mergeLock a static final constant or non-public and provide accessors if needed.,  private final ReentrantReadWriteLock mergeLock = new ReentrantReadWriteLock();,  public ReentrantReadWriteLock mergeLock = new ReentrantReadWriteLock();,1
Field names should comply with a naming convention,"Rename this field ""_hitCounterInMinute"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",  private StatefulHitCounter _maxQpsTracker;,  private StatefulHitCounter _hitCounterInMinute;,0
Throwable and Error should not be caught,Catch Exception instead of Throwable.,"What is this catch for? I can't see any code happens except the plugin logic. We should not log an error caused by our own codes, rather than users.",        } catch (Throwable t) {,0
Class variable fields should not have public accessibility,Make functionMap a static final constant or non-public and provide accessors if needed.,why not make it a `private static`?,"        public Map<String, String> functionMap =",1
"Blocks should be synchronized on ""private final"" fields","""fut"" is a method parameter, and should not be used for synchronization.",Do we need such check?,                if (rebalanceFut.rebalancingStartTime == -1),0
Unnecessary imports should be removed,Remove this unused import 'com.linkedin.pinot.controller.api.ControllerAdminApiApplication'.,Remove,import com.linkedin.pinot.controller.api.ControllerAdminApiApplication;,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,not used e.printStackTrace();,            e.printStackTrace();,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Remove TODO,        // TODO https://issues.apache.org/jira/browse/IGNITE-15550,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Please fold in the methods of this class as (protected) methods in DefaultSegmentNameGenerator and remove this class altogether. There are no users of these methiods,public class SegmentNameBuilder {,1
Static non-final field names should comply with a naming convention,"Rename this field ""TOPIC_MANAGEMENT"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",How are these topic(s) created?,"            public static String TOPIC_MANAGEMENT = ""skywalking-management"";",0
"Unused ""private"" fields should be removed","Remove this unused ""destination"" private field.","Is this a FQ path including file system URI? If please, please document. I am not sure how this is different from relativeDestination?
",  private Path destination;,0
Loops should not be infinite,Add an end condition to this loop.,Why need two error lines?,"                            log.error(""process record error, topic:{}, key:{}, value:{}"", record.topic(), record.key(), record.value());
CatchClause                             log.error(""process record error"", e);",0
Unused assignments should be removed,"Remove this useless assignment to local variable ""bigInteger"".",Check largeint type range,            BigInteger bigInteger = new BigInteger(value);,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Use logger.,        e.printStackTrace();,1
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,these too,"  private final String SMUGMUG_KEY = ""SMUGMUG_KEY"";",0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,public static final,"  public final static String SOURCE_NAME = ""jvm"";",1
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,In this case `assert` isn't best choice because we should check parameters not invariants. You can use `A.notNull` in order to validate method's parameters.,        assert registry != null;,1
Raw types should not be used,Provide the parametrized type for this generic.,"Are you aimed at blocking the main thread until the end of writing thread using Callable and Future interface? If so, I think using Runnable and executorService.awaitTermination() instead of Future is better.","      Future future = executorService.submit(new LoadThread(count, currentPath, TSDataType.valueOf(schemaIter.getString(""dataType""))));",0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",Why are we overriding this to do nothing?,  public void reset() {,1
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,are we flipping the default here intentionally ? ,  public Boolean useJdbc;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"change signature to 
public String getSegmentName(AbstractColumnStatisticsColelctor timeColStatsCollector, SegmentNameConfig segmentNameConfig); 

Do we really want to throw SimpleName? If there are specific exceptions, then list them there. Do not throw high level Exception as far as possible","  String getSegmentName(AbstractColumnStatisticsCollector timeColStatsCollector, DefaultSegmentNameConfig segmentNameConfig) throws Exception;",1
Field names should comply with a naming convention,"Rename this field ""_tableConfigChangeListeners"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",It'd be good to use `ConcurrentHashMap.newKeySet()` here to align with `_tableConfigMap`.,  private final Set<TableConfigChangeListener> _tableConfigChangeListeners = new HashSet<>();,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,same as above?,    //    mobRefSet.get()).build());,0
Class variable fields should not have public accessibility,Make MAX_MONITOR_TIME a static final constant or non-public and provide accessors if needed.,`MAX_MONITOR_TIME` -> `MAX_DURATION`,        public static int MAX_MONITOR_TIME = 10;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""message"" 10 times.",is there any frontend changes to adapt for this?,"    responseMessage.put(""message"", ""Alert was created successfully."");",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,I think it's better to use a enum to do this.,public class SqlModeHelper {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,(minor) Remove this TODO,  // TODO(saurabh) : We can replace this with a ocncurrent Set,1
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"You can use CommonConstants constants, these three constants already exist in it","    private final static String GROUP = ""group"";",0
Field names should comply with a naming convention,"Rename this field ""_readTimeout"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",nit: we can provide timeunit in the variable for better clarity. e.g. `_readTimeoutMs` if we expect it in milliseconds,    private final int _readTimeout;,0
Using publicly writable directories is security-sensitive,Make sure publicly writable directories are used safely here.,Nit: Doesn't need terminal `-`.,"  private final Path tmpDir = Files.createTempDirectory(""oss-file-io-test-"");",0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,"we need to do infer predicate later to process
`a join b on a.id = b.id join c on b.id = c.id`
it could be transform to
`a join c on a.id = c.id join b on b.id = c.id`",        if (newBottomJoinOnCondition.isEmpty() || newTopJoinOnCondition.isEmpty()) {,0
Local variables should not shadow class fields,"Rename ""partitionNames"" which hides the field declared at line 82.","If you allow users to specify partitions and allow users to specify multiple tables at the same time, the user-specified partitions and tables must correspond to each other. So you need a map structure to store related information, not a unified partitionnames",                List<String> partitionNames = getPartitionNames();,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Maybe additional tests for the sequential case?
",    public void testBasic() throws Exception,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""identity"" 3 times.","I think the test case for this points out anther case that shouldn't be allowed. Creating an identity partition named after the wrong field.

What about updating this by passing in `Integer identitySourceColumnId`. Then the validation should be if there is a schema with the field name and the ID doesn't match `identitySourceColumnId` then the exception is thrown. Like this:
java
private void checkAndAddPartitionName(String name) {
  return checkAndAddPartitionName(name, null);
}

private void checkAndAddPartitionName(String name, Integer identitySourceColumnId) {
  NestedField schemaField = schema.findField(name);
  Preconditions.checkArgument(schemaField == null || schemaField.fieldId() == identitySourceColumnId,
      ""Cannot create partition with the same name as schema field: %s"", name);
  ...
}","      if (!transform.equalsIgnoreCase(""identity"")) {",0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,Can we merge them into one condition? e.g. `a && b`,"        if (fs.exists(this.lockFile)) {
CatchClause           // Check whether lock is already expired or not, if so try to delete lock file
CatchClause           if (checkIfExpired()) {",1
"Unused ""private"" fields should be removed","Remove this unused ""instanceNameRule"" private field.",Do OAP core support putting list type?,    private List<String> instanceNameRule = new ArrayList<>();,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"We need all capital case without underscore to make the `getTransformFunctionType()` work
  GEOTOH3(SimpleName);","  geoToH3(""geoToH3"");",1
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,"Is it safe to check equivalence using column name?
Is it possible to get same column name from different tables?",        if (querySlotRef.getColumnName().equalsIgnoreCase(mvColumnSlotRef.getColumnName())) {,0
Assignments should not be redundant,"Remove this useless assignment; ""table"" already holds the assigned value along all execution paths.","Why we call this again? shouldn't this be handled at very beginning of the write?
","    table = addPartitionToIcebergTable(table, newPartitionColumn, newPartitionColumnType);",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""weightedMultiWorkUnit"" is nullable here.","Add `if (!(obj instanceof WeightedMultiWorkUnit) {return false;}` before doing the casting.
",    public boolean equals(Object obj) {,1
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,Still have upper case issue.,        public static Generator GetGenerator(Column.AnalyzerType type) throws StorageException {,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Can we delete this directly?,            // continue;,1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,  private static final int flag = 0x80; // used to do `and` operation with bitmap to judge whether the value is null,  private static final int flag = 0x80; // used to do `or` operation with bitmap to judge whether the value is null,0
Field names should comply with a naming convention,"Rename this field ""_inputFormatParser"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Per the coding styles ([Google style guide](https://google.github.io/styleguide/javaguide.html) or sun java guide) in Gobblin,  names should not begin with '_'. In your case, a name `inputFormatParser` is good enough.",  private final SimpleDateFormat _inputFormatParser;,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,(nit) We usually use capital case `TODO` (for easier searching),"        // todo: even though the source data has BIG_DECIMAL type, we still only support double precision.",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Monitoring resources {} for start up of instance {}"" 4 times.","if there are 100s of tables hosting partitions on a server, will this log all the table names? Would it be better to log this as debug, or just log the number of reosurces that need to be monitored?","      LOGGER.info(""Monitoring resources {} for start up of instance {}"", _resourcesToMonitor, _instanceName);",0
Unused method parameters should be removed,"Remove this unused method parameter ""isSync"".",isSync is not used.,"  public void closeStorageGroupProcessor(String storageGroupPath, boolean isSeq, boolean isSync) {",1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""anomaly"" is nullable here.","Why this is called ""merge""? It is only dedup?",    anomaly.setChild(false);,0
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @deprecated Javadoc tag.,Please keep current return type.,"  public Map<String, String> getSegmentToCrcMapDeprecated(",0
Throwable and Error should not be caught,Catch Exception instead of Throwable.,Why catch Throwable which includes OOM Errors ? Why can't we just catch Exception ?,    } catch (Throwable t) {,1
"Unused ""private"" methods should be removed","Remove this unused private ""processAddColumn"" method.","    private void processAddCol{Alter}Operation(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {","    private void processAddColumn(AddColumnClause alterClause, Table externalTable, List<Column> newSchema) throws DdlException {",0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,"if the filter is null, shoudn't we return true?","    if (filter != null &&
MethodCallExpr         filter.satisfy(tvPair.getTimestamp(), tvPair.getValue().getValue())) {
ReturnStmt       return true;
ReturnStmt     }",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"please ""throw new Exception(""Failed to ... {}"",m, e);""","            throw new Exception(e + "" "" + Arrays.toString(e.getStackTrace()) + "" "" + m);",1
Field names should comply with a naming convention,"Rename this field ""_segmentColumnPartitionInfoMap"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Storing a map for each segment can potentially cause performance regression and extra memory footprint, and we already observe partition pruning becomes a bottleneck when a table contains a lot of segments. Let's add it as a separate implementation so that for single partition column case (probably 99% of the use case), we don't have to pay the extra cost. You may rename the current one to `SinglePartitionColumnSegmentPruner`, then add a `MultiPartitionColumnsSegmentPruner`","  private final Map<String, Map<String, PartitionInfo>> _segmentColumnPartitionInfoMap = new ConcurrentHashMap<>();",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""failed"" 3 times.",I think you should record the `Exception` . because I found that `CommandResult` return the `MongoException` when the result is not `ok`,"                Tags.STATUS_CODE.set(activeSpan, ""failed"");",0
Anonymous inner classes containing only one method should become lambdas,Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.),Try make this Runnable as a static class reference or lambda reference. Reduce inner class creation.,                LOOP_THREAD_POOL.submit(new Runnable() {,0
Class names should not shadow interfaces or superclasses,Rename this class.,"this also is something we should note down to remove down the line.. for now, makes sense.. ",public class HoodieInputFormat extends org.apache.hudi.hadoop.HoodieInputFormat {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Maybe you can add the raftId into the file during serialization and deserialize them when start-up.,"    // TODO CORRECT
ExpressionStmt     removedMemberMap.put(new RaftNode(partitionGroup.getHeader(), 0), member);",0
Double-checked locking should not be used,Remove this dangerous instance of double-checked locking.,"I believe  for the double-check idiom to reliably work these fields need to be `volatile`
http://www.cs.umd.edu/~pugh/java/memoryModel/DoubleCheckedLocking.html",        if (lazyJavaClasses == null) {,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"[saying aloud; no action needed] using FixedByteSingleValueMultiColWriter and writing one value at a time seems suboptimal for writing array of values. For nativeByte order, we should be able to use PinotDataBuffer and readFrom method for bulk write but layered interfaces are hurting us....",  private void addDataBuffers(int rowCapacity) throws RuntimeException {,0
Class variable fields should not have public accessibility,Make basicServiceProvider a static final constant or non-public and provide accessors if needed.,  protected final BasicServiceProvider basicServiceProvider = new BasicServiceProvider();,  public BasicServiceProvider basicServiceProvider = new BasicServiceProvider();,1
URIs should not be hardcoded,Refactor your code to get this URI from a customizable parameter.,Use another file name?,"    String dataFileName = ""/Users/kangrong/code/github/iotdb-apache/client-py/sample.csv"";",0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",could this > 1?  why not use boolean,  private volatile AtomicInteger semaphore = new AtomicInteger();,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,LOG -> logger,    private final static Logger LOG = LoggerFactory.getLogger(EtcdConfigurationProvider.class);,0
URIs should not be hardcoded,Remove this hard-coded path-delimiter.,"Use `Catalog.getClusterId()` instead of `Config.cluster_id`.

And how about add `SparkResource`'s name to path? Such as:

`/path/to/work/dir/cluster_id/__spark_repository__my_resource_name/`

No need to add additional level of dir.
","        String remoteRepositoryPath = workingDir + ""/"" + Config.cluster_id + ""/"" + SparkRepository.REPOSITORY_DIR;",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","`IgniteComponent` is an interface that should be used solely by ""Ignite components"" and not any class that wants to have start-stop semantics. Please consider adding `start` and `stop` methods manually","abstract class AbstractPageMemoryDataRegion<T extends PageMemory> implements DataRegion<T>, IgniteComponent {",0
"Synchronized classes Vector, Hashtable, Stack and StringBuffer should not be used","Replace the synchronized class ""Vector"" by an unsynchronized one such as ""ArrayList"" or ""LinkedList"".",why not use `CopyOnWriteArrayList`?,  public static final Vector<SqlArgument> sqlArgumentsList = new Vector<>();,1
Class variable fields should not have public accessibility,Make BEAN_NAME a static final constant or non-public and provide accessors if needed.,Should it be change to `dubboConfigBeanInitializer`?,"    public static String BEAN_NAME = ""dubboConfigInitializer"";",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Failed to find query cursor with ID: "" 3 times.","Could you please fix the messages to inline with single pattern? 

Current patterns are:
`Failed ... with ID: "" + req.cursorId()`
`Failed ... with id  "" + req.cursorId()`
`Failed ... [curId="" + req.cursorId()`
...

Other messages worth to be revised too","                    ""Failed to find query cursor with ID: "" + req.cursorId() + "". "" + e));",0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""url"".","When using the Teradata JDBC driver the `TYPE=FASTEXPORT` parameter could be added to the connection string. Optionally a default charset as well (e.g: `CHARSET=utf16`).
","    String url = ""jdbc:teradata://"" + host.trim() + ""/DATABASE="" + database.trim() + "",DBS_PORT="" + port.trim() ;",0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,Can you remove this as well? Looks like it was supposed to be removed already.,"  OverwriteFiles validateNoConflictingAppends(Long readSnapshotId, Expression conflictDetectionFilter);",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove commented line?,      //imports.add(key.getParent());,1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"    public Field(String name, String type, String comment, int precision, int scale, String aggregation_type) {","    public Field(String name, String type, String comment, int precision, int scale,String aggregation_type) {",0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,Good.,"  private final static String BLK_LD_DELIM = "":"";",0
"Array designators ""[]"" should be on the type, not the variable",Move the array designator from the variable to the type.,Redundant collection.,"        Collection<Integer> res[] = new Collection[1];
ExpressionStmt         res[0] = new ArrayList<>();",0
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,"*PREDICTABLE_RANDOM:*  This random generator (java.util.concurrent.ThreadLocalRandom) is predictable [(details)](https://find-sec-bugs.github.io/bugs.htm#PREDICTABLE_RANDOM)
(at-me [in a reply](https://docs.muse.dev/docs/talk-to-muse/) with `help` or `ignore`)",                    lastRandomValue = ThreadLocalRandom.current().nextInt();,1
"""String#replace"" should be preferred to ""String#replaceAll""","Replace this call to ""replaceAll()"" by a call to the ""replace()"" method.","Is is a good idea to do like this?

1. If user put an format like ""%dd"" or ""%d-dd-%m"", you will change it format.
2. I think this modifing pattern work should be done by the client. For this case, it should be done by the from_unixtime function not here.
","                replaceAll(""ss"", ""%s"");",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""result"" is nullable here.","     if (LOG.isDebugEnabled) {
          LOG.debug(""rewrite ors: "" + result.toSql());
     }","        LOG.debug(""rewrite ors: "" + result.toSql());",0
"Unused ""private"" methods should be removed","Remove this unused private ""sortStateRouters"" method.",unused method,    private void sortStateRouters() {,1
Private fields only used as local variables in methods should become local variables,"Remove the ""requiresCustomFiltering"" field and declare it as a local variable in the relevant methods.","Jackpot:
warning: Variable requiresCustomFiltering is never read",        private boolean requiresCustomFiltering;,1
Field names should comply with a naming convention,"Rename this field ""_addInvertedIndexDuringDataGeneration"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","""createInvertedIndexDuringSegmentGeneration""? Your call",  private boolean _addInvertedIndexDuringDataGeneration;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal "" sec reached. Aborting"" 4 times.",same,"        throw new TimeoutException(""Timeout of "" + timeout + "" sec reached. Aborting"");",0
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,It's better to just change the prefix . `dubbo.rpc.tri.initial-window-size`,"    String H2_SETTINGS_INITIAL_WINDOW_SIZE_KEY = ""dubbo.rpc.tri.init-window-size"";",0
Class variable fields should not have public accessibility,Make DISABLED_PLUGINS a static final constant or non-public and provide accessors if needed.,Same performance concern. Prefer `LinkedList`.,        public static List DISABLED_PLUGINS = new ArrayList();,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"I would remove this TODO. It's an IA.Private interface, so we could change this if we want or just leave it. I can't think of a better name right now",   * TODO: Maybe we can make a better name than 'updateBalancerLoadInfo'.,1
"Unused ""private"" methods should be removed","Remove this unused private ""queryJobProperties"" method.","This method is never used, but may be related to the above comment.
",  private JobExecutionInfo queryJobProperties(String id) {,1
"Declarations should use Java collection interfaces such as ""List"" rather than specific implementation classes such as ""LinkedList""","The type of the ""timeRangesPrev"" object should be an interface such as ""List"" rather than the implementation ""ArrayList"".",return type of method usually use interface such as ``` List```  rather than implementation ```ArrayList```,  public ArrayList<TimeRange> getRemains(ArrayList<TimeRange> timeRangesPrev) {,1
Unused method parameters should be removed,"Remove this unused method parameter ""tableIdentifier"".","I don't see much value in delegating to this method, since it assumes that the identifier is valid. Instead, I think we should just check that the identifier might reference a metadata table in `isValidMetadataIdentifier` and assume the remaining part is valid. After all, we'll have to load it anyway.",  private static boolean isValidIdentifier(TableIdentifier tableIdentifier) {,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Shall we also bring `AvroOrcSchemaConverterTest.java` open source? ,public class AvroOrcSchemaConverter {,0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,"Maybe more of a question for @holachuy , as this behavior is in the legacy worker code as well: do we still plan on doing the security thing where we only load one importer and exporter in each worker instance to mitigate risk that some other service's malicious/broken code is called? In that case I think we'd want only one instance returned from each method here. Would be a potential good use case for the new java 9 service loading stuff.","    List<Exporter<?, ?>> getExporters();",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Please, cleanup this",// TODO: GG-22915 Investigate ability to distribute recommendation model,1
Field names should comply with a naming convention,"Rename this field ""_primaryKeySet"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","  final ConcurrentHashMap<Object, IndexSegment> _primaryKeyToSegmentMap = new ConcurrentHashMap<>();","  final ConcurrentHashMap<Object, IndexSegment> _primaryKeySet = new ConcurrentHashMap<>();",0
"""public static"" fields should be constant","Make this ""public static TRACE_SQL_PARAMETERS"" field final",Default to `false`,            public static boolean TRACE_SQL_PARAMETERS = true;,0
Methods should not have too many parameters,"Constructor has 8 parameters, which is greater than 7 authorized.",nit: format,"    PartitionedFanout3Writer(PartitionSpec spec, FileFormat format, SparkAppenderFactory appenderFactory,",0
Private fields only used as local variables in methods should become local variables,"Remove the ""OPERATION_NAME"" field and declare it as a local variable in the relevant methods.",make it final is better,"    private static String OPERATION_NAME = ""SpringAsync"";",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Comments?,public class MeterConfigs {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""timeSliceType"" 3 times.",Debug and array again.,"            Arrays.toString(parameter.get(""endTime"")), Arrays.toString(parameter.get(""timeSliceType"")));",0
Boolean expressions should not be gratuitous,"Remove this expression which always evaluates to ""true""",Shouldn't this if condition be triggered if meetException = true? ,    if (!meetException && datasetErrorMap.containsKey(tableOperationTypeMap.get(tableString).datasetName),1
Throwable and Error should not be caught,Catch Exception instead of Throwable.,`cleanAll` is called in line 323 before this try-catch block. what is the further cleanup after this block? I only see `notifyListeners`.,    } catch (Throwable e) {,0
Field names should comply with a naming convention,"Rename this field ""_functionInvoker"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Add `private` or `private final` for these member variables,  FunctionInvoker _functionInvoker;,0
Field names should comply with a naming convention,"Rename this field ""_operatorName"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Remove this since you've a name and method on each class,  private final String _operatorName = getOperatorName();,0
Raw types should not be used,Provide the parametrized type for this generic.,I still cannot under why we need to init the map with size as `triggerTable.size() + 1`.,    Map allTriggerStates = new HashMap(triggerTable.size() + 1);,0
"""public static"" fields should be constant","Make this ""public static sqlArgumentsList"" field final","There is no synchronization control over the  add and remove of sqlArgumentsList(ArrayList) , it may have some concurrent errors in the modification of arrayList. ",  public static List<SqlArgument> sqlArgumentsList = new ArrayList<>();,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Wonder if you want to define an Iceberg Crypto Runtime Exception just like you did for Parquet (ParquetCryptoRuntimeException). The reason is  RuntimeException is a very generic type and we will lose some meaning when converting from GeneralSecurityException. ,"        throw new RuntimeException(""Failed to create GCM cipher"", e);",1
"Fields in a ""Serializable"" class should either be transient or serializable","Make ""asyncContinuationExecutor"" transient or serializable.","Is it `null` by default? Does it mean, user will get an exception in runtime if it uses continuation with no executor set?

Maybe, we should set some implementation here as a default value? I'm pretty much sure, it is going to be fine for the most users, at least at the beginning of the development.",    private Executor asyncContinuationExecutor;,0
Utility classes should not have public constructors,Hide this public constructor.,Why make it public？,  public Utils(){,1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",Add JDK Doc,public abstract class TsFileOutputFormat<T> extends FileOutputFormat<T> {,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,These two annotations seem stranged,"  // Node registered
EnumConstantDeclaration   Leader(""Leader""),
EnumConstantDeclaration   // Node online ,right now Online is Running
EnumConstantDeclaration   Follower(""Follower"");",0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,Avoid system output (is this debugging code),"    System.out.println(""localInputDataFile = "" + localInputDataFile);",1
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,Because PQL endpoint has been deprecated right?,"  public static Serializable getFormattedValue(Object value, ColumnDataType dataType) {",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"+1 to the overall idea. but here is the deal - the size may not update until a row group is actually flushed out to storage. so `getDataSize()` simply returns `0` until then. This on the fly file sizing is only useful for large files with multiple blocks/row groups. This is the behavior back in the day.

What pattern did you observe on writes to S3? is the `getDataSize()` real-time i.e reflect the last write's size between subsequent calls?

I see the code here. which should respect the buffered data?

  /**
   * @return the total size of data written to the file and buffered in memory
   */
  public long getDataSize() {
    return lastRowGroupEndPos + columnStore.getBufferedSize();
  }
",    // TODO we can actually do evaluation more accurately:,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Is there a name?,"        """", // TODO: no title?  Should we use the description instead?",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""idealState"" is nullable here.",Shall we cache the `idealStatePath` and `externalViewPath` so that they can be reused to create the `RoutingEntry`?,    IdealState idealState = getIdealState(getIdealStatePath(tableNameWithType));,0
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,"What's the point of this? Can parameter be of ""DirectConfigurationProperty"" type?",        assert configTree instanceof DirectConfigurationProperty : configTree;,1
Field names should comply with a naming convention,"Rename this field ""_sharedValues"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","nit: can we put this after _brokerRequest? to me all the private final variable here are parsed from _BrokerRequest thus ""immutable"", it would be nice to keep them together","  private final Function<Class<?>, Map<?, ?>> _sharedValues = MemoizedClassAssociation.of(ConcurrentHashMap::new);",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Suggest rename to PinotMinionUserAgentHeader,public class PinotUserAgentHeader {,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"    Exist, NonExist, Constant","    Normal, NonExist, Const;",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""user.read"" 9 times.",nit: is this needed for the temp job store changes? I'd rather pull it out into its own PR so that integrators can potentially use it as an example. (same with changes to MicrosoftAuthServiceExtension),"          .put(""photos"", ImmutableList.of(""user.read"", ""Photos.ReadWrite""))",0
Class variable fields should not have public accessibility,Make txnId a static final constant or non-public and provide accessors if needed.,"You can't change this.
These name must match the name in json, case sensitive.",        public String txnId;,0
Empty arrays and collections should be returned instead of null,Return an empty collection instead of null.,return empty list?,    return null;,1
"""public static"" fields should be constant","Make this ""public static max_stream_load_timeout_second"" field final","You need to set the default value to a large value, I suggest to be same as `max_load_timeout_second`.
Otherwise, after online, some existing load job may fail to be submitted.",    public static int max_stream_load_timeout_second = 600; // 600s,0
Field names should comply with a naming convention,"Rename this field ""_columns"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Recommend renaming this to `_values`, `_columns` sounds like column names",  private Object[] _columns;,1
"Unused ""private"" methods should be removed","Remove this unused private ""getNextMergeVersionFile"" method.",remove the method as it is never used,  private File getNextMergeVersionFile(File seqFile) {,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,onNext 不应该抛Exception,    void onNext(T var1) throws Exception;,1
Field names should comply with a naming convention,"Rename this field ""_minFreshnessMs"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","(minor) Same for other boxed `Long`
  private final long _minFreshnessMs;",  private final Long _minFreshnessMs;,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",Please rename field `takeoverState` to `takeoverMode`,    private volatile BootstrapTakeoverMode takeoverState = BootstrapTakeoverMode.AUTO;,0
Field names should comply with a naming convention,"Rename this field ""_autoListeners"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","I would prefer a `WeakHashMap` here, which manages itself and you don't have to create weak references.
",  private final List<WeakReference<L>> _autoListeners = new ArrayList<>();,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove commented code,      // },1
Field names should comply with a naming convention,"Rename this field ""_deletedSegments"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Add javadoc about the usage of this cache?,"  protected Cache<String, String> _deletedSegments;",0
Unnecessary imports should be removed,Remove this unused import 'com.fasterxml.jackson.databind.DeserializationFeature'.,Is this used?,import com.fasterxml.jackson.databind.DeserializationFeature;,1
Try-catch blocks should not be nested,Extract this nested try block into a separate method.,"So if the listener is invoked for a change to a particular table, we are going to go over schema of all the tables to update the map? If so, I think we should handle the callback at a table level.",      try {,0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,        boolean isMoveComplete;,        boolean move_is_complete;,0
Unnecessary imports should be removed,Remove this unused import 'com.linkedin.pinot.common.data.FieldSpec'.,Are we using `FieldSpec` in this class?,import com.linkedin.pinot.common.data.FieldSpec;,1
Unused assignments should be removed,"Remove this useless assignment to local variable ""albumUri"".",Where does albumUri get used? ,        String albumUri =,1
Raw types should not be used,Provide the parametrized type for this generic.,        List<List<Comparable>> jobInfos = Lists.newArrayList();,        List<List<Comparable>> jobInfos = new ArrayList<List<Comparable>>();,1
Multiple variables should not be declared on the same line,"Declare ""sum"" on a separate line.","      double avg = 0, sum = 0;
      
      for (int i = 0; i < windowSize; i++) {
        avg += rowWindow.getRow(i).getInt(0);
      }
      avg /= windowSize;
      
      for (int i = 0; i < windowSize; i++) {
        int delta = rowWindow.getRow(i).getInt(0) - avg;
        sum += delta * delta;
      }
      
      collector.putDouble(time, sum / windowSize);","      double avg = 0, sum = 0;
ForStmt       for (int i = 0; i < windowSize; i++) {
ExpressionStmt         avg += rowWindow.getRow(i).getInt(0) * 1.0 / windowSize;
ForStmt       }
ForStmt       for (int i = 0; i < windowSize; i++) {
ExpressionStmt         sum += (rowWindow.getRow(i).getInt(0) - avg) * (rowWindow.getRow(i).getInt(0) - avg);
ExpressionStmt       }
ExpressionStmt       collector.putDouble(time, sum / windowSize);",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Error happened while getting {} size"" 6 times.",?,"      logger.error(""Error happened while getting {} size"", filePath);",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""FetcherStatus"" 9 times.",Can you please augment https://cwiki.apache.org/confluence/display/NUTCH/Metrics,"                context.getCounter(""FetcherStatus"",",0
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,Seed it with time,  private static final Random RANDOM = new Random();,1
Unused method parameters should be removed,Remove these unused method parameters.,nit: remove unused `fileIndex`?,"  protected FileStatus createFileStatusUnchecked(FileSlice fileSlice, HiveHoodieTableFileIndex fileIndex, Option<HoodieVirtualKeyInfo> virtualKeyInfoOpt) {",1
"Classes from ""sun.*"" packages should not be used",Use classes from the Java API instead of Sun classes.,Is this safe for all JREs? Including OpenJDK and new versions? I remember Oracle changed the package name once.,import sun.misc.Unsafe;,1
Using hardcoded IP addresses is security-sensitive,Make sure using this hardcoded IP address is safe here.,This is not a unit test. You need to setup the cluster in these ip addresses in order to make it work...,"        ConnectionFactory.fromHostList(""10.85.126.103:8099"", ""10.85.126.104:8099"", ""10.85.126.105:8099"");",0
Raw types should not be used,Provide the parametrized type for this generic.,"I think you could add a method named with `withHashJoinConjunctsAndChidren`, so that you could finish the creation of new JoinNode in one call.",    public LogicalJoin withHashJoinConjuncts(List<Expression> hashJoinConjuncts) {,0
Unused local variables should be removed,"Remove this unused ""vectorName"" local variable.",Remove the field if it is not used.,"      String vectorName = """"; // record previous vector name",1
"""switch"" statements should not have too many ""case"" clauses",Reduce the number of non-empty switch cases from 34 to at most 30.,Please add a test case to AstValidatorTest,      case DYNAMIC_IMPORT:,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Should not it be `static`?,public class IgniteClient {,0
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,same here re method name,  static StructuredName convertToVCardName_Single(Name personName) {,1
Field names should comply with a naming convention,"Rename this field ""_nPartitions"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","I would name maps by the items they represent (in this case _tableToNumPartitions, or something like that)","  Map<String, Integer> _nPartitions;",0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",Same as above,	private ArrayList<Source> sources = new ArrayList<Source>();,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,:+1: better than the old `System.err` without the rest of the stack trace.,"        throw new RuntimeException(""Error performing namefinder inference: "" + ex.getMessage(), ex);",0
"Unused ""private"" fields should be removed","Remove this unused ""JSON_PARSER"" private field.",Unused,    private static final JsonFormat.Parser JSON_PARSER = JsonFormat.parser().ignoringUnknownFields();,1
Field names should comply with a naming convention,"Rename this field ""_streamConfigToTopicPartitionCountMap"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Should topic name suffice as a key? Or, do we want the entire streamconfig just to support use cases in which the same server (for different pinot tables)  may consume the same topic name from different endpoints (or different streams) and therefore may have different characteristics? It may be good to note as a comment, at least.","  private final LoadingCache<StreamConfig, Integer> _streamConfigToTopicPartitionCountMap = buildCache();",0
Class variable fields should not have public accessibility,Make SNAPSHOT_SEND_BUFFER_SIZE a static final constant or non-public and provide accessors if needed.,"Same about the name. And is 50 enough? From my understanding, we do thread dump every 10ms, then we could have 100 in one second. I think as we could collect 5 parallel, you will highly trigger queue abandon mode easily. 
I suggest at least 5 * 500. @kezhenxu94 What do you think? ",        public static int SNAPSHOT_SEND_BUFFER_SIZE = 50;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,https://issues.apache.org/jira/browse/IGNITE-17813,                //TODO: Introduce new publisher using merge-sort algo to merge partition index publishers.,0
Unused type parameters should be removed,V is not used in the class.,"Event type and event class name look like they reflect all types of the queries (SCAN, SQL, SQL_FIELDS, CONTINUOUS, TEXT), but, in fact, only SQL queries handled.

We should, either rename event id and class name or throw events for all types of queries.","public class QueryExecutionEvent<K, V> extends EventAdapter {",0
Unused assignments should be removed,"Remove this useless assignment to local variable ""depth"".",Use `ControllerDepth#push`.,"            ContextManager.getRuntimeContext().put(CONTROLLER_METHOD_STACK_DEPTH, depth++);",1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"you can do traversedDatePath.equals(""""), unless you think it can be null?","    if (!Objects.equals(traversedDatePath, """")) {",1
Empty statements should be removed,Remove this empty statement.,Remove extra semicolon at end.,      private byte[] tableNameBytes =  Bytes.toBytes(writeTableNames);;,1
"Unused ""private"" methods should be removed","Remove this unused private ""processOperation"" method.",I think this file may need a re-factoring in future.,"    private CompletableFuture processOperation(ClientMessageUnpacker unpacker, ClientMessagePacker packer, int opCode)",0
Field names should comply with a naming convention,"Rename this field ""_starTreeIndexSpecFile"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Wouldn't it be better to remove the private members _segmentNamePostfix, _segmentName, _tableName, and _segmentTimeColName from the config altogether? Just move these into the _segmentNameConfig object.

You will need to touch (and test) CreateSegmentCommand.java because we try to read SegmentGeneratorConfig as a json object there

Better to fix this API now.",  private String _starTreeIndexSpecFile = null;,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""status"".",Redundant initialization,    TSStatus status = new TSStatus();,1
"""@Deprecated"" code should not be used","Remove this use of ""Integer""; it is deprecated.","`Integer.valueOf(min)`, not `new Integer`. Same for other object allocations.",    _minValue = new Integer(min);,1
Try-with-resources should be used,"Change this ""try"" to a try-with-resources. (sonar.java.source not set. Assuming 7 or greater.)","Ditto.
",      ByteArrayInputStream bis = closer.register(new ByteArrayInputStream(serialized.getBytes(CHARSET)));,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,use `log` to replace `System.out.println`.,"        System.out.println(""connect1 closed"");",1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"Apply only the filters that are actually in the request, why check if a filter exists in every iteration?",      if (StringUtils.isNotEmpty(request.getRegionName())) {,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,And do we really need a default mode?,    public final static Long MODE_DEFAULT = 1L << 32; //4294967296L;,0
"Inappropriate ""Collection"" calls should not be made","A ""Set<String>"" cannot contain a ""ConsumingSegmentInfo"".",Wait. consumingSegmentInfoList is List<ConsumingSegmentInfo> and serversForSegment is Set<String> with server names.,          serversForSegment.removeAll(consumingSegmentInfoList);,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"The change seems functionally equivalent, why did we need to repalce URISyntaxException to Exception?",  public SegmentFetcher getSegmentFetcherBasedOnURI(String uri) throws Exception {,1
Static non-final field names should comply with a naming convention,"Rename this field ""load_parallelism"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",    public static int default_load_parallelism = 1;,    public static int load_parallelism = 1;,0
URIs should not be hardcoded,Refactor your code to get this URI from a customizable parameter.,change back,"    String filename = ""C:\\Users\\MARKLAU\\Desktop\\13-13-0-0.tsfile"";",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove these lines,"      //      byte[] data = dataBuffer.array();
CatchClause       //      int length = data.length;
CatchClause       //      ReadWriteIOUtils.write(length,outputStream);",1
Unnecessary imports should be removed,Remove this unused import 'org.apache.commons.collections.map.HashedMap'.,Unused import?,import org.apache.commons.collections.map.HashedMap;,1
"""public static"" fields should be constant","Make this ""public static DNS_PERIOD_RESOLVE_ACTIVE"" field final","        public static boolean IS_RESOLVE_DNS_PERIODICALLY = false;
I think the current naming style is like this.",        public static boolean DNS_PERIOD_RESOLVE_ACTIVE = false;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""schema.registry."" 4 times.","Can you use the Configuration library, instead of manually extracting the substring?","      if (!key.equals(SCHEMA_REGISTRY_REST_URL) && key.startsWith(""schema.registry."")) {",1
"Array designators ""[]"" should be on the type, not the variable",Move the array designator from the variable to the type.,Redundant collection.,"        Collection<Integer> res[] = new Collection[1];
ExpressionStmt         res[0] = new ArrayList<>();",0
Local variables should not shadow class fields,"Rename ""details"" which hides the field declared at line 52.",getInstantDetails call is gonna be heavy for the newly merged timeline right? is there any room for optimization?,"    Function<HoodieInstant, Option<byte[]>> details = instant -> {
IfStmt       if (instants.stream().anyMatch(i -> i.equals(instant))) {
BlockStmt         return this.getInstantDetails(instant);
BlockStmt       } else {
ReturnStmt         return timeline.getInstantDetails(instant);
ReturnStmt       }",0
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,"Nit: I realize it gets long, but can we make these SimpleName classes have unique names?  There seems now 4 new SplitScanTask classes, which makes navigation very hard (finding a specific class on IDE).  I also got initially confused that it's extending SplitScanTask from BaseFileScanTask, so that's actually a fifth unrelated one.","  abstract static class SplitScanTask<ThisT, T extends ContentScanTask<F> & ChangelogScanTask, F extends ContentFile<F>>",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,This is printed out once on class loading? We can prettify later.,          e.printStackTrace();,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","1. Why treeMap?
2. Don't create the map if no parameter tracing. Map creation is a high payload. You could test ?","        this.parametersKeyedByIndex = new TreeMap<Integer, Object>();",0
"""@Deprecated"" code should not be used","Remove this use of ""complexWriters""; it is deprecated.",`(complexWriters != null && !complexWriters.isEmpty())` -> `!CollectionUtils.isEmpty(complexWriters)`,      if ((complexWriters != null && !complexWriters.isEmpty()) || rsLoader != null ) {,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Don't add a client with static methods, that break the code style.",public class SuperDatasetRangeElasticSearchClient {,0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","Why this variable is volatile?

",    private volatile LongMetric sparseStorageSize;,1
Unused local variables should be removed,"Remove this unused ""currentTime"" local variable.",currentTime is not being used in anywhere this endpoint?,    long currentTime = System.currentTimeMillis();,1
Unused type parameters should be removed,StorageCfg is not used in the interface.,why do you need these generics?,"    StorageCfg extends DataStorageConfiguration,",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""0.7.0"" 10 times.",Do we need to compact every 2 commits ?,"      .sinceVersion(""0.7.0"")",0
Field names should comply with a naming convention,"Rename this field ""_properties"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",I think we should rename it to `_metadataManagerConfigs` or `_configs` from `_properties`. Currently we do it in a similar way for record reader and filesystems.,"  private Map<String, String> _properties;",1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""pNode"" is nullable here.",? good catch.,"        pNode != null && !pNode.isNull() && pNode.isIntegralNumber() && pNode.canConvertToInt(),",0
Unused assignments should be removed,"Remove this useless assignment to local variable ""bucketNum"".","`.get(partition)` -> `computeIfAbsent(partition, p -> new HashMap<>())`","    final int bucketNum = BucketIdentifier.getBucketId(hoodieKey, indexKeyFields, this.bucketNum);",0
"Unused ""private"" fields should be removed","Remove this unused ""queryId"" private field.",It seems that this field hasn't been used.,  private long queryId;,1
Unused method parameters should be removed,Remove these unused method parameters.,could we remove `validateFilesInPartition` ?,"  private void validateFilesInPartition(HoodieTableFileSystemView metaFsView, HoodieTableFileSystemView fsView, String partitionPath) {",1
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","Do we really need to make it volatile? IIRC, it will be initialized in the init call and we will always call it when constructing a new ProtobufLogWriter. Make it volatile may cause developer confusing...",  private volatile AsyncFSOutput output;,1
Raw types should not be used,Provide the parametrized type for this generic.,Please add //NOI18N,"            Class yieldTreeClass = Class.forName(""com.sun.source.tree.YieldTree"");",0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",                    List<TNetworkAddress> hosts = Lists.newArrayList(hostSet);,                    List<TNetworkAddress> hosts = new ArrayList<TNetworkAddress>();,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,rename to `getJDBCSchema`? ,"  public static Schema getSchema(Map<String, String> options) throws Exception {",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Same here or below, what are the error cases.","  public Status[] getStatus(String accountId, String pageToken) throws Exception {",1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",use 1.7 type inference in generics,      public transient ProxyInputPort<Integer> moduleInput = new ProxyInputPort<Integer>();,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,better to implement it,    //throw new SQLException(METHOD_NOT_SUPPORTED_STRING);,1
Collection.isEmpty() should be used to test for emptiness,Use isEmpty() to check whether the collection is empty or not.,Add unit tests.,    if (unAcquiredSegments.size() > 0) {,0
Methods should not have too many parameters,"Constructor has 8 parameters, which is greater than 7 authorized.","nit: format those lines as: 
java
    PartitionedFanout24Writer(PartitionSpec spec, FileFormat format,
                              SparkAppenderFactory appenderFactory,
                              OutputFileFactory fileFactory, FileIO fileIo, long targetFileSize,
                              Schema schema, StructType sparkSchema) {
      super(spec, format, appenderFactory, fileFactory, fileIo, targetFileSize, schema, sparkSchema);
    }","    PartitionedFanout24Writer(PartitionSpec spec, FileFormat format,
BlockStmt         SparkAppenderFactory appenderFactory,
BlockStmt         OutputFileFactory fileFactory, FileIO fileIo, long targetFileSize,
BlockStmt         Schema schema, StructType sparkSchema) {",0
Overriding methods should do more than simply call the same method in the super class,Remove this method to simply inherit it.,This method can be removed.,  public void enterOffsetClause(OffsetClauseContext ctx) {,1
Unnecessary imports should be removed,Remove this unused import 'java.nio.file.attribute.FileOwnerAttributeView'.,This import is probably unused?,import java.nio.file.attribute.FileOwnerAttributeView;,1
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","Seems like `filePageStoreManager` and `checkpointManager` can be made non-volatile. Not sure though, but I think our start process is single-threaded",    private volatile CheckpointManager checkpointManager;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Failed to merge FlowFiles to create new bin due to {}"" 3 times.","I don't think this change is correct. It'll result in a log message that says `Failed to merge FlowFiles to create new bin due to {}`. Need to either use the `... due to "" + e` or `... due to {}"", e, e);` so that the first argument matches to the `{}` while the second argument is the `Throwable` argument that causes a stack trace.","            } catch (final Exception e) {
ExpressionStmt                 getLogger().error(""Failed to merge FlowFiles to create new bin due to {}"", e);",0
Double-checked locking should not be used,Remove this dangerous instance of double-checked locking.,"I think this field needs to be volatile by double-check locking pattern, because otherwise it may return partially initialized statistics object in the not null case?",    if (statistics == null) {,1
"Unused ""private"" fields should be removed","Remove this unused ""LOGGER"" private field.",这个写的不对吧？应该是import org.slf4j.LoggerFactory，然后LoggerFactory.getLogger(HashLock.class);,  private static final Logger LOGGER = org.slf4j.LoggerFactory.getLogger(HashLock.class);,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,how about use log to replace system.out,"        System.out.println(""rule processing : name = "" + ruleData.getName());",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Long --> long,"  private List<Event> getCalendarEvents(String Calendar_id, Long start, Long end) throws Exception {",0
Return values should not be ignored when they contain the operation status code,"Do something with the ""boolean"" value returned by ""delete"".",Why is `delete()` invoked again here ?,        mLogSnapshot.delete();,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Remove this comment,        // TODO: need to find all plan reference tree that match this pattern,1
Field names should comply with a naming convention,"Rename this field ""ALBUM_MAX_SIZE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",What's up with this formatting,	private final int       ALBUM_MAX_SIZE						= 5000;,0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,"Just printStackTrace?
We need to recover from the error and mark tx service unavailable and propagate the unavailable state to producer clients if recovering is not possible.",            e.printStackTrace();,0
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,  public void setEnableHttps(boolean enable_https) {,  public void setEnable_https(boolean enable_https) {,0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,"Should we recursively check that the subtype of subtypes are also set equal as opposed to your current direct equality (below the second level)
",    if (!Sets.newHashSet(t1.getSubTypeList()).equals(Sets.newHashSet(t2.getSubTypeList()))) {,0
Using publicly writable directories is security-sensitive,Make sure publicly writable directories are used safely here.,"Hmm, this just uses a local file, I don't think we make any guarantees/assumptions of how much disk there is on the worker, it seems like you should temp store here right?","    File tmp = File.createTempFile(filename, "".mp4"");",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Is this comment still valid?,"        // TODO: We should not need to initialize crypter each time, instead Factory should have an initialized version ready.",1
Static non-final field names should comply with a naming convention,"Rename this field ""DEFAULT_OVERWRITE_CONFIGS_IN_STATESTORE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Should this be final? If not final, don't use upper case.
",  public static boolean DEFAULT_OVERWRITE_CONFIGS_IN_STATESTORE = false;,1
Unused assignments should be removed,"Remove this useless assignment to local variable ""version"".",Why do we read the version property here?,"        String version = p.getProperty(""version"");  // NOI18N",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"necessary?
",       // new JobExecutionListener();,1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",Should the apis return Boolean and/or throw exception?,  public void encrypt(URI uri) {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,FIX,            // todo log,1
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.tsfile.file.metadata.TimeseriesMetadata'.,Remove unused import,import org.apache.iotdb.tsfile.file.metadata.TimeseriesMetadata;,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"Can you use a logger to output these?
If this just for debugging you can just do log.debug()",    System.out.println(configs.toString());,1
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.tsfile.file.metadata.enums.TSDataType'.,remove this,import org.apache.iotdb.tsfile.file.metadata.enums.TSDataType;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""deltastreamer"" 6 times.",I revised the name to be consistent with other metrics in DeltaStreamer.,"      Metrics.registerGauge(getMetricsName(""deltastreamer"", ""kafkaMessageInCount""), totalNewMsgCount);",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Do you want this file in this PR or separate?,  // TODO: the delay should be more easily configurable,1
Static non-final field names should comply with a naming convention,"Rename this field ""max_cbo_statistics_task_timeout_sec"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",60 or 300?,    public static int max_cbo_statistics_task_timeout_sec = 300;,0
Field names should comply with a naming convention,"Rename this field ""_updateSemantic"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",rename to IngestMode or just have a boolean enableUpsert?,  private UpdateSemantic _updateSemantic;,1
"""toString()"" should never be called on a String object","""formattedName"" is already a string, there's no need to call ""toString()"" on it.","            formattedName = formatByOpenapi(serviceName, formattedName);","            formattedName = formatByOpenapi(serviceName, formattedName.toString());",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"see #8993
the send thread of zookeeper ClientCnxn will keep trying reconnect to the closed zk Server if you don't close the zk client and it will cause more integration testing problems because huge reconnect failed events will block curator global event loop processing.",        // zkClient.close();,0
Static non-final field names should comply with a naming convention,"Rename this field ""async_loading_load_task_pool_size"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",I think pending number should be larger loading number？,    public static int async_loading_load_task_pool_size = 20;,0
"Blocks should be synchronized on ""private final"" fields","""deletedRegionSet"" is a method parameter, and should not be used for synchronization.",Not sure the `synchronized` would take effect or not because the `deletedRegionSet` is the parameter of the method,    synchronized (deletedRegionSet) {,1
Loops should not be infinite,Add an end condition to this loop.,No jump out from the while true and application quit logic.,        while (true) {,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Avoid using e.printStackTrace directly?,        e.printStackTrace();,1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","`Maps.newHashMap`.
","      this.tags = new LinkedHashMap<String, String>();",1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,This should probably be a class constant,    int CHUNK_SIZE = 32000 * 1024; // 32000KiB,0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".","For sign test, the detection window is minute, but the window size is 6 hours. The calculation is wrong here. ","    double functionMTTDInHour = TimeUnit.HOURS.convert(detectionBucketSize * detectionWindowSize, detectionUnit);",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","The name `MetadataTableScan` is very generic but it is actually used only in aggregated metadata tables like `all_data_files` and `all_manifests`. I think we either need to change the naming or just override `planFiles()` in each individually. We can, for example, simply check if there is any snapshot at all and if yes, call an overloaded version of `planFiles`.",public abstract class MetadataTableScan extends BaseTableScan {,0
Raw types should not be used,Provide the parametrized type for this generic.,"Can we return a generic type `Map<String, Function<Object, String>>`?",  public Map getFieldNameToConverterMap() {,1
"""InterruptedException"" should not be ignored","Either re-interrupt this method or rethrow the ""InterruptedException"" that can be caught here.","You should not be ignoring InterruptedExceptions. Typically, this means the application is being shut down.",        } catch (InterruptedException ignored) {,1
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"this part is used twice and looks like it could grow with future javac updates -> could be extracted to a private utility method to make it ""DRY"".
diff
diff --git a/java/java.source.base/src/org/netbeans/api/java/source/TreeMaker.java b/java/java.source.base/src/org/netbeans/api/java/source/TreeMaker.java
index 0c3fab6..cb830c6 100644
--- a/java/java.source.base/src/org/netbeans/api/java/source/TreeMaker.java
+++ b/java/java.source.base/src/org/netbeans/api/java/source/TreeMaker.java
@@ -276,18 +276,7 @@
      * @since 2.39
      */
     public CaseTree CasePatterns(List<? extends Tree> patterns, Tree body) {
-        return delegate.CaseMultiplePatterns(patterns.stream().map(p -> {
-            if (p instanceof CaseLabelTree) {
-                return (CaseLabelTree) p;
-            }
-            if (p instanceof ExpressionTree) {
-                return delegate.ConstantCaseLabel((ExpressionTree) p);
-            }
-            if (p instanceof PatternTree) {
-                return delegate.PatternCaseLabel((PatternTree) p, null);
-            }
-            throw new IllegalArgumentException(""Invalid pattern kind: "" + p.getKind()); //NOI18N
-        }).collect(Collectors.toList()), body);
+        return delegate.CaseMultiplePatterns(toCaseLabelTreeDelegates(patterns), body);
     }
     
     /**
@@ -299,7 +288,11 @@
      * @since 2.39
      */
     public CaseTree CasePatterns(List<? extends Tree> patterns, List<? extends StatementTree> statements) {
-        return delegate.CaseMultiplePatterns(patterns.stream().map(p -> {
+        return delegate.CaseMultiplePatterns(toCaseLabelTreeDelegates(patterns), statements);
+    }
+
+    private List<? extends CaseLabelTree> toCaseLabelTreeDelegates(List<? extends Tree> patterns) {
+        return patterns.stream().map(p -> {
             if (p instanceof CaseLabelTree) {
                 return (CaseLabelTree) p;
             }
@@ -310,7 +303,7 @@
                 return delegate.PatternCaseLabel((PatternTree) p, null);
             }
             throw new IllegalArgumentException(""Invalid pattern kind: "" + p.getKind()); //NOI18N
-        }).collect(Collectors.toList()), statements);
+        }).collect(Collectors.toList());
     }","    public CaseTree CasePatterns(List<? extends Tree> patterns, Tree body) {
ReturnStmt         return delegate.CaseMultiplePatterns(patterns.stream().map(p -> {
MethodCallExpr             if (p instanceof CaseLabelTree) {
MethodCallExpr                 return (CaseLabelTree) p;
MethodCallExpr             }
MethodCallExpr             if (p instanceof ExpressionTree) {
MethodCallExpr                 return delegate.ConstantCaseLabel((ExpressionTree) p);
MethodCallExpr             }
MethodCallExpr             if (p instanceof PatternTree) {
MethodCallExpr                 return delegate.PatternCaseLabel((PatternTree) p, null);
MethodCallExpr             }
MethodCallExpr             throw new IllegalArgumentException(""Invalid pattern kind: "" + p.getKind()); //NOI18N
MethodCallExpr         }).collect(Collectors.toList()), body);",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,I supposed that we'll never call changeLeader inside the process of RemoveRegionPeer?,      // changeLeader();,0
Return values should not be ignored when they contain the operation status code,"Do something with the ""boolean"" value returned by ""await"".",If you don't call `countDownLatch.countDown(); ` It will always await for 5s.,"        countDownLatch.await(5, TimeUnit.SECONDS);",0
Boolean literals should not be redundant,Remove the unnecessary boolean literal.,            if (!slotDescriptor.isMaterialized()) {,            if (slotDescriptor.isMaterialized() == false) {,1
Class variable fields should not have public accessibility,Make remainder a static final constant or non-public and provide accessors if needed.,Can both be `private final` see comment in `parse` below.,        public String remainder;,1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","What is the new concrete implementation class?
","public abstract class KafkaAvroExtractor extends KafkaExtractor<Schema, GenericRecord> {",0
Lambdas should be replaced with method references,Replace this lambda with method reference 'Alias.class::isInstance'. (sonar.java.source not set. Assuming 8 or greater.),        project.getProjects().stream().filter(Alias.class::isInstance).forEach(p -> {,        project.getProjects().stream().filter(p -> p instanceof Alias).forEach(p -> {,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Customize plugin config should be an inner class of Plugin. Take `Plugin#Elasticsearch` as an example,    public static class Customize {,0
Field names should comply with a naming convention,"Rename this field ""_instanceName"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",You can change these variables to final and remove the setters as they are not needed,  private String _instanceName;,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,Append them to the end for better compatibility?,"  PreCreatePipe,
EnumConstantDeclaration   SetPipeStatus,
EnumConstantDeclaration   ShowPipe,",0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",Looks like empty implementation.,        public void stateChanged(ChangeEvent e) {,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"                // newValue = new DynamicProperty(super.keys, fieldName, rootKey, changer, listenOnly);","                // newValue = new DynamicProperty(super.keys, fieldName, rootKey, changer, boolean);",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,I don't think `e.printStackTrace();` is a good idea.,            e.printStackTrace();,1
Nested blocks of code should not be left empty,Either remove or fill this block of code.,Does this mean there is a logger per extension?,                    return new Logger() {{,0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.","I'm confused why we don't need to update quota usage when the service restarts. What happens when the scheduler goes down? Unless we always assume that another host will perfectly transfer its workload to another host, there can always be some scenario where the dagstatestore doesn't reflect the quotas right?",  public void init(Collection<Dag<JobExecutionPlan>> dags) {,0
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"Maybe just `CaseMultiplePatterns`? Just a suggestion.

Also - there should probably be the similar method taking statements instead of body.","    public CaseTree CaseMultipleSwitchPatterns(List<? extends Tree> patterns, Tree body) {",1
Nested blocks of code should not be left empty,Either remove or fill this block of code.,"remove
",  static {,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Same as above.,          e.printStackTrace();,0
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,How is this meant to work? Are you assuming that assertions will only be enabled in testing? If you need some logic to only be executed during testing shouldn't there be some sort of internal flag indicating this?,        assert waitOnExpiredEvent(event.getState());,1
Field names should comply with a naming convention,"Rename this field ""MM2SourceSeparator"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","I can't find the place using these, have you submitted all codes?","    private String MM2SourceAlias = """";
FieldDeclaration     private String MM2SourceSeparator = """";",0
Field names should comply with a naming convention,"Rename this field ""_optimizeDictionaryEnabled"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Suggest renaming to `_optimizeDictionaryForMetrics`,  private boolean _optimizeDictionaryEnabled;,1
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".","Why do we need the Write Buffer Manager here? Also, the property name is a bit misleading to me...",    public long writeBufferSize = 64 * 1024 * 1024;,0
"Unused ""private"" methods should be removed","Remove this unused private ""createHoodieTableFileSystemView"" method.",Could we remove `createHoodieTableFileSystemView` ?,"  private HoodieTableFileSystemView createHoodieTableFileSystemView(HoodieSparkEngineContext engineContext, boolean enableMetadataTable) {",1
Boolean expressions should not be gratuitous,"Remove this expression which always evaluates to ""true""","I would introduce a method for checking conditions because it's the same as above.
cc: @Akshay-Gupta-Oracle ","                        Name exprTree = getLeftTreeName(statements.get(0));
BlockStmt                         if (leftTreeName != null && exprTree != null && leftTreeName.contentEquals(exprTree)) {",0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,What is this check for? Shouldn't it just be another verification?,        if (time.isBefore(end) && time.isAfter(start)) {,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",Rename to AbstractBinaryExpression?,"public abstract class BinaryOperator extends Expression implements BinaryExpression, ExpectsInputTypes {",0
Class variable fields should not have public accessibility,Make default_db_replica_quota_size a static final constant or non-public and provide accessors if needed.,"The 1000000 is too small.  In meituan.com, the replica number for one database has exceeded 1000000. I think your initial value 1024 * 1024 * 1024 is OK.",    public static long default_db_replica_quota_size = 1000000;,0
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),"```
n -> n.toLowerCase()
suggest code
String::toLowerCase",        Set<String> lowerReservedPartitionNames = reservedPartitions.stream().map(n -> n.toLowerCase()).collect(Collectors.toSet());,1
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Do not use printStackTrace to record the exception stack.,            e.printStackTrace();,1
Field names should comply with a naming convention,"Rename this field ""_leftTransformFunction"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","`_leftTransformFunction`, `_dataSourceMap` and `_nullValueVectorReader` can be changed to local variable. Also, suggest renaming `_leftTransformFunction` as there is only one single argument","  private TransformFunction _leftTransformFunction;
FieldDeclaration   private int[] _results;
FieldDeclaration   private Map<String, DataSource> _dataSourceMap = new HashMap<>();
FieldDeclaration   private PeekableIntIterator _nullValueVectorIterator;
FieldDeclaration   private NullValueVectorReader _nullValueVectorReader;",0
Unnecessary imports should be removed,Remove this unused import 'java.util.concurrent.atomic.AtomicInteger'.,nit: redundant,import java.util.concurrent.atomic.AtomicInteger;,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,TODO with no ticket.,            // TODO varlen types,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"This will change as we'll be adding support to index multiple columns: https://github.com/apache/hudi/pull/4693/files#diff-11e9ef6bd53ef1001b669a1dc68dde2aba9b33c9eb72cc1e4198750336d79772
No change needed from your side. I'll take care of it.",      // TODO why are we only indexing primary key? revisit fallback,0
"""StandardCharsets"" constants should be preferred",Replace Charset.forName() call with StandardCharsets.UTF_8,Why so many definitions for the final static charset,"    public static final Charset CHARSET = Charset.forName(""UTF-8"");",1
Field names should comply with a naming convention,"Rename this field ""_sslContext"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","`_httpClient`, `_headers` and `_scheme` can be private final, `_sslContext` can be local variable ","  AsyncHttpClient _httpClient;
FieldDeclaration   Map<String, String> _headers = new HashMap<>();
FieldDeclaration   String _scheme = CommonConstants.HTTP_PROTOCOL;
FieldDeclaration   SSLContext _sslContext = null;",0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,"Please no access to javac internal types (com.sun.tools.**) in hint implementations. Maybe initTypeMirror = org.netbeans.modules.java.hints.errors.Utilities.resolveCapturedType(initTypeMirror) + just he isSameType check would work? (Possibly check that initTypeMirror is not an erroneous type before, not sure.)","        if (!(initTypeMirror instanceof CapturedType) && (!ctx.getInfo().getTypes().isSameType(variableTypeMirror, initTypeMirror))) {",0
Static non-final field names should comply with a naming convention,"Rename this field ""READER"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Why is this static?
",  private static Optional<SpecificDatumReader<MetricReport>> READER = Optional.absent();,0
Raw types should not be used,Provide the parametrized type for this generic.,"I mean here, you build a new map, which is expensive. If `originalJobDataMap` could toString directly, we should do that.","            Map<String, String> jobDataMap = new HashMap();",0
Unnecessary imports should be removed,Remove this unused import 'java.util.Calendar'.,remove unused imports.,import java.util.Calendar;,1
Static non-final field names should comply with a naming convention,"Rename this field ""IS_GRPC_CHANNEL_TLS_FORCED"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Change this name to `FORCE_TLS`. There is only gRPC transport.,        public static boolean IS_GRPC_CHANNEL_TLS_FORCED = true;,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,I don't think this belongs to production.,"            System.err.println(""processLine "" + line);",0
URIs should not be hardcoded,Remove this hard-coded path-delimiter.,"Use `Catalog.getClusterId()` instead of `Config.cluster_id`.

And how about add `SparkResource`'s name to path? Such as:

`/path/to/work/dir/cluster_id/__spark_repository__my_resource_name/`

No need to add additional level of dir.
","        String remoteRepositoryPath = workingDir + ""/"" + Config.cluster_id + ""/"" + SparkRepository.REPOSITORY_DIR;",0
"Unused ""private"" methods should be removed","Remove this unused private ""findEnabledTarget"" method.",I did not find usage of this method.,"    private static CompletableFuture<Pair<ActionProvider, String>> findEnabledTarget(FileObject toRun, SingleMethod singleMethod, boolean debug, boolean testRun, NbProcessConsole ioContext) throws IllegalArgumentException {",1
"""public static"" fields should be constant","Make this ""public static IS_GRPC_CHANNEL_TLS_FORCED"" field final",Change this name to `FORCE_TLS`. There is only gRPC transport.,        public static boolean IS_GRPC_CHANNEL_TLS_FORCED = true;,0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,That looks like an ideal candidate to be an enum.,"  private final String BRANCH_DEFAULT_TYPE = ""Type.BRANCH_DEFAULT"";",1
Field names should comply with a naming convention,"Rename this field ""_timestamp"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Rename the variable,    private final Comparable _timestamp;,1
Abstract classes without fields should be converted to interfaces,"Convert the abstract class ""DataFileUtils"" into an interface. (sonar.java.source not set. Assuming 8 or greater.)",Can we use consistent terminology. i. e `BaseFileUtils` vs `DataFileUtils` ,public abstract class DataFileUtils {,0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,"I've been thinking about this change while doing recent work around writer factories and deletes.

Naming-wise, I'd probably prefer calling it `forTable(table)`. If we decide to store [metrics for rows in position deletes](https://github.com/apache/iceberg/pull/2942#discussion_r683715471), we then can provide something like `forPositionDelete(table)` to promote the path and pos columns and apply the regular config for all other columns in optional `row`.","  public static MetricsConfig fromProperties(Map<String, String> props) {",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Maybe ... ""Failed to acquire locks from metastore because the underlying metastore table 'HIVE_LOCKS' does not exist. This can occur when using an embedded metastore which does not support transactions. To fix this use an alternative metastore.""","          throw new RuntimeException(""Failed to acquire locks from metastore because 'HIVE_LOCKS' doesn't "" +",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Should we remove these options or at least add a description that they are deprecated and will be removed in the next release?,  // TODO - The below two options don't seem to be used in the Drill code base,1
Unnecessary imports should be removed,Remove this unused import 'java.util.Collections'.,useless import,import java.util.Collections;,1
Unused type parameters should be removed,T is not used in the class.,"1. Please format the code.
2. Should BaseFactory considering package name when creating an instance? What about making base factory creates instances from any full class names. The factory that extends the base factory could override the method to inject package name if necessary.",public class BaseFactory<T> {,0
Field names should comply with a naming convention,"Rename this field ""_evaluator"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(nit) Make it final,  private FunctionEvaluator _evaluator = null;,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"same as above, should be capitalized.","    start,
EnumConstantDeclaration     stop",1
Try-with-resources should be used,"Change this ""try"" to a try-with-resources. (sonar.java.source not set. Assuming 7 or greater.)","`dataInputStream` is not registered to `closer`.
",      DataInputStream dataInputStream = new DataInputStream(byteArrayInputStream);,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""WEEKS"" 5 times.","Should we define `""MONTHS""` and `""WEEKS""` as constants?","    if (this.monitoringGranularity.endsWith(""MONTHS"") || this.monitoringGranularity.endsWith(""WEEKS"")) {",1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"This seems like some work that might already be present on the model itself: https://github.com/google/data-transfer-project/blob/master/portability-types-common/src/main/java/org/datatransferproject/types/common/models/videos/VideoModel.java#L126-L141

Can we add these utility classes on the model instead of adding them here?  ",public class GooglePhotosImportUtils {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Pls remove TODO like I mentioned before,      // TODO: Deprecate this after removing table name from segment metadata,1
Local variables should not shadow class fields,"Rename ""bitMaps"" which hides the field declared at line 68.",This will create more than one insert tablet node of a same target replicaset. We merge there nodes into one node before.,"        int count = end - start;
ExpressionStmt         long[] subTimes = new long[count];
ExpressionStmt         int destLoc = 0;
ExpressionStmt         Object[] values = initTabletValues(dataTypes.length, count, dataTypes);
ExpressionStmt         BitMap[] bitMaps = this.bitMaps == null ? null : initBitmaps(dataTypes.length, count);",0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,how about use log to replace system.err,"        System.out.println(""hello, im extend plugin dataHandler"" );",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Obviously this stuff has to have a ticket,        //TODO Implement.,1
"""public static"" fields should be constant","Make this ""public static DISABLED"" field final",Wouldn't it be better to have a static final member in ActionMapping interface as a specific instance?,    public static DefaultActionMapping DISABLED = new DefaultActionMapping();,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,whats the idea behind introducing a plannodeFactory. ,public class PlanNodeFactory {,0
Return values should not be ignored when they contain the operation status code,"Do something with the ""boolean"" value returned by ""offer"".","After investing the JDK source codes, this will cause more lock time than original. Because this will never release lock until `offer` successfully.",        logBuffer.offer(message);,0
URIs should not be hardcoded,Remove this hard-coded path-delimiter.,move below the other private static members. Add annotation if it's package private for testing.,"  static final String IMPORTED_ADDRESS_BOOK_PATH = BASE_DIRECTORY + TEST_SLUG_NAME + ""/"";",0
Collection.isEmpty() should be used to test for emptiness,Use isEmpty() to check whether the collection is empty or not.,could replace by `CollectionUtils.isNotEmpty`,        if (alterJobIdList != null && alterJobIdList.size() > 0) {,1
Unused local variables should be removed,"Remove this unused ""size"" local variable.","*UnusedVariable:*  The local variable SimpleName is never read. [(details)](https://errorprone.info/bugpattern/UnusedVariable)
(at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)",            final int size = series.getValues().size();,1
Unused method parameters should be removed,Remove these unused method parameters.,"    public R visitPhysicalAggregation(PhysicalPlan<? extends PhysicalPlan, PhysicalAggregation> aggregationPlan, C context);","    public R visitPhysicalAggregationPlan(PhysicalPlan<? extends PhysicalPlan, ? extends PhysicalOperator> physicalPlan,",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,nit: space before `{`,"  public <T> T createInstance(String pluginName, String className, Class[] argTypes, Object[] argValues) throws Exception{",0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,return type should be String,"  public List<List<Map<String, Object>>> getSegmentMetadataDeprecated2(",0
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,Please use `Connection connection = EnvFactory.getEnv().getConnection();` instead.,"                Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");",1
Local variables should not shadow class fields,"Rename ""sparkConfigs"" which hides the field declared at line 91.","        Map<String, String> sparkConfig = Maps.newHashMap();","        Map<String, String> sparkConfigs = Maps.newHashMap();",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Unsupported operation."" 32 times.","I think we can support some of the methods, at least equals() and compareTo() should be implemented for future convenience.","    throw new UnsupportedOperationException(""Unsupported operation."");",0
Field names should comply with a naming convention,"Rename this field ""SOURCE_NAME"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",`final static String`,"  public String SOURCE_NAME = ""iot-metrics"";",0
Static non-final field names should comply with a naming convention,"Rename this field ""CYPHER_BODY_MAX_LENGTH"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",All these are missing in the agent setup doc. No one would know how to use these unless reading source codes.,"            /**
FieldDeclaration              * If set to true, the parameters of the cypher would be collected.
FieldDeclaration              */
FieldDeclaration             public static boolean TRACE_CYPHER_PARAMETERS = false;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, SkyWalking won't save the entire parameters string into the tag, but only
FieldDeclaration              * the first {@code CYPHER_PARAMETERS_MAX_LENGTH} characters.
FieldDeclaration              * <p>
FieldDeclaration              * Set a negative number to save the complete parameter string to the tag.
FieldDeclaration              */
FieldDeclaration             public static int CYPHER_PARAMETERS_MAX_LENGTH = 512;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, SkyWalking won't save the entire sql body into the tag, but only the first
FieldDeclaration              * {@code CYPHER_BODY_MAX_LENGTH} characters.
FieldDeclaration              * <p>
FieldDeclaration              * Set a negative number to save the complete sql body to the tag.
FieldDeclaration              */
FieldDeclaration             public static int CYPHER_BODY_MAX_LENGTH = 2048;",0
Unnecessary imports should be removed,Remove this unused import 'java.util.ArrayList'.,Should remove these imports? Seems we add a method in this class and then moved it out but forgot to remove these imports?,import java.util.ArrayList;,0
Static non-final field names should comply with a naming convention,"Rename this field ""default_db_replica_quota_bytes"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","The unit is wrong. This is not a ""byte size"", but a ""number of"" replicas.",    public static long default_db_replica_quota_bytes = 1024 * 1024 * 1024;,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,make it public,  abstract protected void merge(AggregateResult another);,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""freed "" 3 times.",same as above,"        LOG.trace(""freed "" + StringUtils.byteDesc(freedBytes) + "" from "" + this);",0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","Please use Sets.newHashSet() for consistency
",    Set<Path> publisherDirsProcessed = new HashSet<Path>();,1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","Just nit picking but this should probably be Sets.newHashSet() for consistency.
",        paths = new HashSet<String>();,0
Jump statements should not be redundant,Remove this redundant jump.,(nit) redundant,          continue;,1
Redundant casts should not be used,"Remove this unnecessary cast to ""Long"".",Unnecessary cast on RHS.,      _output[i] = (Long) dateTimeValueConverted;,1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"                if (consumerEmpty && MixAll.MASTER_ID != id) {
                    continue;
                }","                if (consumerEmpty) {
IfStmt                     if (id != MixAll.MASTER_ID)
ContinueStmt                         continue;
TryStmt                 }",1
Field names should comply with a naming convention,"Rename this field ""DEFAULT_MAX_ALLOWED_MERGE_GAP"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",is THis only used for alertGroupMerger?,  private final long DEFAULT_MAX_ALLOWED_MERGE_GAP = 14400000L;,0
Unnecessary imports should be removed,Remove this unused import 'java.util.stream.Collectors'.,unused import,import java.util.stream.Collectors;,1
Methods and field names should not be the same or differ only by capitalization,"Rename field ""rRule"" to prevent any misunderstanding/clash with field ""RRULE"" defined on line 15.",can these all be final,  private RRule rRule;,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Add some comments for this class,public class ScheduleRule {,0
Unnecessary imports should be removed,Remove this unused import 'org.apache.pinot.spi.exception.EarlyTerminationException'.,nit: remove unused import.,import org.apache.pinot.spi.exception.EarlyTerminationException;,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Why do we need a Util at this core level?,public class TagUtil {,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,can this be package private?,public class FlickrTestUtils {,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,do not add throws exception in signature,"  public String getSegmentName(AbstractColumnStatisticsCollector statsCollector, DefaultSegmentNameConfig config) throws Exception {",1
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",Why volatile?,"  private volatile Cache<DatanodeInfo, Long> excludeDNsCache;",1
Boolean expressions should not be gratuitous,"Remove this expression which always evaluates to ""true""",So the if condition is hard to understand. What is the scenario this is trying to address? Can we add a comment here to help the reader understand?,    if (!meetException && datasetErrorMap.containsKey(tableOperationTypeMap.get(tableString).datasetPath),0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",Why not use backend id directly？,"        Map<String, Long> backendsID = new HashMap<String, Long>();",0
Unused method parameters should be removed,"Remove this unused method parameter ""tabletId"".","For current scheduler principal, a tablet can only have one task running or pending at most. So we should delete the cache as soon as possible. It is better to change this function to getAndDeleteCachedSrcBackendId. And call it after scheduler cancelled, task running cancelled, and deleteSrcReplicaOfLB.",    public Long getCachedSrcBackendId(Long tabletId) {,0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,`putRecord` method should also be modified to `private`,"  private void updateRecord(RowRecord record, String s) {",0
Printf-style format strings should be used correctly,String contains no format specifiers.,"                  String.format(""The device [%s] doesn't belong to any storage group."", deviceId));","                  String.format(""The device doesn't belong to any storage group."", deviceId));",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove commented code,    // return evaluator.apply(dictIdForCurrentDoc);,1
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""oneLine"".","When processing 
        String s = """"""   
                   
                   
        """""";
The hint will produce code like
String s = ""\n"" + ""\n"" + """";
","        String oneLine[] = textBlock.split(""\\\\n"", -1);    // NOI18N",0
Null pointers should not be dereferenced,"""NullPointerException"" will be thrown when invoking method ""appendWriter()"".",Should we also add the uid & name if we've already chained the `PartitionKeySelector` ?,"          rowDataInput, table.properties(), table.spec(), table.schema(), flinkRowType);",0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single return statement.,"Can use return (qualificationScore > threshold), to replace line 33 to 37, to simply the code.
",      if (qualificationScore > threshold) {,1
URIs should not be hardcoded,Refactor your code to get this URI from a customizable parameter.,"Has the old path been removed? The idea is to have both in place, right? Maybe I am missing something here. The idea is not to introduce a new header, but a new protocol endpoint.","  private static final String SEGMENT_PATH = ""/v2/segments"";",0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,Usage of this method applies `Object key` for accessing entries. Why do we need this change?,"    public Map<?, Map<ClusterNode, EntryInfo>> getEntries() {",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""res"" is nullable here.","convert this into a retry loop and retry 3 times and have a sleep between re tries.
",      if (res == null || res.getStatusLine() == null || res.getStatusLine().getStatusCode() != 200) {,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,Remove this.,    System.out.println();,1
Static non-final field names should comply with a naming convention,"Rename this field ""IGNORE_SUFFIX_ARRAY"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Put the initialization process in the `boot` method, rather than there. It is safer and keeps the initialization sequence more clear.","    private static String[] IGNORE_SUFFIX_ARRAY = Config.Agent.IGNORE_SUFFIX.split("","");",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,e.printStackTrace() must be avoided and replaced by logging or in this case make it silent ?,                e.printStackTrace();,1
Static non-final field names should comply with a naming convention,"Rename this field ""PATTERN"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Default should be the pattern in the document.,"        public static String PATTERN = """";",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"We need to take other actions, such as waiting for the provider app to register, to ensure that this test is feasible","            // provider app started != provider app registered
BlockStmt //            Greeting greetingService = (Greeting) target;
BlockStmt //            String result = greetingService.hello();
BlockStmt //            Assertions.assertEquals(""local"", result);",0
"Fields in a ""Serializable"" class should either be transient or serializable","Make ""functionMap"" private or transient.",why not make it a `private static`?,"        public Map<String, String> functionMap =",1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","@yihua @xushiyan let's chat more on this to make sure we're aligned on the approach going f/w:

I was thinking of keeping this component file-format agnostic and instead make it engine-specific, while refactoring MOR table read-path for efficient querying. 

Can you elaborate what's the goal you're striving for w/ `HoodieAvroRecord`?

P.S. Putting this context in here for somebody who might not be aware of previous conversations",public abstract class HoodieRecord<T> implements Serializable {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""instances"" 5 times.","Suggest using StringUtils to join
    return StringUtil.join(""/"", _baseUrl, ""instances"", instanceName, ""updateTags?tags="" + StringUtils.join(tags, ',');","    return StringUtil.join(""/"", _baseUrl, ""instances"", instanceName, ""updateTags?tags="" + Joiner.on("","").join(tags));",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,"      e.printStackTrace();
      fail(e.getMessage());",      e.printStackTrace();,0
URIs should not be hardcoded,Refactor your code to get this URI from a customizable parameter.,No need to use real websocket,"        client = new WebSocketClient(new URI(""ws://localhost:9095/websocket"")) {",1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.","Since this is empty, does it make sense to remove this so the default method can be used? (Which I think throws an unimplemented error)","  public <T extends DataModel> void update(UUID jobId, String key, T model) {}",1
Boolean literals should not be redundant,Remove the unnecessary boolean literal.,"(minor) Can be simplified to 
    return Boolean.TRUE.equals(offlineTableDisableGroovyQuery) || Boolean.TRUE.equals(realtimeTableDisableGroovyQuery);","    return (offlineTableDisableGroovyQuery == null ? false : offlineTableDisableGroovyQuery) || (
ConditionalExpr         realtimeTableDisableGroovyQuery == null ? false : realtimeTableDisableGroovyQuery);",1
"""InterruptedException"" should not be ignored","Either re-interrupt this method or rethrow the ""InterruptedException"" that can be caught here.",Break line before `catch`.,        } catch (InterruptedException e) {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Let's supply the detail here,        // TODO: Construct result,1
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,Does this method do anything different from GobblinHelixJobLauncher.addAdditionalMetadataTags() ?,"  public static List<? extends Tag<?>> addAdditionalMetadataTags(Properties jobProps,",0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",Why was it necessary to add the type variable here? Java should be able to infer it.,      ReadConf<T> readConf = new ReadConf<T>(,1
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,Use `Connection connection = EnvFactory.getEnv().getConnection();`,"                Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""yyyy-mm-dd"" 4 times.","Since same strings literal is used at more than one places, we should extract as static final and reuse.","        String endDay = splits[splits.length - 2].substring(0, ""yyyy-mm-dd"".length());",1
Type parameters should not shadow other type parameters,"Rename ""T"" which hides a type parameter from the outer scope.",Core API requires comments.,public class AnnotationTypeNameMatch<T extends AnnotationDescription> implements ElementMatcher<T> {,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","I wonder if we could add these abstract classes to the `EasyFormatPlugin` classes so that they are usable for future storage plugins.  

If you take a look here: https://github.com/apache/drill/pull/1962

I was working on refactoring them a bit to reduce the cut/paste code.
",  protected abstract static class ColumnDefn {,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","```
private ArrayList<Sink> sinks = new ArrayList<>();
Explicit type argument could be removed",	private ArrayList<Sink> sinks = new ArrayList<Sink>();,1
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,"instead of this assert, let's have an if condition to assert this? if the condition is false, we exit and don't print log, get tasks etc","        assert (ChaosConstants.CHAOS_AGENT_STATUS_PERSISTENT_ZNODE +
MethodCallExpr           ChaosConstants.ZNODE_PATH_SEPARATOR + agentName).equals(watchedEvent.getPath());",1
Try-catch blocks should not be nested,Extract this nested try block into a separate method.,"checkstyle
) {",    try (Scanner scanner = new Scanner(System.in)){,0
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"I detect that this code is problematic. According to the [Bad practice (BAD_PRACTICE)](https://spotbugs.readthedocs.io/en/stable/bugDescriptions.html#bad-practice-bad-practice), [Nm: Method names should start with a lower case letter (NM_METHOD_NAMING_CONVENTION)](https://spotbugs.readthedocs.io/en/stable/bugDescriptions.html#nm-method-names-should-start-with-a-lower-case-letter-nm-method-naming-convention).
Methods should be verbs, in mixed case with the first letter lowercase, with the first letter of each internal word capitalized.
","    public ReferenceTree Reference(ExpressionTree qualExpr, CharSequence member, List<? extends Tree> paramTypes) {",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"In the future, TODO messages take the format ""TODO(ldap): comment"", so please add your Google ldap. There isn't a need to do so now, since you'll be updating this file soon.",    //TODO: use StreamEncoder per the update,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Huge improvement here in terms of readability.
",  private void updateMergedAnomalyWeight(MergedAnomalyResultDTO anomalyMergedResult) throws Exception {,0
Raw types should not be used,Provide the parametrized type for this generic.,static?,"    private Map<String, Object> createRequest(int i, LinkedHashMap contact) {",0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","It would be better to define as interface and add a getElectPolicyType(), It is convenient to expand new election strategies in the future。",public abstract class ElectPolicy {,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,We may not need to print it out in the console?,"        System.out.println(""Generating segment "" + _segmentName + "" from "" + _inputDataFileName + "" and uploading to "" +",1
"Unused ""private"" fields should be removed","Remove this unused ""catalogLoader"" private field.",Those two seems don't have to be private members because I did not see anywhere accessing them except the constructor.  ,"  private final CatalogLoader catalogLoader;
FieldDeclaration   private final Configuration hadoopConf;",1
"""public static"" fields should be constant","Make this ""public static rpcThriftCompressionEnable"" field final",why set it as true?,  public static boolean rpcThriftCompressionEnable = true;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove this line,//        return fieldSpec.getDefaultNullValue();,1
Field names should comply with a naming convention,"Rename this field ""_fstTypeForFSTIndex"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(minor) Suggest renaming to `_fstIndexType`?,  private FSTType _fstTypeForFSTIndex = FSTType.LUCENE;,1
Field names should comply with a naming convention,"Rename this field ""_valueToDict"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",volatile ValueToDictId is good enough and with higher performance right?,  private AtomicReference<ValueToDictId> _valueToDict = new AtomicReference<>();,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,Same as above.,    abstract public void replayModifyProperties(AlterRoutineLoadJobOperationLog log);,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""\"" not found."" 5 times.","""\"""" + registry + ""\"" not found."" will be evaluated in any way for exception argument. So it make sense to introduce variable (DRY). Also it is good practice to use '\""' for concatenation of strings with chars.

Any text debug/logging output should follow rules described here: https://cwiki.apache.org/confluence/display/IGNITE/Coding+Guidelines#CodingGuidelines-StringOutput
","                log.info(""\"""" + metricName(registry, name) + ""\"" not found."");",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Exception seems to be too broad for the interface/API declaration. Can it be narrowed to a specific checked exception(s). If not, should underlying implementations catch the checked exception and convert it to RuntimeException, if it is necessary.",  public abstract DAG cloneDAG() throws Exception;,1
"Unused ""private"" fields should be removed","Remove this unused ""LOG"" private field.",ditto,  private static final Logger LOG = LogManager.getLogger(HoodieParquetReader.class);,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""globalId"" 3 times.","`Arrays.toString(parameter.get(""globalId"")` has too much cost. You should add an `isDebug` enable before `logger.debug` for considering perfomance.","        logger.debug(""globalId: %s"", Arrays.toString(parameter.get(""globalId"")));",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Is there any reason for this change?,                throw new RuntimeException(e);,0
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"Missing failure cases for the onLine() and atColumn() API, if the wrong line/column is specified. 
",  public void failsToCompile_throws() {,0
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,Please add example in comment,    public static class GroupIterator<NODE_TYPE extends TreeNode> implements Iterator<NODE_TYPE> {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal "" sec reached. Aborting"" 4 times.",same,"        throw new TimeoutException(""Timeout of "" + timeout + "" sec reached. Aborting"");",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Timeout of "" 4 times.",the intended behavior here may be to simply run as many requests as possible and then stopping. just a thought,"          throw new TimeoutException(""Timeout of "" + timeout + "" sec reached. Aborting"");",0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.","This variable is not going to be changed in concurrency case, right? Why need `volatile`?",    private static volatile IWriter WRITER;,1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,          List<TDataNodeLocation> nodeLocationResult =,          List<TDataNodeLocation> NodeLocationResult =,1
Raw types should not be used,Provide the parametrized type for this generic.,Rename the variable,  private final Comparable _timestamp;,0
Static non-final field names should comply with a naming convention,"Rename this field ""DEFAULT_EXPECTED_COMPLETENESS"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","This class could be deleted.
Let's delete everything under /completeness.checker",  public static double DEFAULT_EXPECTED_COMPLETENESS = 80;,0
"Unused ""private"" fields should be removed","Remove this unused ""slacks"" private field.",Different naming style. Please fix.,"    private SlackSettings slacks;
FieldDeclaration     private WechatSettings wechatSetting;",0
Collection.isEmpty() should be used to test for emptiness,Use isEmpty() to check whether the collection is empty or not.,"Do we enforce and ensure that all created tenants have instances? If not, then is this really an error situation?",    if (instances.size() == 0) {,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Can this be throws IOException?,  void onCompactionJobComplete(D dataset) throws Exception;,1
Unnecessary imports should be removed,Remove this unused import 'org.apache.iotdb.tsfile.read.TimeValuePair'.,remove,import org.apache.iotdb.tsfile.read.TimeValuePair;,1
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""combinedSchema"".","""doc"" -> actual doc, also, maybe preserve the original namespace.","    Schema combinedSchema = Schema.createRecord(inputSchema.getName(), ""doc"", ""gobblin.http"", false, fields);",0
"Reflection should not be used to increase accessibility of classes, methods, or fields",This accessibility bypass should be removed.,Maybe skip this cycle for static fields?,"            field.set(forStatic ? null : testInstance, revisionListenerHolder);",0
Resources should be closed,"Use try-with-resources or close this ""FileOutputStream"" in a ""finally"" clause.",Both streams need to be closed. Prefer try-with-resource or close in finally,    OutputStream os = new FileOutputStream(outFile);,1
"Mutable fields should not be ""public static""","Make this member ""protected"".",`String METRICS_SERVLETS_DEFAULT[]` -> `String[] METRICS_SERVLETS_DEFAULT`,"  public static final String METRICS_SERVLETS_DEFAULT[] = { ""jmx"", ""metrics"", ""prometheus"" };",0
Unnecessary imports should be removed,Remove this unused import 'com.sun.source.util.TreePath'.,"Jackpot:
warning: Unused Import",import com.sun.source.util.TreePath;,1
Unused method parameters should be removed,"Remove this unused method parameter ""record"".",Move this to WriteHandle ?,  public boolean canWrite(HoodieRecord record) {,0
Local variables should not shadow class fields,"Rename ""recipients"" which hides the field declared at line 67.",Maybe put these code into a constructor?,"      Map<String, Set<String>> recipients = new HashMap<>();",0
"""ThreadLocal"" variables should be cleaned up when no longer used","Call ""remove()"" on ""THREAD_LOCAL_LONG_MAP"".",The Long2IntOpenHashMap can also be reimplemented in a different format for better locality and cache friendliness right. Similar to how this PR implements IntGroupIdMap ?,  private static final ThreadLocal<Long2IntOpenHashMap> THREAD_LOCAL_LONG_MAP =,0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"Since this is used in both write and flush, shall we call it GMCEException or something more generic?","  MetadataFlushException(String datasetName, String dbName, String tableName, String GMCETopicName,",0
"""toString()"" should never be called on a String object","""storageGroup"" is already a string, there's no need to call ""toString()"" on it.",add confirmLeader(),    return clusterSchemaManager.getStorageGroupNames().contains(storageGroup.toString());,0
Field names should comply with a naming convention,"Rename this field ""_partitionIdToSemaphoreMap"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Please write a block of comment before the declaration of this variable, describing what these semaphores are being used for.
Make it private final.
Also document, that the semaphores will stay in the hash map even if the consuming partitions move to a different host. We expect that these will be a small number of semaphores, but that may be ok. 
It may be useful to add a metric of how many semaphores are there in the map..","  private Map<Integer, Semaphore> _partitionIdToSemaphoreMap = new ConcurrentHashMap<>();",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Remove the dead code?,    //TimeRangeEntity baseline = TimeRangeEntity.getContextBaseline(context);,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,把license去掉吧,"// Licensed under the Apache License, Version 2.0 (the ""License"");",0
Raw types should not be used,Provide the parametrized type for this generic.,I still cannot under why we need to init the map with size as `triggerTable.size() + 1`.,    Map allTriggerStates = new HashMap(triggerTable.size() + 1);,0
Raw types should not be used,Provide the parametrized type for this generic.,This is unused (or only used for a bogus debug call) I would drop it.,                List list = new ArrayList<>(paramCount);,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Actually, I am thinking if the keyword `Config` is a good one. It seems this class only defines some config keys or say table header field names? So what about renaming it to `HoodieTableHeaderFields` or `HoodieTableHeaderConfigKeys`?",public class HoodieTableHeaderConfig {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"I can not recall clearly, but for a long trace path, we could visit lots of services, so it should be OK to have multiple CLIENT and SERVER kind spans?",      // TODO: what about clients embedded in Master/RegionServer/Gateways/&c?,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""db"" is nullable here.",Missing `if (olapTable.getState() != OlapTableState.NORMAL) {` check?,"        OlapTable olapTable = (OlapTable) db.getTableOrThrowException(tableName, TableType.OLAP);",0
"Loops should not contain more than a single ""break"" or ""continue"" statement",Reduce the total number of break and continue statements in this loop to use at most one.,Combine these two `if` using `or`,"        // filter the row that all columns are null
BlockStmt         if (queryDataSet.isWithoutAllNull() && rowRecord.isAllNull()) {
BlockStmt           i--;
BlockStmt           continue;
BlockStmt         }
BlockStmt         // filter the row that any column is null
BlockStmt         if (queryDataSet.isWithoutAnyNull() && rowRecord.hasNullField()) {
BlockStmt           i--;
BlockStmt           continue;",1
Unused method parameters should be removed,"Remove this unused method parameter ""tz"".",why tz is no use?,"    private static String getPartitionRangeOfMonth(Calendar current, int offset, StartOfDate startOf, TimeZone tz,",1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".","Seems it doesn't have to be an abstract class. Is it intended to be an abstract class so that it's overridden?
",public abstract class HttpWriterDecorator<D> implements HttpWriterDecoration<D> {,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,use LOG,      e.printStackTrace(System.err);,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove it.,        //        deviceId = metadataIndex.getName();,1
Local variables should not shadow class fields,"Rename ""checkpointPool"" which hides the field declared at line 204.",How can this be null?,        PagePool checkpointPool = this.checkpointPool;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"Fix indention, split line to avoid 100 column maximum.","    	NSLog (@""nativeEngineVerify: Wrong Signature Size %d %d"", (int)signatureSize , (int) hashBytesSize );",0
Field names should comply with a naming convention,"Rename this field ""_statisticsList"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",might as well `final` these,    private List<Statistics> _statisticsList;,0
Lambdas should be replaced with method references,Replace this lambda with method reference 'AggregateFunction.class::isInstance'. (sonar.java.source not set. Assuming 8 or greater.),                .filter(AggregateFunction.class::isInstance),                .filter(x -> x instanceof AggregateFunction),1
Nested blocks of code should not be left empty,Either remove or fill this block of code.,Nothing need to warn?,                        } catch (Exception e) {,1
"Unused ""private"" classes should be removed","Remove this unused private ""RestoreCacheStartException"" class.",Not used,    private static class RestoreCacheStartException extends IgniteCheckedException {,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Timeout of {} sec reached. Aborting"" 4 times.",Suggest keeping it as warning. Same for other places,"          LOGGER.info(""Timeout of {} sec reached. Aborting"", timeout);",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Is this going to be fixed?
","                // TODO: Add ""committed"" tag to final metrics.",1
Try-with-resources should be used,"Change this ""try"" to a try-with-resources. (sonar.java.source not set. Assuming 7 or greater.)",Nit: fix indention to 4 spaces.,                            IOSLogHandler.IOS_LOG_MANAGER_DEFAULTS.getBytes());,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Would like to understand the need for switching from Apache Common libraries to writing our own code ? Are we facing issues with common libraries ?,public class FileIOUtils {,0
Resources should be closed,"Use try-with-resources or close this ""ServerSocketChannel"" in a ""finally"" clause.","Why bind this to a null `SocketAddress`?
",      server = ServerSocketChannel.open().bind(null);,0
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",Why is at abstract?,"public abstract class ConfigurationTreeWrapper<VIEW, CHANGE> implements ConfigurationTree<VIEW, CHANGE> {",1
A conditionally executed single line should be denoted by indentation,"Use indentation to denote the code conditionally executed by this ""if"".",Does it make sense to change `IllegalStateException` to a new `IgniteInternalException`?,"            throw new IllegalStateException(""Value column missed: colIdx="" + curCol);",0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"add a `System.out.print(""\t"");`?","          System.out.print(""]"");",0
Math operands should be cast before assignment,"Cast one of the operands of this division operation to a ""double"".","      if (_isSample) {
        double besselCorrection = count / (count - 1);
        return popCov * besselCorrection;
      }","      double besselCorrection = count / (count - 1);
IfStmt       if (_isSample) {
ReturnStmt         return popCov * besselCorrection;
ReturnStmt       }",0
Return values should not be ignored when they contain the operation status code,"Do something with the ""boolean"" value returned by ""delete"".",          Files.delete(mergeLog.toPath());,          mergeLog.delete();,0
Collection.isEmpty() should be used to test for emptiness,Use isEmpty() to check whether the collection is empty or not.,"LambdaExpr should be replaced with ""k -> !k.isEmpty()""",        int pairCnt = (int) items.entrySet().stream().map(Map.Entry::getValue).filter(k -> k.size() > 0).count();,1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",What's this empty method used for?,  public void handleClientExit() {},1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,TODOs should have tickets.,                            // TODO: can we cache the type?,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Can we redo this such that it can use the metadata table for obtaining the listing? You can see how this is done in HoodieParquetInputFormat. ,    // TODO This might need to be done in parallel like listStatus parallelism ?,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""exception"" is nullable here.","If exception != null

",                callback.onTaskFailed(exception.getMessage());,1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","You seem to first initialize this as a list and then you convert to a set. You might as well, use a set to begin with.
",        disabledURIs = new ArrayList<URI>();,0
"Array designators ""[]"" should be on the type, not the variable",Move the array designator from the variable to the type.,`String enabledServlets[]` -> `String[] enabledServlets`,"    String enabledServlets[] = conf.getStrings(METRIC_SERVLETS_CONF_KEY, METRICS_SERVLETS_DEFAULT);",1
Using hardcoded IP addresses is security-sensitive,Make sure using this hardcoded IP address is safe here.,This is not a unit test. You need to setup the cluster in these ip addresses in order to make it work...,"        ConnectionFactory.fromHostList(""10.85.126.103:8099"", ""10.85.126.104:8099"", ""10.85.126.105:8099"");",0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".","Add this new config in
docs/zh-CN/administrator-guide/config/fe_config.md
docs/en/administrator-guide/config/fe_config.md",    public static long default_db_replica_quota_size = 1024 * 1024 * 1024;,0
Private fields only used as local variables in methods should become local variables,"Remove the ""_tableName"" field and declare it as a local variable in the relevant methods.",(nit) seems we don't need the table name,  private String _tableName;,0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","We're on Java 7 now, right? So we should be able to use `new LinkedList<>()`, and similarly in other places in the PR.",  private final LinkedList<ReflectionAccessFilter> reflectionFilters = new LinkedList<ReflectionAccessFilter>();,1
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,It would be better if we move this constant to dubbo-registry-nacos module,"    String NACOS_GROUP_KEY = ""nacos.group"";",1
Identical expressions should not be used on both sides of a binary operator,"Correct one of the identical sub-expressions on both sides of operator ""&&""","What happens if ""non"" is not followed by ""-sealed""?","                        if (TokenUtilities.textEquals(tokens.token().text(), ""non"") && tokens.moveNext() && TokenUtilities.textEquals(tokens.token().text(), ""-"") && tokens.moveNext() && TokenUtilities.textEquals(tokens.token().text(), ""sealed"")) {// NOI18N",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Please add an UT for this method or in the LAL core level. I think we don't need complex e2e for this.,    public LogTestResponse test(LogTestRequest request) throws Exception {,0
"Unused ""private"" fields should be removed","Remove this unused ""counter"" private field.","I think this can be final. I'd also call it `jobCounter` or something to be specific.

If we decide to keep the job counter in `BaseSparkAction`, then we can offer the following method:

  protected JobGroupInfo newJobGroupInfo(String groupId, String desc) {
    return new JobGroupInfo(groupId, desc + ""-"" + jobCounter.incrementAndGet(), false);
  }

That way, we hide the complexity of assigning the job count from individual actions.",  private AtomicInteger counter = new AtomicInteger();,0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,I'm still wary of only using the Javadoc tag. Can you include the annotation as well?,  public char getAsCharacter() {,0
Class variable fields should not have public accessibility,Make processor a static final constant or non-public and provide accessors if needed.,final,  public Planner processor;,1
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,"wherever you are calling spark.sql(snapshot) more than twice, lets save it to a dataset, cache and reuse. if not, it will trigger the compute repeatedly ",    assert snapshotBeforeDelete.except(deleteDf).except(spark.sql(snapshotQuery)).count() == 0;,0
Two branches in a conditional structure should not have exactly the same implementation,This branch's code block is the same as the block for the branch on line 432.,this `else if` and following `else if` can be merged to one,            } else if (entry.getKey().contains(BrokerUtil.HADOOP_FS_NAME),1
Field names should comply with a naming convention,"Rename this field ""_columnDataTypesArray"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Can we replace name and type with schema, and schema can be within metadata field. This way, we can add more metadata as needed.",  private JsonNode _columnDataTypesArray;,0
Static non-final field names should comply with a naming convention,"Rename this field ""DNS_PERIOD_RESOLVE_ACTIVE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","        public static boolean IS_RESOLVE_DNS_PERIODICALLY = false;
I think the current naming style is like this.",        public static boolean DNS_PERIOD_RESOLVE_ACTIVE = false;,0
"""switch"" statements should have ""default"" clauses",Add a default case to this switch.,Is there any place where users can set what consensus algorithm to use for DataRegion? ,"              switch (id.getType()) {
SwitchEntry                 case SchemaRegion:
ReturnStmt                   return new RatisSchemaRegionStateMachine();
SwitchEntry                 case DataRegion:
ReturnStmt                   return new RatisDataRegionStateMachine();
ReturnStmt               }
ReturnStmt               return new EmptyStateMachine();",0
"Unused ""private"" fields should be removed","Remove this unused ""traceId"" private field.","*SameNameButDifferent:*  The name `traceId;` refers to [java.lang.SuppressWarnings, lombok.Generated, org.apache.skywalking.generator.Generator, java.lang.String] within this file. It may be confusing to have the same name refer to multiple types. Consider qualifying them for clarity. [(details)](https://errorprone.info/bugpattern/SameNameButDifferent)

(at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)",    private Generator<String> traceId;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Clarify ""in the next official release"". Do you want to remove it _after_ the next release is done, or _before_ the next release? If _before_, then you can do it now.

Also, please tag this PR for release notes and add appropriate comments that can be noted by whoever is building the release. Questions to be addressed in checkin comments:
- What is the difference in new cluster creation before and after this commit?
- How will existing clusters behave after the release when this code is installed?
- How to find out which controller is ""responsible"" for a table? (add link to the doc to the rest api. Doc it if it is not already there)

Add a pointer to the design doc.",    // TODO: remove the logic of handling this config in both controller and server in the next official release.,1
Using pseudorandom number generators (PRNGs) is security-sensitive,Make sure that using this pseudorandom number generator is safe here.,nit: What about choosing a random seed (maybe `System.currentTimeMillis()`) in `testPreadWithoutReadFullBytes()` and `testPreadWithReadFullBytes()` and pass that seed into `testPreadReadFullBytesInternal(..)`. As long as we log the seed we get the benefit of randomly choosing different data every time but a human can come back and replay the same exact seed (as we'd have the seed logged in surefire-reports).,    Random rand = new Random(5685632);,0
"""InterruptedException"" should not be ignored","Either re-interrupt this method or rethrow the ""InterruptedException"" that can be caught here.","Although the linkedblockingqueue has default size with Integer.MAX_VALUE, but really useless.","                    PullResult pullResult = pull(messageQueue, subscriptionData, offset, defaultLitePullConsumer.getPullBatchSize());",0
Math operands should be cast before assignment,"Cast one of the operands of this multiplication operation to a ""long"".",I think it's safe to rename constant to `DFLT_PERIODIC_STARVATION_CHECK_FREQ` like the other constants named.,    public static final long PERIODIC_STARVATION_CHECK_FREQ = 1000 * 30;,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"How about we use an enum to be typsafe then we can use it in the case conditions?

public enum CryptoTransformation {
    AES_CBC_NOPADDING(""AES/CBC/NoPadding""),
    RSA_ECB_PKCS1(""RSA/ECB/PKCS1Padding""),

    public final String algorithm;
 
    private CryptoTransformation(String algorithm) {
        this.algorithm = algorithm;
    }
}",public final class CryptoTransformations {,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""copiedColumnExprs"".",seems that `copiedColumnExprs` is not used by anyone,        List<ImportColumnDesc> copiedColumnExprs = Lists.newArrayList(columnExprs);,1
"""public static"" fields should be constant","Make this ""public static SQL_PARAMETERS_MAX_LENGTH"" field final","Add these configs to documentations, otherwise, nobody can find this feature until they read the source codes","            public static boolean TRACE_SQL_PARAMETERS = true;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, limit the max number of parameter
FieldDeclaration              */
FieldDeclaration             public static int SQL_PARAMETERS_MAX_COUNT = 20;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, SkyWalking won't save the entire parameters string into the tag, but only
FieldDeclaration              * the first {@code SQL_PARAMETERS_MAX_LENGTH} characters.
FieldDeclaration              *
FieldDeclaration              * Set a negative number to save the complete parameter string to the tag.
FieldDeclaration              */
FieldDeclaration             public static int SQL_PARAMETERS_MAX_LENGTH = 512;",0
Unnecessary imports should be removed,Remove this unused import 'com.linkedin.pinot.common.data.TimeGranularitySpec'.,"I missed these, can we also remove these imports.",import com.linkedin.pinot.common.data.TimeGranularitySpec;,1
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Version compatibility feature is provided by a thing called `witness` class. If you provide that in the instrumentation definition, your plugin is activated only those class exists.",public class CompatibilityChecker {,0
"""clone"" should not be overridden","Remove this ""clone"" implementation; use a copy constructor or copy factory instead.",Doesn't need to be clonable (nothing clones it).,        protected Object clone() throws CloneNotSupportedException {,1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""processQueue"" is nullable here.",assignedMessageQueue.getProcessQueue(messageQueue) may return null. So it is necessary to check if processQueue is null to prevent NPE,                if (processQueue != null && processQueue.isDropped()) {,1
Field names should comply with a naming convention,"Rename this field ""_physicalColumnFieldSpecs"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Let's cache physical dimensions and physical metrics as well to eliminate all the record level check,  private final Collection<FieldSpec> _physicalColumnFieldSpecs;,0
Two branches in a conditional structure should not have exactly the same implementation,This branch's code block is the same as the block for the branch on line 350.,"Wow, great idea!",                cnt++;,0
"Mutable fields should not be ""public static""","Make this member ""protected"".",getter / setter,"  public static Map<String, Map<String, Map<String, Integer>>> database2Measurement2TagOrders =",0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","The reason you put the CONTEXT here, is this for avoiding classloader isolation issue? If SO, add this to comments.","        public static Map<String, Object> CONTEXT = new HashMap<String, Object>();",0
Class variable fields should not have public accessibility,Make DISABLED a static final constant or non-public and provide accessors if needed.,Wouldn't it be better to have a static final member in ActionMapping interface as a specific instance?,    public static DefaultActionMapping DISABLED = new DefaultActionMapping();,1
Unused local variables should be removed,"Remove this unused ""headers"" local variable.","Hi, pls remove this line, the `header` is not used, right?","        Map<String, Object> headers = new HashMap<>(2, 1);",1
"Unused ""private"" fields should be removed","Remove this unused ""enableUpdateUITemplate"" private field.","*SameNameButDifferent:*  The name `enableUpdateUITemplate = true;` refers to [java.lang.SuppressWarnings, lombok.Generated] within this file. It may be confusing to have the same name refer to multiple types. Consider qualifying them for clarity. [(details)](https://errorprone.info/bugpattern/SameNameButDifferent)

(at-me [in a reply](https://help.sonatype.com/lift/talking-to-lift) with `help` or `ignore`)",    private boolean enableUpdateUITemplate = true;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""prometheus"" 3 times.",We should have changed the title of the jira to match the actual endpoint this feature uses. People will be confused that `/metrics` does not emit the prometheus formatted output.,"      .put(""prometheus"", new ServletConfig(""prometheus"", ""/prometheus"",",0
Field names should comply with a naming convention,"Rename this field ""_schemaChangeListeners"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Same here. It'd be good to use `ConcurrentHashMap.newKeySet()`.,  private final Set<SchemaChangeListener> _schemaChangeListeners = new HashSet<>();,0
Static non-final field names should comply with a naming convention,"Rename this field ""PROFILE_TASK_READY_SCHEDULE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Hi, I suggest will `ProfileTaskExecutionService` disabled by default, enabled by the user through the displayed configuration.","    private static volatile ScheduledExecutorService PROFILE_TASK_READY_SCHEDULE = Executors.newScheduledThreadPool(15, new DefaultNamedThreadFactory(""PROFILE-TASK-READY-SCHEDULE""));",0
"""InterruptedException"" should not be ignored","Either re-interrupt this method or rethrow the ""InterruptedException"" that can be caught here.","Future.get() should set timeout param , or else it may cause blocking.",        futureList.get(i).get();,0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",Why add this empty method?,  public void closeClusterService() {,1
Unnecessary imports should be removed,Remove this unused import 'org.dataportabilityproject.types.transfer.models.ItemResource'.,Is this used?,import org.dataportabilityproject.types.transfer.models.ItemResource;,1
Static non-final field names should comply with a naming convention,"Rename this field ""jetty_server_max_http_post_size"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","`jetty_server_max_http_post_size` is only for UploadAction, which is used for user to upload demo data from Web UI. So the file size should be small. I think the default 100MB is enough, otherwise, the user may upload large file to occupy the FE node's disk.",    @ConfField public static int jetty_server_max_http_post_size = 2 * 1024 * 1024 * 1024;,0
Identical expressions should not be used on both sides of a binary operator,"Correct one of the identical sub-expressions on both sides of operator ""&&""","Could `containsAll` be slow, if the Collection is List?",    return c1.size() == c2.size() && c1.containsAll(c2) && c1.containsAll(c2);,0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""newBuffer"".","Expand buffers with a multiplicative factor, as to avoid degradation due to large numbers of buffers. This also prevents catastrophically allocating all of the memory if someone tries to add a String that's larger than your buffer size.",    Buffer newBuffer = expand(lastBuffer.getSize());,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""instance"" is nullable here.","Why set `context` , does it useful?   
Currently `gateway plugin` rely on value `span` of `SkyWalkingDynamicField` . (`FilteringWebHandlerInterceptor`)
if it's useful ,maybe need to update `gateway plugin` ",        instance.setSkyWalkingDynamicField(context);,0
"Unused ""private"" fields should be removed","Remove this unused ""logger"" private field.",unused,    private static final ILog logger = LogManager.getLogger(IndicesClientCreateMethodsInterceptor.class);,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"""Not implemented"" may be a better exception message here","        throw new RuntimeException(""Do not implement"");",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Please consider Restrict this class to IntervalUitls, that extend the method that can be applied to Intervals. This method to merge intervals (or ranges) have a broader use in thirdeye, anomaly-detection code base and should abstracted out.",public class MergedAnomalyIntervalUtils {,0
"Unused ""private"" fields should be removed","Remove this unused ""LOG"" private field.",not being used anywhere?,  private static final Logger LOG = LogManager.getLogger(ProtoClassBasedSchemaProvider.class);,1
"""public static"" fields should be constant","Make this ""public static DEFAULT_EXPECTED_COMPLETENESS"" field final","This class could be deleted.
Let's delete everything under /completeness.checker",  public static double DEFAULT_EXPECTED_COMPLETENESS = 80;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""quantile"" 6 times.","Are the metrics like tp99/tp95 calculated from all history data or from  a period of time, say last five minutes?
If from all history data, it will be meaningless.","        name, metricsUtils.mapOf(""quantile"", ""0.99""), snapshot.get99thPercentile() * factor);",0
A conditionally executed single line should be denoted by indentation,"Use indentation to denote the code conditionally executed by this ""if"".",formatting,		return true;,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""!unknown!"".",nit: you can reuse the `jobDequeueTime` for calculating `MinionQueryPhase.TASK_EXECUTION`.,              long startTimeMillis = System.currentTimeMillis();,0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,You need a builder like [CompletionCollector.Builder](https://bits.netbeans.org/dev/javadoc/org-netbeans-api-lsp/org/netbeans/spi/lsp/CompletionCollector.Builder.html).,    CompletableFuture<List<? extends StructureElement>> getStructure(@NonNull Document doc);,0
"Unused ""private"" fields should be removed","Remove this unused ""consensusGroupId"" private field.",Is this variable never used?,  private final TConsensusGroupId consensusGroupId;,1
Using slow regular expressions is security-sensitive,"Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.",this is sensitive to spaces right? yymmdd  tz ('UTC') will probably not be able to parse the tz.  ,"  private static final Pattern SDF_PATTERN_WITH_TIMEZONE = Pattern.compile(""^(.+)( tz\\((.+)\\))"");",1
"Subclasses that add fields should override ""equals""","Override the ""equals"" method in this class.",This class should be renamed,"class GroupPageStoreHolderMap<T extends PageStore> extends ConcurrentHashMap<Integer, List<T>> {",0
Encryption algorithms should be used with secure mode and padding scheme,Use secure mode and padding scheme.,"## Use of a broken or risky cryptographic algorithm

Cryptographic algorithm [AES/ECB/PKCS5Padding](1) is weak and should not be used.

[Show more details](https://github.com/apache/drill/security/code-scanning/36)","        javax.crypto.Cipher cipher = javax.crypto.Cipher.getInstance(""AES/ECB/PKCS5Padding"");",1
"""public static"" fields should be constant","Make this ""public static sys_log_roll_interval"" field final","Besides ""DAY"", what can we choose? can you write them in comment?","    @ConfField public static String sys_log_roll_interval = ""DAY"";",0
"Synchronized classes Vector, Hashtable, Stack and StringBuffer should not be used","Replace the synchronized class ""StringBuffer"" by an unsynchronized one such as ""StringBuilder"".",'StringBuffer stringBuffer' may be declared as 'StringBuilder' ,        StringBuffer stringBuffer = new StringBuffer();,1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,```,    System.out.println(sessionId);,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,public class PlanNodeIdAllocator {,public class PlanNodeAllocator {,0
Field names should comply with a naming convention,"Rename this field ""_poolToReplicaGroupsMap"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Let's not add this map in this PR for the following reasons:
1. Not mixing the optimization of keeping same server order from the candidate servers and keeping the same pool for the replica-group (the second one might not be needed)
2. This map is not general and only apply to a certain algorithm, and might not apply to cases where replica-group contains servers from multiple pools
3. If we really want to support keeping the same pool for the replica-group (in a separate PR), we can achieve it by picking the pool that contains the most common servers with the current assignment. This is more flexible and can guarantee the minimum movement","  private final Map<Integer, List<Integer>> _poolToReplicaGroupsMap;",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Type is not supported yet."" 4 times.",Do we need a ticket for this?,"                throw new IllegalArgumentException(""Type is not supported yet."");",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,add some annotations,"    NoPartition, InPartition, PrevPartition",0
Nested blocks of code should not be left empty,Either remove or fill this block of code.,Some log?,            } catch (MetaNotFoundException ignored) {,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Nit: Can we remove the commented out code?,"//    return getValue(pos, TimestampData.class);",1
Nested blocks of code should not be left empty,Either remove or fill this block of code.,Maybe add some guard against incomplete / malformed source that is missing the case delimite so the loop does not pass too far.,        do { } while (tokenSequence.moveNext() && JavaTokenId.COLON != tokenSequence.token().id() && JavaTokenId.ARROW != tokenSequence.token().id());,1
Field names should comply with a naming convention,"Rename this field ""_timeColumnSpec"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","(nit)
  private final DateTimeFormatSpec _timeFormatSpec;",  private final DateTimeFormatSpec _timeColumnSpec;,0
Empty arrays and collections should be returned instead of null,Return an empty collection instead of null.,maybe we need to return an empty list,        return null;,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"How do we get here? Is this just for safety? From what I can tell we only allow the block to have called exceptions for e1 -> e3, and all that's left should be RuntimeExceptions right?","      throw new RuntimeException(""Unknown throwable"", failure);",0
Static non-final field names should comply with a naming convention,"Rename this field ""DEFAULT_DAG_NAME"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","The name can be in caps (TestDagName), no need for camecasing..","  public static String DEFAULT_DAG_NAME = ""testDagName"";",1
Field names should comply with a naming convention,"Rename this field ""_segmentLineageBasedSegmentSelector"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","This seems a bit confusing:
1. One segment selector class contains another segment segment selector.
2. Even though both are named SegmentSelector, only one of them implements the SegmentSelector interface.

I think SegmentLineageBasedSegmentSelector needs to be renamed, since it is not really implementing the interface.",  private final SegmentLineageBasedSegmentSelector _segmentLineageBasedSegmentSelector;,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Could you expand on this/remove the todo if it is addressed?,  // TODO: @consumes text/plain but swagger doc says json. Does that work. It's better this way if it works,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Would be best to have a meaningful test name, something like `testAllowMatchingDocument` but in case that the test fails, will provide information about what the test is checking. ",	public void testBasicIndexingFilter() throws Exception {,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Please delete line.,//import libcore.io.DeleteOnExitHook;,1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,maxCount,                long max_count = pbi.beByReplicaCount.keySet().last();,0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,"It looks like this one isn't called anywhere, so we can actually delete it. The other deprecated one is actually called in some places so we'll need to leave it there for now.
","  public static SourceFile fromInputStream(String fileName,",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""system"" 4 times.",put this to logs folder or data/performance is better,"  private String performanceDir = ""data"" + File.separator + ""system"" + File.separator + ""performance"";",0
Local variables should not be declared and then immediately returned or thrown,"Immediately return this expression instead of assigning it to the temporary variable ""hoodieRecord"".","this is okay, as long as the new base and log files have been merged already in `records`. I think this is the case. Could you confirm again? the case for using the user-defined payload class for clustering, is when the clustering also implicitly compacts the base and log files. ","      HoodieRecord hoodieRecord = new HoodieRecord(hoodieKey, new RewriteAvroPayload(record));",0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"nit: order should be ""public final""",final public class InMemoryJobDataCache implements JobDataCache {,1
Lambdas should be replaced with method references,Replace this lambda with a method reference. (sonar.java.source not set. Assuming 8 or greater.),"Where do we emit other metrics for GaaS-triggered jobs - inside the job itself or in the GaaS code?

I see that we are emitting CountEvent for work unit size earlier in the code. I assume it will land in GaaS and be available for processing.","      ContextAwareGauge guage = metricContext.newContextAwareGauge(workUnitCountName, () -> workUnits.size());",0
"Declarations should use Java collection interfaces such as ""List"" rather than specific implementation classes such as ""LinkedList""","The return type of this method should be an interface such as ""List"" rather than the implementation ""ArrayList"".",return type of method usually use interface such as ``` List```  rather than implementation ```ArrayList```,  public ArrayList<TimeRange> getRemains(ArrayList<TimeRange> timeRangesPrev) {,0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,This is an API change that users need to be aware of @n3nash @bvaradar  ,"  public void markSuccess(HoodieRecord record, Option<Map<String, String>> optionalRecordMetadata) {",0
Unnecessary imports should be removed,Remove this unused import 'org.apache.hadoop.conf.Configuration'.,"Can you update the class javadoc for AvroSchemaManager with this new case?
",import org.apache.hadoop.conf.Configuration;,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,"Are these intentional logs, or left over from debugging? Also, does it make sense to use Logger?","    System.out.println(""PluginClassLoader.loadClass: "" + name);",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Error happened while getting {} size"" 6 times.",?,"      logger.error(""Error happened while getting {} size"", filePath);",0
Class variable fields should not have public accessibility,Make CONTEXT a static final constant or non-public and provide accessors if needed.,"The reason you put the CONTEXT here, is this for avoiding classloader isolation issue? If SO, add this to comments.","        public static Map<String, Object> CONTEXT = new HashMap<String, Object>();",0
Unused method parameters should be removed,"Remove this unused method parameter ""plan"".",Why do these methods all return null?  maybe it's better add some comments or TODO ,"  public DataSet executeListRole(AuthorPlan plan) throws AuthException {
ReturnStmt     return null;
MethodDeclaration   }
MethodDeclaration   public DataSet executeListUser(AuthorPlan plan) throws AuthException {
ReturnStmt     return null;
MethodDeclaration   }",1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.","The core agent API accepts log as Map if we only log errorMsg, I prefer to just support one parameter, without `key`. Log
1. `add(new KeyValuePair(""event"", SimpleName)`
1. `add(new KeyValuePair(""message"", xxxx)`.

Take a look at https://github.com/apache/skywalking/blob/3eafda2865da0be3d701515bd261ce2934fdf802/apm-sniffer/apm-agent-core/src/main/java/org/apache/skywalking/apm/agent/core/context/trace/AbstractTracingSpan.java#L149-L152","    public static void error(String key, String errorMsg) {",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Let's inject a mapper passed through from the TransferExtension here,  // TODO(olsona): is this the mapper we want to use?,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,seems reasonable to me,"                    //TODO consider doing update of cversion, pzxid, numChildren only",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""</td>"" 6 times.",`hard code style` is not recommended,"		  +    ""<td style=\""font-size:13px\"">""+queryResult.getStatement()+""</td>""",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Can you change the TODO to: `Rename the class to MatchAllDocIdSet`,// TODO: javadoc this class.,0
Field names should comply with a naming convention,"Rename this field ""_nullValueVectorReader"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","`_leftTransformFunction`, `_dataSourceMap` and `_nullValueVectorReader` can be changed to local variable. Also, suggest renaming `_leftTransformFunction` as there is only one single argument","  private TransformFunction _leftTransformFunction;
FieldDeclaration   private int[] _results;
FieldDeclaration   private Map<String, DataSource> _dataSourceMap = new HashMap<>();
FieldDeclaration   private PeekableIntIterator _nullValueVectorIterator;
FieldDeclaration   private NullValueVectorReader _nullValueVectorReader;",0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""builder"" is nullable here.","Seems the builder has been initiated twice, another one is in the caller side","    builder.init(_configuration, tableConfig, _propertyStore, _brokerMetrics);",0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,                long minCount = pbi.beByReplicaCount.keySet().first();,                long min_count = pbi.beByReplicaCount.keySet().first();,0
Abstract classes without fields should be converted to interfaces,"Convert the abstract class ""ProxySerializableMetricsMode"" into an interface. (sonar.java.source not set. Assuming 8 or greater.)",Can you add this as a comment in the code so we don't forget this?,  private abstract static class ProxySerializableMetricsMode implements MetricsMode {,0
Static non-final field names should comply with a naming convention,"Rename this field ""NAMING_CONTROL"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Where is it used?,    private static NamingControl NAMING_CONTROL;,0
Nested blocks of code should not be left empty,Either remove or fill this block of code.,Can store statements.size() as it's required more than once.,            if (statements.isEmpty()) {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Add java doc,  // TODO(#553): Implement this for auth extensions. Currently unused by the demo-server frontend.,0
Unnecessary imports should be removed,Remove this unused import 'javax.xml.crypto.Data'.,```,import javax.xml.crypto.Data;,1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,make this static?,"    String STAR_TREE_CONFIG_NAME = ""StarTreeIndex Config"";",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Remove TODO,          // TODO: convert ThirdeyeAnomalyConfig to Configuration,1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",Is the empty constructor needed?,  public RegexPredicateAstNode() {,1
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,this should return children's StatsDeriveResult,    List<? extends PlanStats> getChildrenStats();,1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""field"" is nullable here.",minor: can we reuse `expressionFieldPath` instead of obtaining `ref().name()` again? ,      caseSensitive ? struct.field(ref().name()) : struct.caseInsensitiveField(ref().name());,0
Ternary operators should not be nested,Extract this nested ternary operation into an independent statement.,Better move it to plugin layer,"                : sourceDataSetField.getDataType().equals(TSDataType.BOOLEAN)
MethodCallExpr                     ? sourceDataSetField.getStringValue().equalsIgnoreCase(""true"") ? 1 : 0
MethodCallExpr                     : sourceDataSetField.getObjectValue(sourceDataSetField.getDataType()));",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove this weige,"//    return Collections.singletonList(
ReturnStmt //        new MemPageReader(nextPageData(), readOnlyMemChunk.getChunkMetaData().getStatistics()));",1
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"See above comment for Watermark.increment()
",  public void increment(Object record) {,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,What about to use `UnsupportedOperationException` here and below?,"        throw new RuntimeException(""Not implemented"");",1
Collection.isEmpty() should be used to test for emptiness,Use isEmpty() to check whether the collection is empty or not.,"Recursively invoke the additional sql might avoid problem like https://github.com/apache/skywalking/pull/9098/files#r877084495

        for (SQLExecutor sqlExecutor : additionalSQLs) {
            sqlExecutor.invoke(connection);
        }","        if (additionalSQLs.size() > 0) {
ExpressionStmt             invokeAdditionalSQL(connection);
MethodDeclaration         }",0
"""static"" members should be accessed statically",Change this instance-reference to a static reference.,Should consider having a record type to support non-string encoding and also avoid the cost of composing the string to get the length.,    return (record).toString().length() + this.OVERHEAD_SIZE_IN_BYTES;,0
Class variable fields should not have public accessibility,Make PAGE_LENGTH_DIGIT a static final constant or non-public and provide accessors if needed.,not used,  public static int PAGE_LENGTH_DIGIT = 14;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove comment?,"        // parseTemplateMeasurementClause(templateClauseContext, createTemplateStatement);",1
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,Long --> long,"  private List<Event> getCalendarEvents(String Calendar_id, Long start, Long end) throws Exception {",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,Is necessary definition enum here?,"    HmacSHA1,",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"Can you delete this class, and move this code to a getInstance() method under ReflectionAccessor?",public class ReflectionAccessUtils {,0
Field names should comply with a naming convention,"Rename this field ""_results"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",You should be able to directly use the `_longValuesSV` within the `BaseTransformFunction`,  private long[] _results;,0
Raw types should not be used,Provide the parametrized type for this generic.,"Map -> Map<String, String> ?",                Map tuple = new HashMap();,1
Printf-style format strings should be used correctly,%n should be used in place of \n to produce the platform-specific line separator.,Use en instead of cn,"                        System.out.printf(""生产者组(%s)实例数为空\n"", group);",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,remove uncommented code. ,"    //Dataset<Row> df = spark.sql(""select uuid, partitionpath, ts from  hudi_ro_table limit 2"");",1
"Instance methods should not write to ""static"" fields","Make the enclosing method ""static"" or remove this set.","@ham1 , why is this change?
you are initializing static fields in individual tests.

Please, please, refrain from pushing unrelated changes under a single commit.
Here you replace ""junit5->juni5"" code under ""junit4->junit5"" name. That is super-confuse those who review the change.


/cc @pmouawad ",        password = JOrphanUtils.generateRandomAlphanumericPassword(32);,1
"Unused ""private"" fields should be removed","Remove this unused ""schemaRegionGroupDataNodesMap"" private field.","  private final Map<Integer, List<Integer>> schemaRegionDataNodesMap;","  private final Map<Integer, List<Integer>> schemaRegionGroupDataNodesMap;",1
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,"*[MissingOverride](https://errorprone.info/bugpattern/MissingOverride):*  getScopeType implements method in EntityDescription; expected @Override


    private final ScopeType @Override scopeType = ScopeType.PROCESS_RELATION;



Reply with *""**@sonatype-lift help**""* for info about LiftBot commands.
Reply with *""**@sonatype-lift ignore**""* to tell LiftBot to leave out the above finding from this PR.
Reply with *""**@sonatype-lift ignoreall**""* to tell LiftBot to leave out all the findings from this PR and from the status bar in Github.

When talking to LiftBot, you need to **refresh** the page to see its response. [Click here](https://help.sonatype.com/lift/talking-to-lift) to get to know more about LiftBot commands.

---

Was this a good recommendation?
[ [? Not relevant](https://www.sonatype.com/lift-comment-rating?comment=290409302&lift_comment_rating=1) ] - [ [? Won't fix](https://www.sonatype.com/lift-comment-rating?comment=290409302&lift_comment_rating=2) ] - [ [? Not critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=290409302&lift_comment_rating=3) ] - [ [? Critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=290409302&lift_comment_rating=4) ] - [ [? Critical, fixing now](https://www.sonatype.com/lift-comment-rating?comment=290409302&lift_comment_rating=5) ]",    private final ScopeType scopeType = ScopeType.PROCESS_RELATION;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Same comments above and other places.,"        throw new RuntimeException(""Failed to encrypt"", e);",0
Conditionally executed code should be reachable,"Change this condition so that it does not always evaluate to ""false""",`tsFilesReader ` is always not null..,      if (tsFilesReader == null) {,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Running Mode: ["" 3 times.",if we have check the param . this will not happend?,"          LOG.info(""Running Mode: ["" + EXECUTE + ""]; Do cluster"");",0
"Unused ""private"" fields should be removed","Remove this unused ""enabledOtlpRules"" private field.","*[UnusedVariable](https://errorprone.info/bugpattern/UnusedVariable):*  The field SimpleName is never read.

---

Reply with *""**@sonatype-lift help**""* for info about LiftBot commands.
Reply with *""**@sonatype-lift ignore**""* to tell LiftBot to leave out the above finding from this PR.
Reply with *""**@sonatype-lift ignoreall**""* to tell LiftBot to leave out all the findings from this PR and from the status bar in Github.

When talking to LiftBot, you need to **refresh** the page to see its response. [Click here](https://help.sonatype.com/lift/talking-to-lift) to get to know more about LiftBot commands.

---

Was this a good recommendation?
[ [? Not relevant](https://www.sonatype.com/lift-comment-rating?comment=319134780&lift_comment_rating=1) ] - [ [? Won't fix](https://www.sonatype.com/lift-comment-rating?comment=319134780&lift_comment_rating=2) ] - [ [? Not critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=319134780&lift_comment_rating=3) ] - [ [? Critical, will fix](https://www.sonatype.com/lift-comment-rating?comment=319134780&lift_comment_rating=4) ] - [ [? Critical, fixing now](https://www.sonatype.com/lift-comment-rating?comment=319134780&lift_comment_rating=5) ]",    private String enabledOtlpRules;,1
"""for"" loop stop conditions should be invariant",Refactor the code in order to not assign to this loop counter from within the loop body.,Minor: we discourage using the return value of `++` expressions because it is error prone and makes code harder to read. Could you move the increment to a separate line?,        ColumnVector vector = isConstantField[c] ? null : columnVectors[vectorIndex++];,0
Null pointers should not be dereferenced,"""NullPointerException"" will be thrown when invoking method ""applyEqDelete()"".",I would probably try to extract out the logic for choosing which row mapping to use from SimpleName and do it here instead so it's simpler to read.,"      applyEqDelete(batch, rowIdMapping == null ? null : rowIdMapping.first(), eqDeleteRowIdMapping);",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,You can do distinctTable.getDataSchema() and that should have both column names and types. ,    // TODO: there's no way currently to get the data types of the distinct columns,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Better to `TriBuiltinService`?,public class TriService {,0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,We can re-use `HoodieAvroUtils.rewriteRecordWithNewSchema`,  private GenericRecord removeCommitMetadata(GenericRecord record) {,0
Using slow regular expressions is security-sensitive,"Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.",Does the `-` in the `[-_a-zA-Z0-9]` not need to be escaped?,"        runningPattern2 = Pattern.compile(""(?:\\[[a-zA-Z]+\\])?\\s*---\\smaven-surefire-plugin:\\d+(?:.\\d+)+[-_a-zA-Z0-9]*:test\\s.*"", Pattern.DOTALL);",0
"""entrySet()"" should be iterated when both the key and value are needed","Iterate over the ""entrySet"" instead of the ""keySet"".","for (Map.Entry<String, Map<String, String>> entry : newMapping.entrySet()) {
  idealState.setInstanceStateMap(entry.getKey(), entry.getValue());
}",      for (String segmentId : newMapping.keySet()) {,1
"""private"" methods called only by inner classes should be moved to those classes","Move this method into ""ViewHandler"".",shouldn't we call this from within isLocalViewBehind(). already we have timline there right. we don't need to re-instantiate the timeline again in L507.,"  private boolean shouldThrowExceptionIfLocalViewBehind(HoodieTimeline localTimeline, String lastInstantTs) {",1
"Fields in non-serializable classes should not be ""transient""","Remove the ""transient"" modifier from this field.",use 1.7 type inference in generics,      public transient ProxyInputPort<Integer> moduleInput = new ProxyInputPort<Integer>();,0
"Unused ""private"" fields should be removed","Remove this unused ""LOG"" private field.",unused import?,  private static final Logger LOG = LogManager.getLogger(ParquetReaderIterator.class);,1
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,Should this also be templated on the `ResponseStatus` type?,public interface ResponseHandler<RP> {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,`No need to scan values when filtering with sorted index`,    // TODO: explain return 0.,0
Field names should comply with a naming convention,"Rename this field ""_nonMatchingValues"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Use `Set<ByteArray>`,    final Set<String> _nonMatchingValues;,0
Static non-final field names should comply with a naming convention,"Rename this field ""TEXT_INDEX_DEFAULT_RAW_VALUE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Does it make sense to use a single character for this? This value is never used in processing, so it is a pure memory overhead, right?","  public static String TEXT_INDEX_DEFAULT_RAW_VALUE = ""null"";",0
"""public static"" fields should be constant","Make this ""public static database2Measurement2TagOrders"" field final",getter / setter,"  public static Map<String, Map<String, Map<String, Integer>>> database2Measurement2TagOrders =",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,todo mybe used by english,        // TODO: 2022/3/16 暂定为path路径，后面可以通过页面配置中设置key,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Is this provided in the 3.x too? With the same config name?,public class MongoPluginConfig {,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""jdkPath"".",Strange. Why do we need classpath of the IDE? Things like `org-openide-util.jar` & co.?,"                ClassPath jdkPath = ClassPathSupport.createClassPath(System.getProperty(""java.class.path""));",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Good comment and the todo marker above should call attention of devs working with this format in case of a bug/issue related to this code :+1: ,        //todo: Do we want to give the user control over which types have priority?,1
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,Great that the backward compatibility is considered :),public abstract class AbstractUserDefinedMetricsReporter extends CustomizableMetricsReporter {,0
"Boxed ""Boolean"" should be avoided in boolean expressions",Use the primitive boolean expression here.,Is there any bug if you change it?,"      boolean isAligned = isAlignedList.get(entry.getValue().get(0));
ForEachStmt       for (int index : entry.getValue()) {
IfStmt         if (isAlignedList.get(index) != isAligned) {",1
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,nit: seems possible to name more precisely - maybe `initializeCoreMetadataTags` or `initBaseEventTags`?,"  public static List<? extends Tag<?>> addAdditionalMetadataTags(Properties jobProps,",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,So using batch now will make the statistic incorrect? I think you should warn the user in the config or somewhere else.,    // TODO monitor: update statistics,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""3.141592653589793238462643383279"" 6 times.","You have suffix `D` here but not in `testDouble()`. I think with or without is fine, but it should be consistent.","    assertEquals(3.141592653589793D, strategy.readNumber(fromString(""3.141592653589793238462643383279"")));",0
Unnecessary imports should be removed,Remove this unused import 'org.apache.log4j.Layout'.,Nit: is this still needed?,import org.apache.log4j.Layout;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""test1"" 5 times.","""http"" replace to pcTypeEnum.HTTP.getName()","        list.add(URIRegisterDTO.builder().appName(""test1"").rpcType(""http"").host(""localhost"").port(8090).build());",0
"Non-primitive fields should not be ""volatile""","Use a thread-safe type; adding ""volatile"" is not enough to make this field thread-safe.",why volatile? this seems like a bug,  private volatile ThreadLocal<PrincipalAuthContext> principalAuthContextThreadLocal;,1
Unused assignments should be removed,"Remove this useless assignment to local variable ""!unknown!"".",rename it to `jobInQueueTimeMs`,              long jobInQueueTime = jobContext.getStartTime();,0
Conditionally executed code should be reachable,"Change this condition so that it does not always evaluate to ""false""","This test is redundant since the str.length() call above would through the NullPointerException, but there's no need to fix it here since it will be replaced by the StreamEncoder call.",            if (str == null) {,1
"Track uses of ""FIXME"" tags",Take the required action to fix the issue indicated by this comment.,Why FIXME?,      segmentGeneratorConfig.setReaderConfig(new CSVRecordReaderConfig()); // FIXME,1
Methods should not return constants,Remove this method and declare a constant for this value.,Why underscores?,"    return ""_elem"";",0
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,I like the idea of adding `DEPRECATED_` prefix to the ones that are about to deprecated in the next release. Maybe we should do that in this PR as well.,"    public static final String RETENTION_MANAGER_FREQUENCY_IN_SECONDS = ""controller.retention.frequencyInSeconds"";",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Filed a separate issue for this: https://github.com/apache/iceberg/issues/3169,    // TODO: support ORC rolling writers,1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",Modify the comment of this class,"public abstract class Policy implements Writable, GsonPostProcessable {",0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,"ClusterSchemaInfo is much like a class name and looks like IoTDB names file by camel naming pattern. How about use ""cluster_schema.bin"" as the file name.","  private final String snapshotFileName = ""ClusterSchemaInfo.st"";",0
Raw types should not be used,Provide the parametrized type for this generic.,"How about making this a `List<Column>` and then get rid of the raw types in 792, 813, 828, 843 and 857?",    private boolean checkColumns(List columns)  throws SQLException {,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""table"" 3 times.","Looks like this efficient search with `contains()` is the reason behind using `Set` instead of `List`.
Btw, `(TableName)` is redundant cast here.","          !tableList.contains(((TableName) txn.get(""table"")).toString())) {",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Please remove these codes if they are useless.,//    String[] descArray = descPrefix.fullPath.split(TsFileConstant.PATH_SEPARATER_NO_REGEX);,1
Local variables should not shadow class fields,"Rename ""inputFiles"" which hides the field declared at line 299.","Nit: Some implementations won't want to do batch operations and thus will only call the iterator and decrypt each file individually. In those cases there's no use to storing a second list via the `Collectors.toList()` above.

Instead, why not pass `encryptionManager#decrypt` an anonymous function that generates the iterator from the stream?

Iterable<InputFIle> inputFiles = encryptionManager.decrypt(
    () -> task.files().stream().map(...).iterator())

Leave it up to the implementation if they want to convert the Iterable into a collection to operate on as a batch, or the implementation can stream through the values and decrypt individually.",      Iterable<InputFile> inputFiles = encryptionManager.decrypt(inputFileIterator);,0
Unused local variables should be removed,"Remove this unused ""type1"" local variable.","Need this check? (Here is within the `if (prop.getAssignmentCount() > 0)` block and `type1` is not used.)
If need it, should write like this?java
if (!prop.getAssignments().isEmpty()) {
...
}
",                                            for (TypeUsage type1 : prop.getAssignments()) {,1
Raw types should not be used,Provide the parametrized type for this generic.,"Better to use `Class<?> klazz` and above.
","  public Instrumented(State state, Class klazz) {",1
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,Please use `Connection connection = EnvFactory.getEnv().getConnection();` instead.,"                Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");",1
Raw types should not be used,Provide the parametrized type for this generic.,Directly put the value instead of calling `extractTimeValue()`. We can handle general comparable values,            Comparable timestamp = IngestionUtils.extractTimeValueIfPossible((Comparable) timeValue);,1
"Unused ""private"" fields should be removed","Remove this unused ""period"" private field.",Comments are required in here too.,    private Integer period;,0
Double Brace Initialization should not be used,Use another way to initialize this instance.,(nit) Put it below the `LESS_THAN_OR_EQUAL` since they are of the same category and return BOOLEAN values?,"          put(canonicalize(TransformFunctionType.IN.getName().toLowerCase()), InTransformFunction.class);",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Server "" 5 times.","How about
""Server "" + firstServer + "" is either offline or it does not exist.""","        throw new ConstraintException(""Server "" + firstServer + "" does not exist or offline."");",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,Comments,        public static class Kafka {,0
"Unused ""private"" fields should be removed","Remove this unused ""logger"" private field.","Unexpected logger,",    private static final Logger logger = LoggerFactory.getLogger(JVMSourceDispatcher.class);,1
"""public static"" fields should be constant","Make this ""public static TIME_BUCKETS"" field final",Where are these variables being used?,"  public static String TIME_BUCKETS = ""timeBuckets"";",0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,would all existing payloads be forced to implement this new constructor?,"  public HoodieMetadataPayload(GenericRecord record, Comparable<?> orderingVal) {",0
Raw types should not be used,Provide the parametrized type for this generic.,why add this snippet?,    List measurementList = Arrays.asList(this.measurements);,0
Raw types should not be used,Provide the parametrized type for this generic.,"    private String formatEndPointName(String pathString, String requstMethod, Map openapiData) {
        String endPointNameFormat = (String) openapiData.get(""x-sw-endpoint-name-format"");","    private String formatEndPointName(String pathString, String requstMathod, Map openapiData) {
ExpressionStmt         String endPointNameFormat = (String) openapiData.get(""x-sw-endpoint-name-format"");",0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","I still have performance concerns for these naming match. You should set a explicit instrumentation for get parameter, rather than using string match.
Instrumentation name match filter happens in startup amd class loading stage.",    public static final Set<String> PS_SETTERS = new HashSet<String>(Arrays.asList(,0
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,`private`?,"  protected static Map<? extends Number, Long> getValueMap(GroupByResultHolder groupByResultHolder, int groupKey,",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""iceberg.hadoop"" 3 times.",Doesn't overwrite discard all keys? I don't think it matters now because it isn't needed anymore.,"        .filter(key -> overwrite || baseConf.get(key.replaceFirst(""iceberg.hadoop"", """")) == null)",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Don't need to declare throws RuntimeException.,"  public void onMRTaskComplete (boolean isSuccess, Throwable throwable) throws RuntimeException {",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,"Obviously, this can't be merged with these comments","//    Map<PrimaryKey, GenericRow> replacement;",1
"Unused ""private"" methods should be removed","Remove this unused private ""chainCacheStartException"" method.",Not used,    private static <T> IgniteInternalFuture<T> chainCacheStartException(IgniteInternalFuture<T> cacheStartFut) {,1
"""@Deprecated"" code should not be used","Remove this use of ""newInstance""; it is deprecated.","Minor comment, but if you want to split the `return` line into multiple lines, then you can move the `String dataWriterBuilderClassName = ...` declaration outside of the try, catch block.
",      return (DataWriterBuilder) Class.forName(dataWriterBuilderClassName).newInstance();,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""!unknown!"".","these two lines should go into finally. even if task fails for whatever reason, it is time spent, and we should count it.",                long timeSpentInMillis = System.currentTimeMillis() - startTimeMillis;,0
Field names should comply with a naming convention,"Rename this field ""_upsertComparisonColumn"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",(nit) Move it before `_partitionUpsertMetadataManager`,    private String _upsertComparisonColumn;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Timeout of "" 4 times.",same here,"        throw new TimeoutException(""Timeout of "" + timeout + "" sec reached. Aborting"");",0
"Public constants and fields initialized at declaration should be ""static final"" rather than merely ""final""",Make this final field static too.,Need `static` if we use CAPITAL letters,  private final int DEFAULT_BUFFER_SIZE = 2048 * 10;,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,ditto,"        // return Objects.hash(orderedShuffledColumns, shuffleType, tableId, partitionIds,
ReturnStmt         //         equivalenceExprIds, exprIdToEquivalenceSet);",0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",No need to include empty `public` constructors.,  public IcebergWritable() {},1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Please add link to https://issues.apache.org/jira/browse/IGNITE-16350, for example",        IgniteLongList locked = null; // TODO may be unlock right away and do not keep all these pages locked?,1
Collection.isEmpty() should be used to test for emptiness,Use isEmpty() to check whether the collection is empty or not.,`if (executeList.size() > 0) {` can be removed.,"    if (executeList.size() > 0) {
ForStmt       for (int j = 0; j < executeList.size(); j++) {",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Can we annotate it with `@Deprecated` so as to prevent new usage of the method? 
I suspect there are no alternative methods at this point, so you can specify exactly what conditions this method must be used (e.g. testing backward compat, like you have already done) perhaps with an `@note` annotation.",     * TODO: This is deprecated in favor of addDateTime().,0
Local variables should not shadow class fields,"Rename ""grp"" which hides the field declared at line 164.",` new AlwaysTruePredicate<>()` -> `F.alwaysTrue()`,        return cacheDataStores(grp -> new AlwaysTruePredicate<>());,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"this interface assumes T is self-describing (like thrift, avro, json) but it fails for format like csv, tsv etc where we get a comma separated line. This means it needs an init method :(. ","  abstract public GenericRow extract(Schema schema, T from, GenericRow to);",0
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,Is RowDataReader only for FileScanTask?  We should just provide the parameter to BaseDataReader right?,"class RowDataReader<CST extends ContentScanTask<?>, G extends ScanTaskGroup<CST>>",0
Raw types should not be used,Provide the parametrized type for this generic.,It’s better not to use raw types even if you make it a wildcard because it causes IDE warnings.,  private Class _channelClass;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""seconds"" 5 times.",I don't think offsets are in seconds :),"  HIGHEST_KAFKA_OFFSET_CONSUMED(""seconds"", false),",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Namespace does not exist: %s"" 8 times.","This is duplicated in a few places and can be refactored into a helper method, `validateNamespace`.","      throw new NoSuchNamespaceException(""Namespace does not exist: %s"", namespace);",1
Local variables should not shadow class fields,"Rename ""props"" which hides the field declared at line 117.","where is props[1], props[2]....? Why do you change it to String[] ?","        final String[] props = {""""};",0
Throwable and Error should not be caught,Catch Exception instead of Error.,"Perhaps this should be catching AssertionError more specifically, rather than Error in general, giving other kinds of Error the old behavior. Though I'm fine with either approach.",        } catch (RuntimeException | Error ex) {,1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,TODO ？,    // TODO: active node status,1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"Capital letter and underline is better in Enum.

Same as ConfigNodeRequestType.","  stopDataNode,",1
"Unused ""private"" methods should be removed","Remove this unused private ""quietStop"" method.",This method does nothing. I suggest this method cloud be remove,    private void quietStop() {,1
Using slow regular expressions is security-sensitive,"Make sure the regex used here, which is vulnerable to polynomial runtime due to backtracking, cannot lead to denial of service.",... what does this other thing you do with .sig here?,"        File src = new File(mockSrc.getParentFile(), mockSrc.getName().replaceFirst(""([$].+)*[.]sig$"", "".java""));",0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.","public RestApiServiceImpl() throws QueryProcessException {
    this.authorizationHandler = new AuthorizationHandler(serviceProvider);
}","  public RestApiServiceImpl() throws QueryProcessException {}
InitializerDeclaration   {
ExpressionStmt     this.authorizationHandler = new AuthorizationHandler(serviceProvider);
MethodDeclaration   }",0
Raw types should not be used,Provide the parametrized type for this generic.,"    if (pageReaders instanceof LinkedList) {
      Iterator it = ((LinkedList<IPageReader>) pageReaders).descendingIterator();
    } else {
      // for singleton list
      Iterator it = pageReaders.iterator();
    }",    Iterator it = ((LinkedList<IPageReader>) pageReaders).descendingIterator();,0
Unnecessary imports should be removed,Remove this unused import 'software.amazon.awssdk.services.glue.model.Schedule'.,unused dependency,import software.amazon.awssdk.services.glue.model.Schedule;,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""AssertionError (GSON "" 3 times.",why are you changing these?,"      throw new AssertionError(""AssertionError (GSON "" + GsonBuildConfig.VERSION + ""): "" + e.getMessage());",0
"Return of boolean expressions should not be wrapped into an ""if-then-else"" statement",Replace this if-then-else statement by a single method invocation.,"nit: slightly simpler representation:

boolean isPrimary = (vcard.getAltId() == null);
fieldMetadata.setPrimary(isPrimary);",    if (vCardName.getAltId() == null) {,1
Raw types should not be used,Provide the parametrized type for this generic.,Rename the variable,    private final Comparable _timestamp;,0
Boolean expressions should not be gratuitous,"Remove this expression which always evaluates to ""true""",can probably just return here right?,"                    result = participantForPath(client, iter.next(), true);",1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",TBD?,    protected void onSingleMessage(InputStream in) throws Exception {,1
"""ThreadLocal"" variables should be cleaned up when no longer used","Call ""remove()"" on ""curSecCtx"".",It seems that we can just use `new ThreadLocal()` here since the default value is null.,    private final ThreadLocal<SecurityContext> curSecCtx = ThreadLocal.withInitial(() -> null);,0
Double Brace Initialization should not be used,Use another way to initialize this instance.,"Use ImmutableMap.Builder in guava. In hbase we have a shaded guava, under the org.apache.hbase.thirdparty.com.google package. The current code will lead to a error prone warning.","    new HashMap<String, ServletConfig>() {",1
Nested blocks of code should not be left empty,Either remove or fill this block of code.,"We'd better not swallow the exception, at least, log a warning message to notify users that the Etcd connection is unstable or something",                } catch (Exception ee) {,0
Private fields only used as local variables in methods should become local variables,"Remove the ""_controllerLeaderHostPortNotUsed"" field and declare it as a local variable in the relevant methods.",Please remove this variable,  private volatile String _controllerLeaderHostPortNotUsed = null;,1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","Please use `Lists.newArrayList`.
",    List<Metric> metrics = new ArrayList<Metric>();,1
String literals should not be duplicated,Use already-defined constant 'MESSAGE' instead of duplicating its value here.,"I think this needs to validate that `jsonNode` is an object node, similar to checks in other parsers.","    String message = JsonUtil.getStringOrNull(""message"", jsonNode);",0
Unnecessary imports should be removed,Remove this unused import 'java.net.InetSocketAddress'.,"nit: both `InetAddress` and `InetSocketAddress` are no longer in use, imports can be removed.","import java.net.InetAddress;
ImportDeclaration import java.net.InetSocketAddress;",1
"Unused ""private"" methods should be removed","Remove this unused private ""strToPermissions"" method.",This method is not used?,"  private Set<Integer> strToPermissions(String[] authorizationList) throws AuthException {
ExpressionStmt     Set<Integer> result = new HashSet<>();
IfStmt     if (authorizationList == null) {
ReturnStmt       return result;
ForEachStmt     }
ForEachStmt     for (String s : authorizationList) {
ExpressionStmt       PrivilegeType[] types = PrivilegeType.values();
ExpressionStmt       boolean legal = false;
ForEachStmt       for (PrivilegeType privilegeType : types) {
IfStmt         if (s.equalsIgnoreCase(privilegeType.name())) {
ExpressionStmt           result.add(privilegeType.ordinal());
ExpressionStmt           legal = true;
BreakStmt           break;
IfStmt         }
IfStmt       }
IfStmt       if (!legal) {
ThrowStmt         throw new AuthException(""No such privilege "" + s);
ReturnStmt       }
ReturnStmt     }
ReturnStmt     return result;
MethodDeclaration   }",1
Class variable fields should not have public accessibility,Make spark_dpp_version a static final constant or non-public and provide accessors if needed.,"    @ConfField
    public static String spark_dpp_version = ""1_0_0"";

All config must has `@ConfField` annotation.","    public static String spark_dpp_version = ""1_0_0"";",0
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,getThriftClass,    public String get_thriftClass() {,1
Unnecessary imports should be removed,Remove this unused import 'com.google.api.services.people.v1.model.Name'.,"Is this leftover from another PR, we can remove?",import com.google.api.services.people.v1.model.Name;,1
Unnecessary imports should be removed,Remove this unused import 'org.apache.hudi.common.util.StringUtils'.,can we revert unintended changes in this file. ,import org.apache.hudi.common.util.StringUtils;,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Failed to connect to config node."" 3 times.","        LOGGER.error(""Failed to execute set storage group {} in config node, status is {}."", statement.getStorageGroupPath(), tsStatus);
        future.setException(new StatementExecutionException(tsStatus));","        LOGGER.error(""Failed to connect to config node."");
CatchClause         future.setException(new MetadataException(""Failed to connect to config node.""));",0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"DataType -> DATATYPE
Encoding -> ENCODING","  public static final String COLUMN_TIMESERIES_Encoding = ""encoding"";",1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,It's better to change these to Logger.error() level.,"        System.out.println(""[ERROR] Sql statement can not be closed ! "" + e.getMessage());",1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,if it is not appropriate let's remove this line,"        //log.warn(""There's no topic.name property being set in workunt which could be an illegal state"");",1
Field names should comply with a naming convention,"Rename this field ""_brokerRequestSendException"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Make it volatile? (Although it is always set and read by the same thread),  private Exception _brokerRequestSendException;,0
Unused assignments should be removed,"Remove this useless assignment to local variable ""!unknown!"".",The following logic is a bit more complex than I'd like it to be. Somehow I find the [lsp version](https://github.com/apache/netbeans/blob/071012fd3528ffb1d2966ed0405919e6a8c900b9/enterprise/micronaut/src/org/netbeans/modules/micronaut/completion/MicronautDataCompletionCollector.java) simpler. I don't get why the NetBeans version has to be so verbose while the VSCode version fits into seven lines of code.,                                try {,0
Field names should comply with a naming convention,"Rename this field ""WRONG_TYPE_MESSAGE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Remove it :D,  private final String WRONG_TYPE_MESSAGE =,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Commented code,"//            if (objTask.getValue().isEmpty()) {
MethodDeclaration //                // Just save or totally remove obsolescence info, no additional operations needed.
MethodDeclaration //                statProc.updateKeyAsync(true, tbl, objTask.getKey(), Collections.emptySet(), null);
MethodDeclaration //            }
MethodDeclaration //            else {
MethodDeclaration //                // Schedule full gathering.
MethodDeclaration //                GridCacheContext<?, ?> cctx = (tbl == null) ? null : tbl.cacheContext();
MethodDeclaration //
MethodDeclaration //                AffinityTopologyVersion topVer = null;
MethodDeclaration //
MethodDeclaration //                if (!cctx.gate().enterIfNotStopped())
MethodDeclaration //                    continue;
MethodDeclaration //
MethodDeclaration //                try {
MethodDeclaration //                    topVer = cctx.affinity().affinityTopologyVersion();
MethodDeclaration //                    cctx.affinity().affinityReadyFuture(topVer).get();
MethodDeclaration //                }
MethodDeclaration //                catch (IgniteCheckedException e) {
MethodDeclaration //                    log.warning(""Unable to get topology ready."", e);
MethodDeclaration //                }
MethodDeclaration //                finally {
MethodDeclaration //                    cctx.gate().leave();
MethodDeclaration //                }
MethodDeclaration //
MethodDeclaration //                statProc.updateKeyAsync(true, tbl, objTask.getKey(), new HashSet<>(objTask.getValue()),
MethodDeclaration //                    topVer);
MethodDeclaration //
MethodDeclaration //            }",1
Deprecated elements should have both the annotation and the Javadoc tag,Add the missing @deprecated Javadoc tag.,Can we remove the method directly ?,  public static HoodieTableMetaClient createMetaClient(String basePath) {,0
Assignments should not be made from within sub-expressions,Extract the assignment out of this expression.,"Since this expression seems confusing, I'd recommend to make a comment note that the assignment is really meant :)","                            if (match = treesMatch(item.element, ld, false)) {",1
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,"can't this be `List<T>`? (git apparently hates generics)
",  protected abstract List<?> listRepresentation();,1
"Null checks should not be used with ""instanceof""","Remove this unnecessary null check; ""instanceof"" returns false for nulls.",You can use tree.getKind in place of instanceof,            if ((tree != null && tree instanceof JCTree.JCLambda) || (currentType != null && currentType.getKind().isPrimitive())) {,1
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)",private here and below,  volatile List<Buffer> _buffers = new ArrayList<Buffer>();,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Table["" 3 times.",How about throw DdlException? just like rollup job,"            Preconditions.checkNotNull(schemaChangeJobV2, ""Table["" + tableName + ""] is not under SCHEMA_CHANGE."");",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""alter_table"" 3 times.",I did kinda wonder if we should extract this to a package utility method ? But this seems fine with me if you want to go this route. It's only used in 2 places so I think this is fine,"  private static final DynMethods.UnboundMethod ALTER_TABLE = DynMethods.builder(""alter_table"")",0
Unused assignments should be removed,"Remove this useless assignment to local variable ""javaPath"".","I wonder what is the point of ""//""?

Anyway, a better way may be JavaPlatformManager.getDefaultPlatform().findTool(""java"").","        String javaPath = javaBinPath.getAbsolutePath() + ""//java"";  //NOI18N",0
Asserts should not be used to check the parameters of a public method,Replace this assert with a proper check.,We can probably remove this assert because I don't think it helps with readability or debugging,"      // docIds might not be all documents, so there is no guarantee there are null docs in the docIds.
AssertStmt       assert newLimit <= limit;",1
"""public static"" fields should be constant","Make this ""public static jetty_server_max_http_post_size"" field final","`jetty_server_max_http_post_size` is only for UploadAction, which is used for user to upload demo data from Web UI. So the file size should be small. I think the default 100MB is enough, otherwise, the user may upload large file to occupy the FE node's disk.",    @ConfField public static int jetty_server_max_http_post_size = 2 * 1024 * 1024 * 1024;,0
"Jump statements should not occur in ""finally"" blocks",Remove this return statement from this finally block.,"      if (isClosed) {
        return;
      }",      if (isClosed) return;,0
Static non-final field names should comply with a naming convention,"Rename this field ""EXCLUDE_HTTP_HEADERS"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","Use include, rather than exclude.","            public static List<String> EXCLUDE_HTTP_HEADERS = Arrays.asList(""cookie"");",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,"Please remove this comment. We can discuss whether (and how to) remove table names from segment metadata when the design is finalized for multiple tables with same data.
thanks.",  // TODO: deprecate table name from segment metadata,1
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"I suggest we add some comments here, to say that decrementAndGet still work even if the highest bit is 1, which means we are decrementing a negative value. I was confused at first but then I realized that the arithmetic is the same for positive and negative value.",    if (reference.decrementAndGet() == 0) {,1
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.","for these empty `onCommit` method, would we define a default method `onCommit(String lastCkpStr)`?",  public void onCommit(String lastCkptStr) {,1
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,    private long makePackedDatetime() {,    private long make_packed_datetime () {,0
Hard-coded credentials are security-sensitive,Remove this hard-coded password.,Use `Connection connection = EnvFactory.getEnv().getConnection();` instead.,"                Config.IOTDB_URL_PREFIX + ""127.0.0.1:6667/"", ""root"", ""root"");",1
"Unused ""private"" methods should be removed","Remove this unused private ""createHMSClient"" method.",Is this used anywhere?,  private IMetaStoreClient createHMSClient(HiveConf conf) throws MetaException {,1
Static non-final field names should comply with a naming convention,"Rename this field ""SPECIFIED_CONFIG_PATH"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Why use `sw.` as prefix? All other settings are using `#ENV_KEY_PREFIX` as prefix. Could you make this consistent?,"    private static String SPECIFIED_CONFIG_PATH = ""sw.specified_config_path"";",0
Unused local variables should be removed,"Remove this unused ""yamlConfigMap"" local variable.","Looks like this yamlConfig is loaded and thrown away immediately. It should be fine to let the client code to do validate yaml syntax, cause it has to load the yaml anyways. ","      Map<String, Object> yamlConfigMap = (Map<String, Object>) YAML.load(yamlConfig);",0
Empty statements should be removed,Remove this empty statement.,remove,        ;,1
Constants should not be defined in interfaces,Move constants defined in this interfaces to another class or enum.,format,"    String NATIVE_STUB= ""nativestub"";",0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,"Remove the ""_"" prefix",    PropertiesConfiguration _segmentMetadataPropertiesConfiguration = new PropertiesConfiguration();,1
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""lastChunkPoint"" is nullable here.",this may produce NullPointerException,"          lastChunkPoint.getTimestamp(), lastVersion)) {",1
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,`System.err` see other locations,                System.err.println(r.as(File.class));,0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,should we really need set the class to `public` just for testing?,  public static class Config {,0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,could you remove the print line? ,          System.out.println(verticaUser);,1
Field names should comply with a naming convention,"Rename this field ""DOUBLE"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.","  private static final String DOUBLE = ""Double"";","  private final String DOUBLE = ""Double"";",0
Unused assignments should be removed,"Remove this useless assignment to local variable ""empty"".","`getDeclaredMethods` doesn't include the inherited methods, right?",                        .getDeclaredMethods(),0
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""cc"" parameter (sonar.java.source not set. Assuming 8 or greater.)",Should deferredGuard be set to 2 here?,"                            js.runWhenScanFinished((cc) -> drainDeferred(), true);",0
All branches in a conditional structure should not have exactly the same implementation,Remove this conditional structure or edit its code blocks so that they're not all the same.,"            if (this.exportColumns !=null && this.exportColumns.contains(colName)) {

",            if (!this.exportColumns.isEmpty() && this.exportColumns.contains(colName)) {,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,Same here.,"      throw new RuntimeException(""Caught exception while initializing PinotFSFactory"", e);",0
Delivering code in production with debug features activated is security-sensitive,Make sure this debug feature is deactivated before delivering the code in production.,Should throw exception.,            e.printStackTrace();,0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,ArrayList,    Vector<String> data_types = new Vector<>();,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,typo `with`,  // TODO: Replace this map whit new SchemaPartition,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""file_path"" 6 times.","I think this covers most cases, but probably will still have an issue for the odd Authority issues. Like if I have the table where my metadata entries have one authority or no authority, and my new files list doesn't. This is probably still as close as we can get without actually resolving everything I think ....","            Lists.transform(files, f -> f.path().toString()), Encoders.STRING()).toDF(""file_path"");",0
Unused assignments should be removed,"Remove this useless assignment to local variable ""depth"".","Put depth in a ControllerDepth class, and polish the codes.","            ContextManager.getRuntimeContext().put(CONTROLLER_METHOD_STACK_DEPTH, depth++);",0
Methods should not be empty,"Add a nested comment explaining why this method is empty, throw an UnsupportedOperationException or complete the implementation.",Throw unsupported exception because this method should not be invoked for the provider in production.,  public void restart(){,0
"Track uses of ""FIXME"" tags",Take the required action to fix the issue indicated by this comment.,create an  issue for this and add the issue number here?,      // FIXME: figure out how to get table config here.,1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",java docs would be nice. ,public abstract class AsyncClusteringService extends HoodieAsyncService {,0
Empty arrays and collections should be returned instead of null,Return an empty collection instead of null.,the same,    return null;,0
"""Collections.EMPTY_LIST"", ""EMPTY_MAP"", and ""EMPTY_SET"" should not be used","Replace ""Collections.EMPTY_MAP"" by ""Collections.emptyMap()"".","Why remove IF but using the EMPTY MAP? 
No matter what is the reason, the title of PR doesn't match what you are doing. Please fix.",            Collections.EMPTY_MAP,0
"""@Deprecated"" code should not be used","Remove this use of ""cacheProcessor""; it is deprecated.",`cacheProcessor.context().kernalContext().performanceStatistics()` let's cache this into instance variable,        if (cacheProcessor.context().kernalContext().performanceStatistics().enabled()) {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Probably more like TODO: Rethrow as IOException and propagate to callers,      // TODO: is this the right thing to do?,1
Overriding methods should do more than simply call the same method in the super class,Remove this method to simply inherit it.,"Please remove the setUp() method entirely.
Also, please remove the declaration of Options.enableSegmentedHeaders() since it is no longer used.
",  protected void setUp() throws IOException {,1
Generic wildcard types should not be used in return types,Remove usage of generic wildcard type.,"I think this would be the first time a Guava type was exposed through the public API - is it worth considering something more generic such as `Map<TypeLiteral<?>, List<InjectionPoint>>` to avoid leaking implementation concerns?","  ListMultimap<TypeLiteral<?>, InjectionPoint> getAllMembersInjectorInjectionPoints();",1
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,"Would it make more sense if you move `this.record = createPurgeableHivePartitionDataset(state)` when calling this method for the first time, instead of doing it in the constructor? Since if something wrong happens and `readRecord` never gets called, it is wasteful to call `createPurgeableHivePartitionDataset` in the constructor.",  public PurgeableHivePartitionDataset readRecord(PurgeableHivePartitionDataset record),0
Static non-final field names should comply with a naming convention,"Rename this field ""PARALLELS_THREAD_COUNT"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",`PARALLELS_THREAD_COUNT` -> `MAX_PARALLEL`,        public static int PARALLELS_THREAD_COUNT = 5;,1
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,"  private static final String ALIGNED_NAME = ""use the aligned interface"";","  private static final String ALIGNED_Name = ""use the aligned interface"";",0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,pls remove,"//      asyncResponse.resume(uploadSegmentInternal(multiPart, null, enableParallelPushProtection, headers, request, false));",1
Anonymous inner classes containing only one method should become lambdas,Make this anonymous inner class a lambda (sonar.java.source not set. Assuming 8 or greater.),It would be better to shut down this scheduled service when the server closed.,        this.diskCheckScheduledExecutorService.scheduleAtFixedRate(new Runnable() {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""18init_zero_not_nullIN9doris_udf9BigIntValEEEvPNS2_15FunctionContextEPT_"" 5 times.",changed?,"                    prefix + ""18init_zero_not_nullIN9doris_udf9BigIntValEEEvPNS2_15FunctionContextEPT_"",",1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Catching an Exception which is RTE and wrapping it again in RTE and throwing it ? 
No need to catch this in the first place.
",      throw new RuntimeException(e);,1
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,Please keep current return type.,"  public Map<String, String> getSegmentToCrcMapDeprecated(",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Please include the original exception here. Also, might be better to throw a `DataConversionException`.",      throw new RuntimeException();,1
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,better to implement it,    //throw new SQLException(METHOD_NOT_SUPPORTED_STRING);,1
Parentheses should be removed from a single lambda input parameter when its type is inferred,"Remove the parentheses around the ""r"" parameter (sonar.java.source not set. Assuming 8 or greater.)",I think this anonymous variable `r` should be changed to `response` for readability,        return putMessageResult.thenApply((r) -> {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""${foo}"" 6 times.","Given the feature is gone, we can probably remove this test as it’s covered elsewhere","        assertEquals(""${foo}"", sb.toString(), ""Unexpected result"");",0
Unnecessary imports should be removed,Remove this unused import 'java.util.Enumeration'.,Are these import changes still needed?,import java.util.Enumeration;,1
"Unused ""private"" fields should be removed","Remove this unused ""duration"" private field.","There is no need to use `AtomicXXXX`, primitives should be enough?","        private AtomicReference<Integer> sampleRate;
FieldDeclaration         private AtomicReference<Integer> duration;",1
Private fields only used as local variables in methods should become local variables,"Remove the ""_leftTransformFunction"" field and declare it as a local variable in the relevant methods.","`_leftTransformFunction`, `_dataSourceMap` and `_nullValueVectorReader` can be changed to local variable. Also, suggest renaming `_leftTransformFunction` as there is only one single argument","  private TransformFunction _leftTransformFunction;
FieldDeclaration   private int[] _results;
FieldDeclaration   private Map<String, DataSource> _dataSourceMap = new HashMap<>();
FieldDeclaration   private PeekableIntIterator _nullValueVectorIterator;
FieldDeclaration   private NullValueVectorReader _nullValueVectorReader;",1
"Classes from ""sun.*"" packages should not be used",Use classes from the Java API instead of Sun classes.,"Is this a useless import? Please check, remove it if it's useless.",import com.sun.org.apache.xerces.internal.impl.xs.util.XSInputSource;,0
Field names should comply with a naming convention,"Rename this field ""_timestamp"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Rename the variable,  private final Comparable _timestamp;,1
Strings should not be concatenated using '+' in a loop,Use a StringBuilder instead.,Better to replace '.' with Constant.PATH_SEPARATOR,      storageGroupName += '.' + nodeNames[i];,0
"Collapsible ""if"" statements should be merged",Merge this if statement with the enclosing one.,"Is there any possibility that msg is NULL?
",                    if (RemotingUtil.socketAddress2String(msg.getStoreHost()).equals(addr)) {,1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""request.start"" 3 times.","What do you use `RuntimeContext`? This API is just designed for particular cases, please explain the reason.","        ContextManager.getRuntimeContext().put(""request.start"", Long.valueOf(System.currentTimeMillis()));",0
Empty statements should be removed,Remove this empty statement.,remove,        ;,1
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,why is this a string? can we have a typed return value,  String getDimensionFilters(String dataset) throws Exception;,0
Constant names should comply with a naming convention,Rename this constant name to match the regular expression '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.,Let's name it `Null` for clarity,    Missing(100);,1
Deprecated code should be removed,Do not forget to remove this deprecated code someday.,Remove it,    private long versionHash = 0L;,1
Methods should not have too many parameters,"Constructor has 11 parameters, which is greater than 7 authorized.",(minor) Shall we put `idealStatePath` in front of `externalViewPath` to be consistent with the order of `lastUpdateVersion`?,"    RoutingEntry(String tableNameWithType, String externalViewPath, String idealStatePath,",0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,"These names need to be more clear. Are they defaults? If so,
DEFAULT_NUM_ENTRIES_IN_FILTER_THRESHOLD
DEFAULT_CARDINALITY_THRESHOLD
DEFAULT_NUM_QUERIES_THRESHOLD

It would be good to proof read through all this PR and think about the variable names once more",  public final static long NO_IN_FILTER_THRESHOLD = 0;,0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,The test is not suitable for the change. I reverted the change and ran the test. The test still succeeded.,    public void testOurPathDeletedOnReconnect() throws Exception,0
Null pointers should not be dereferenced,"A ""NullPointerException"" could be thrown; ""column"" is nullable here.","if index is DUPLICATED, but column type is float or double, we should also forbid the delete operation.",                if (indexMeta.getKeysType() != KeysType.DUP_KEYS && !column.isKey()) {,0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,Are v2 references committed in Spark?,    // TODO: handle dots correctly via v2references,0
Local variable and method parameter names should comply with a naming convention,Rename this local variable to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,  public Integer getLeadershipCountByDatanode(int dataNodeId) {,  public Integer getLeadershipCountByDatanode(int DataNodeId) {,1
Field names should comply with a naming convention,"Rename this field ""_headers"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",private,"  Map<String, String> _headers = new HashMap<>();
FieldDeclaration   String _scheme = CommonConstants.HTTP_PROTOCOL;
FieldDeclaration   SSLContext _sslContext = null;",0
Standard outputs should not be used directly to log anything,Replace this use of System.out or System.err by a logger.,Replace to logger.error();,"        System.out.println(""Error with column type: "" + firstRow[counter].getClass().getSimpleName());",1
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""18init_zero_not_nullIN9doris_udf9BigIntValEEEvPNS2_15FunctionContextEPT_"" 5 times.",changed?,"                prefix + ""18init_zero_not_nullIN9doris_udf9BigIntValEEEvPNS2_15FunctionContextEPT_"",",0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""Error happened while getting {} size"" 6 times.",?,"      logger.error(""Error happened while getting {} size"", filePath);",0
Raw types should not be used,Provide the parametrized type for this generic.,"Sorry, but I don't think we should have a method like this in the API. That is not bringing any real value to the clients, and the use is (hopefully) transient anyway.

My recommendation is to isolate the reflection into the TreeShims, providing ""high-level"" methods (like getExpressions(Tree), enforcing that the Tree is a SwitchExpressionTree). With:
https://github.com/apache/incubator-netbeans/pull/1074

The only copy of TreeShims is in java.source.base, and the methods can be reused by java.hints and java.completion (and if needed by any other module).
","    public static Object invokeMethod(String className, String methodName, List<Class> parameterTypes, Object obj, Object... paramArgs) {",0
Null pointers should not be dereferenced,"""NullPointerException"" will be thrown when invoking method ""parseBasicFunctionOperator()"".","If path = null, can we throw a self-defined exception instead of NullPointer exception?",      Path path = null;,1
"""switch"" statements should have ""default"" clauses",Add a default case to this switch.,"Please handle exception here, or switch on String instead of AggregationFunctionType",        switch (AggregationFunctionType.valueOf(aggregationInfo.getAggregationType().toUpperCase())) {,0
Raw types should not be used,Provide the parametrized type for this generic.,The alternative might be to use `Node` instead of `javax.swing.AbstractListModel` and expose the hierarchy from Project UI API module rather than copying the code.,"public final class BrokenReferencesModel extends AbstractListModel implements PropertyChangeListener, ChangeListener {",0
Generic exceptions should never be thrown,Define and throw a dedicated exception instead of using a generic one.,"Can we put a default implementation here so that not all subclasses need to implement this interface? 

Define it like this here, and only overrides it in Jira alerter. So that no changes is needed for other alerters.
  public void destroy() {
    // do nothing
  }

",  public abstract void destroy() throws Exception;,0
Sections of code should not be commented out,This block of commented-out lines of code should be removed.,Don't leave commented codes~,"    //    logger.info(
ExpressionStmt     //        ""There are DataNodes to be removed. size is: {}, detail: {}"",
ExpressionStmt     //        dataNodeLocations.size(),
ExpressionStmt     //        dataNodeLocations);",1
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,what will this comment do ?,    // TODO,1
"Constructors of an ""abstract"" class should not be declared ""public""","Change the visibility of this constructor to ""protected"".",public abstract class FlatMeasurementCollector<T> extends CollectorTraverser<T> {,public abstract class MeasurementFlatCollector<T> extends CollectorTraverser<T> {,0
Collection.isEmpty() should be used to test for emptiness,Use isEmpty() to check whether the collection is empty or not.,!isEmpty(),    if (segmentsToDelete.size() > 0) {,1
"Reflection should not be used to increase accessibility of classes, methods, or fields",This accessibility update should be removed.,The better way is to change the visibility in `ZipkinTraceService` rather than use reflect.,"        Field sdkTracerProviderField = ZipkinTraceService.class.getDeclaredField(""sdkTracerProvider"");
ExpressionStmt         Field openTelemetryField = ZipkinTraceService.class.getDeclaredField(""openTelemetry"");
ExpressionStmt         Field shutdownHookField = ZipkinTraceService.class.getDeclaredField(""shutdownHook"");
ExpressionStmt         sdkTracerProviderField.setAccessible(true);
ExpressionStmt         openTelemetryField.setAccessible(true);
ExpressionStmt         shutdownHookField.setAccessible(true);",0
Class variable fields should not have public accessibility,Make CYPHER_BODY_MAX_LENGTH a static final constant or non-public and provide accessors if needed.,All these are missing in the agent setup doc. No one would know how to use these unless reading source codes.,"            /**
FieldDeclaration              * If set to true, the parameters of the cypher would be collected.
FieldDeclaration              */
FieldDeclaration             public static boolean TRACE_CYPHER_PARAMETERS = false;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, SkyWalking won't save the entire parameters string into the tag, but only
FieldDeclaration              * the first {@code CYPHER_PARAMETERS_MAX_LENGTH} characters.
FieldDeclaration              * <p>
FieldDeclaration              * Set a negative number to save the complete parameter string to the tag.
FieldDeclaration              */
FieldDeclaration             public static int CYPHER_PARAMETERS_MAX_LENGTH = 512;
FieldDeclaration             /**
FieldDeclaration              * For the sake of performance, SkyWalking won't save the entire sql body into the tag, but only the first
FieldDeclaration              * {@code CYPHER_BODY_MAX_LENGTH} characters.
FieldDeclaration              * <p>
FieldDeclaration              * Set a negative number to save the complete sql body to the tag.
FieldDeclaration              */
FieldDeclaration             public static int CYPHER_BODY_MAX_LENGTH = 2048;",0
Field names should comply with a naming convention,"Rename this field ""_lastAccessTimestamp"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",should be volatile,  private long _lastAccessTimestamp;,0
Class variable fields should not have public accessibility,Make MAX_DUMP_STACK_DEPTH a static final constant or non-public and provide accessors if needed.,`MAX_DUMP_STACK_DEPTH` -> `DUMP_MAX_STACK_DEPTH`,        public static int MAX_DUMP_STACK_DEPTH = 500;,0
Field names should comply with a naming convention,"Rename this field ""TIMESTAMP_STR"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",This should be static?,"  private final String TIMESTAMP_STR = ""Time"";",0
Utility classes should not have public constructors,Add a private constructor to hide the implicit public one.,"yeah, its been a long due to fix the naming to factory :) thanks.",public final class SparkHoodieIndexFactory {,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""lsp-errors-valid-"" 3 times.",Are the keys invalidated e.g. after a modification ?,"                doc.putProperty(""lsp-errors-valid-"" + keyPrefix, id2Errors);",0
Type parameter names should comply with a naming convention,Rename this generic name to match the regular expression '^[A-Z][0-9]?$'.,Nit: Does it make sense to use `T extends ScanTask` instead of `ThisT`? So that the type of `ThisT` is more obvious here.,"abstract class BaseContentScanTask<ThisT, F extends ContentFile<F>>",0
Method names should comply with a naming convention,Rename this method name to match the regular expression '^[a-z][a-zA-Z0-9]*$'.,    private static DateTimeFormatterBuilder formatBuilder(String pattern) throws AnalysisException{,    private static DateTimeFormatterBuilder FormatBuilder(String pattern) throws AnalysisException{,1
Static non-final field names should comply with a naming convention,"Rename this field ""EXCLUDED_CLIENT_TRACING_PEERS"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",Do you forget to remove all these?,            public static List<String> EXCLUDED_CLIENT_TRACING_PEERS = new LinkedList<>();,0
Private fields only used as local variables in methods should become local variables,"Remove the ""functionName"" field and declare it as a local variable in the relevant methods.",Why is it class property? Looks like you are using it only in single function and you are always overriding its value. Make it local variable? ,"  private String functionName = ""Anonymous"";",1
"Unused ""private"" fields should be removed","Remove this unused ""eventType"" private field.",        private final EventType eventType;,        private EventType eventType;,0
Modifiers should be declared in the correct order,Reorder the modifiers to comply with the Java Language Specification.,Should use proper parameter names because it is not easy to understand what `arr` and `li` mean.,"        static private ExpressionTree buildTree(String arr[], int li, TransformationContext ctx) {",0
"The diamond operator (""<>"") should be used","Replace the type specification in this constructor call with the diamond operator (""<>""). (sonar.java.source not set. Assuming 7 or greater.)","Do we have to use this? Could we use DynamicField, which is safer and quicker? Does any object shared between this and  DefaultHttpClientInterceptor.",    static final ThreadLocal<String> RESOLVED_URL_CONTEXT = new ThreadLocal<String>();,1
Arrays should not be created for varargs parameters,Remove this array creation and simply pass the elements.,"It is extremely hard to review and maintain this style of tests.

Could you please add relevant `enum` classes instead of booleans (e.g. the ones that are located inside `TestJMESPathAssertion`)?

Here's an example: https://github.com/apache/jmeter/pull/497/files#diff-52c1ed26a7856184c8efaa2a12116a69R44-R50

Enum like that make test code much simpler to read, then it produce meaningful `toString` when debugging, and it produce meaningful error messages should the test fail.","                    { Boolean.FALSE, ""[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]"", ""[6:6]"", Boolean.TRUE, Boolean.FALSE,",0
Restricted Identifiers should not be used as Identifiers,Rename this variable to not match a restricted identifier.,why do we need this method who will invoke it. ,"  IntermediateRecord getIntermediateRecord(Key key, Record record) {",0
Double Brace Initialization should not be used,Use another way to initialize this instance.,Recommend making it private and test with the old class name in the test?,"  static final Map<String, String> PLUGINS_BACKWARD_COMPATIBLE_CLASS_NAME_MAP = new HashMap<String, String>(){",0
"Track uses of ""TODO"" tags",Complete the task associated to this TODO comment.,What's the fix here?,    // Calcite ScalarFunctionImpl doesn't allow customized named functions. TODO: fix me.,1
Raw types should not be used,Provide the parametrized type for this generic.,"Please take a look at the latest document, this should not be called `rules`. Rules are originally from the alarm rules, at here, this is `configurations`.","                Map rulesData = (Map) yamlData.get(""rules"");",0
Field names should comply with a naming convention,"Rename this field ""_dataBitSet"" to match the regular expression '^[a-z][a-zA-Z0-9]*$'.",You don't need to make this volatile and set it to null in close(). This issue has been addressed in #4764,  private volatile PinotDataBitSetV2 _dataBitSet;,0
Unused type parameters should be removed,K is not used in the class.,"Event type and event class name look like they reflect all types of the queries (SCAN, SQL, SQL_FIELDS, CONTINUOUS, TEXT), but, in fact, only SQL queries handled.

We should, either rename event id and class name or throw events for all types of queries.","public class QueryExecutionEvent<K, V> extends EventAdapter {",0
"Unused ""private"" fields should be removed","Remove this unused ""_numOrderByColsPreSorted"" private field.",Remove this unused variable,  private int _numOrderByColsPreSorted = 0;,1
Raw types should not be used,Provide the parametrized type for this generic.,                    List lineAnnotationsArray = (List) lineAnnotationsArrayField.get(getAnnotationsInstance());,                    List lineAnnotationsArray = (ArrayList) lineAnnotationsArrayField.get(getAnnotationsInstance());,0
String literals should not be duplicated,"Define a constant instead of duplicating this literal ""_.org.apache.*"" 4 times.","Are the logger names expected to be prefixed with _. now or is this just to isolate the test? Does anything change for the user (config, web service)? 
","    changes.put(""_.org.apache.*"", ""WARN"");",0
"""public static"" fields should be constant","Make this ""public static PATTERN"" field final",Default should be the pattern in the document.,"        public static String PATTERN = """";",0
"""BigDecimal(double)"" should not be used","Use ""BigDecimal.valueOf"" instead.",Add a final attribute MAX_BIG_DECIMAL. Do not `new` every time.,        if (result.compareTo(new BigDecimal(Double.MAX_VALUE)) > 0) {,0
Unary prefix operators should not be repeated,Remove multiple operator prefixes.,"        return ASTHelpers.canBeRemoved(methodSymbol, state);
(Javascript vibes :stuck_out_tongue:.)","        return !!ASTHelpers.canBeRemoved(methodSymbol, state);",0
Synchronization should not be done on instances of value-based classes,"Synchronize on a new ""Object"" instead.",Aren't `publisher` supposed to be thread-safe? Why is a global lock necessary?,    synchronized (GLOBAL_LOCK) {,1
Searching OS commands in PATH is security-sensitive,"Make sure the ""PATH"" used to find this command includes only what you intend.",Should we be looking under `/proc/self` instead of parsing the pid?,"        .exec(new String[] { ""bash"", ""-c"", ""ls /proc/"" + pidhost.next() + ""/fdinfo | wc -l"" });",0
Formatting SQL queries is security-sensitive,Make sure using a dynamically formatted SQL query is safe here.,"Changes unrelated. Please, revert.","                ""copy from '"" + BULKLOAD_TWO_LINES_CSV_FILE + ""' into "" + tblName +",0
Case insensitive string comparisons should be made without intermediate upper or lower casing,Replace these toUpperCase()/toLowerCase() and equals() calls with a single equalsIgnoreCase() call.,"There is really no problem with this repair. But I think a better way is:
1. Modify MVColumnOneChildPattern
2. ``` 
           if (isReplay) {
                  ignore pattern
            } else {match pattern}
     ```","                if (!isReplay && functionName.toLowerCase().equals(""count"") && functionCallExpr.isDistinct()) {",0
"Null should not be returned from a ""Boolean"" method","Null is returned but a ""Boolean"" is expected.","Just going back to the discussion of default to make sure my understanding is correct, if the returned value is null, does it mean the manifest file would suggest the data file does not contain NaN?

This behavior seems consistent with the default `false` in `PartitionSummary.java`, but logically speaking it seems like returning true as default is more reasonable to suggest a file always might contain NaN. What is the take here?",      return null;,1
"Classes that override ""clone"" should be ""Cloneable"" and call ""super.clone()""",Use super.clone() to create and seed the cloned instance to be returned.,I suggest implementing Serializable interface to implement deep clone instead of overriding Cloneable interface.,    public SubscriptionItem clone() {,1
Exceptions should not be created without being thrown,Throw this exception or remove this useless statement,"            throw new IllegalArgumentException(""wrong stack data"");","            new IllegalArgumentException(""wrong stack data"");",1
Getters and setters should be synchronized in pairs,"Synchronize this method to match the synchronization on ""setModFile"".","Why we need to change this. IMO they have the same meaning, just locking the object itself. ",  public void setModFile(ModificationFile modFile) {,0
Static fields should not be updated in constructors,"Remove this assignment of ""database2Measurement2TagOrders"".",getter / setter,"  public static Map<String, Map<String, Map<String, Integer>>> database2Measurement2TagOrders =",0
Regular expressions should not overflow the stack,Refactor this repetition that can lead to a stack overflow for large inputs.,... what does this other thing you do with .sig here?,"        File src = new File(mockSrc.getParentFile(), mockSrc.getName().replaceFirst(""([$].+)*[.]sig$"", "".java""));",0
"""Random"" objects should be reused","Save and re-use this ""Random"".",make it a class field?,      Random random = new Random();,1
XML parsers should not be vulnerable to XXE attacks,Disable access to external entities in XML parsing.,Is it necessary to create an `XMLStreamReader` as opposed to wrapping the input in a `StreamSource`?,            XMLStreamReader streamReader = XMLInputFactory.newInstance().createXMLStreamReader(input);,0
Package declaration should match source file directory,"This file ""package-info.java"" should be located in ""org/dataportabilityproject/spi"" directory, not in ""/home/fdse/esdata/code-wisdom/services/issue/PRTest/google/data-transfer-project/29/8b8e02a3bdf2fd53f2aa92ddbc05154a3531e7c4/current/portability-spi-cloud/src/main/java/org/dataportabilityproject/spi/client"".",new line warning,package org.dataportabilityproject.spi;,1
"The signature of ""finalize()"" should match that of ""Object.finalize()""",Rename this method to avoid any possible confusion with Object.finalize().,Can it be changed to sync() or flush() instead of finalize() that has special meaning in Java?,"  public void finalize(int operatorId, long windowId) throws IOException;",1
The Object.finalize() method should not be overridden,Do not override the Object.finalize() method.,Can it be changed to sync() or flush() instead of finalize() that has special meaning in Java?,"  public void finalize(int operatorId, long windowId) throws IOException;",1
"""ThreadLocal.withInitial"" should be preferred","Replace this anonymous class with a call to ""ThreadLocal.withInitial"". (sonar.java.source not set. Assuming 8 or greater.)",Let's use DateTimeFormatter from Java Time API instead. ,"    private static final ThreadLocal<SimpleDateFormat> DATE_FORMATTER = new ThreadLocal<SimpleDateFormat>() {
MethodDeclaration         /** {@inheritDoc} */
MethodDeclaration         @Override protected SimpleDateFormat initialValue() {
ReturnStmt             return new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss:SSS Z"");
MethodDeclaration         }
MethodDeclaration     };",0
"Exception types should not be tested using ""instanceof"" in catch blocks","Replace the usage of the ""instanceof"" operator by a catch block.","            catch (ExecutionException e) {
                throw new IgniteException(e.getCause());
            }
            catch (Throwable e) {
                throw new IgniteException(e);
            }","            if (e instanceof ExecutionException) {
BlockStmt                 throw new IgniteException(e.getCause());
BlockStmt             } else {
ThrowStmt                 throw new IgniteException(e);",1
Methods returns should not be invariant,Refactor this method to not always return the same value.,"Frankly, I don't recommend returning method values in a catch block. :)
I have an idea to do the following：

  @Override
  public long getTimePartition(String tsFilePath) throws PartitionViolationException {
    Pair<Boolean, Long> pair = getTimePartitionWithCheck();
    if(pair.left) {
      throw new PartitionViolationException(tsFilePath);
    }else {
      return pair.right;
    }
  }

  public Pair<Boolean, Long> getTimePartitionWithCheck() {
    Pair<Boolean, Long> pair = new Pair(true, -1);
    for (int index : deviceToIndex.values()) {
      long p = StorageEngine.getTimePartition(startTimes[index]);
      if ( pair.right == -1) {
        pair.right = p;
      } else {
        if ( pair.right != p) {
          return pair;
        }
      }
      p = StorageEngine.getTimePartition(endTimes[index]);
      if ( pair.right != p) {
        return pair;
      }
    }
    if ( pair.right == -1) {
      return pair;
    }
    pair.left = false;
    return pair;
  }

Of course，I know that there is already an implementation of 'gettimepartition(..)'. We can take advantage of this opportunity to refactor it. What do you think？",      return false;,0
Regular expressions should not be too complicated,Simplify this regular expression to reduce its complexity from 23 to the 20 allowed.,"Google's tests found a problem with this: the string `0.8252564` is rejected. I think it should be:
`-?(?:0|[1-9][0-9]*)(?:\\.[0-9]+)?(?:[eE][-+]?[0-9]+)?`
I removed the outermost group because it doesn't seem necessary.","    VALID_JSON_NUMBER_PATTERN = Pattern.compile(""-?(?:0|[1-9][0-9]*(?:\\.[0-9]+)?(?:[eE][-+]?[0-9]+)?)"");",1
"""equals(Object obj)"" should test argument type",Add a type test to this method.,"Add `if (!(obj instanceof WeightedMultiWorkUnit) {return false;}` before doing the casting.
",    public boolean equals(Object obj) {,1
Single-character alternations in regular expressions should be replaced with character classes,Replace this alternation with a character class.,better to add some ut❤️,"        String[] parts = javaVersionStr.split(""\\.|\\+"");",0
"""Object.wait(...)"" and ""Condition.await(...)"" should be called inside a ""while"" loop","Remove this call to ""wait"" or move it into a ""while"" loop.","It seems that the wait here could not ensure that the service is started successfully. On the other hand, how could we avoid spurious wakeup?",            started.wait(timeout);,1
Class names should comply with a naming convention,Rename this class name to match the regular expression '^[A-Z][a-zA-Z0-9]*$'.,You can directly change the `IntermediateRecord` to include the record,  public static class fullIntermediateResult extends IntermediateRecord {,0
Loops with at most one iteration should be refactored,"Remove this ""break"" statement or make it conditional.","if （status  == success ） {break}.       

when failed, will use next  configNodeLocation .",      break;,0
"Classes named like ""Exception"" should extend ""Exception"" or a subclass","Rename this class to remove ""Exception"" or correct its inheritance.",Comment missing,public class ExecuteFailedException extends Throwable {,0
A field should not duplicate the name of its containing class,"Rename field ""timeSeries""",I suggest using TreeMap here so that data is sorted on time.,"  private Map<Long, Double> timeSeries = new HashMap<>();",0
"Related ""if/else if"" statements should not have the same condition","This branch can not be reached because the condition duplicates a previous condition in the same sequence of ""if/else if"" statements",This appears to be duplicate,"                } else if (annotation instanceof Attribute.Enum) {
NameExpr                     return false;
NameExpr                 } else if (annotation instanceof Attribute.Enum) {",1
Map values should not be replaced unconditionally,Verify this is the index that was intended; it was already set before.,Should be buffers[1]?,"    buffers[0] = ByteBuffer
BinaryExpr         .allocateDirect(IoTDBDescriptor.getInstance().getConfig().getWalBufferSize() / 2);
ExpressionStmt     buffers[0] = ByteBuffer",0
"Switch cases should end with an unconditional ""break"" statement","End this switch case with an unconditional break, return or throw statement.","Instead of suppressing, we could break these into methods by case.",          case MAP:,1
String.valueOf() should not be appended to a String,Directly append the argument of String.valueOf().,"        String hostPort = host + "":"" + port;","        String hostPort = host + "":"" + String.valueOf(port);",1
Exceptions should not be thrown in finally blocks,Refactor this code to not throw exceptions in finally blocks.,nit: the error message should be different if erroring out during renaming.  `fsout` can also be `tmpPath` instead of `fullPath`.,"        throw new HoodieIOException(""Failed to close file "" + fullPath, e);",0
"Neither ""Math.abs"" nor negation should be used on numbers that could be ""MIN_VALUE""",Use the original value instead.,"Can `segmentName.hashCode() = Integer.MIN_VALUE`? If so, the `segmentPartitionId` can be a negative number, is this expected?",      segmentPartitionId = Math.abs(segmentName.hashCode());,1
Return values from functions without side effects should not be ignored,"The return value of ""get"" must be used.",currentCount = bucketNameToCount.get(bucketName);,        bucketNameToCount.get(bucketName);,1
Exception classes should be immutable,"Make this ""datasetName"" field final.","Seems like there is a lot of overlap in the fields: datasetName, dbName, tableName, topicName, topicPartition. Can we keep only the ones needed and derive the rest from those fields?",  public String datasetName;,0
Catches should be combined,"Combine this catch with the one at line 673, which has the same body. (sonar.java.source not set. Assuming 7 or greater.)","Why? Shall we add a link to the reason?

It is a bit weird a patch version bump cause behavior changes.","            // correct, this happens on ZK 3.6.3+",0
